//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.VSSP.WorkEntity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class vssp_entity : DbContext
    {
        public vssp_entity()
            : base("name=vssp_entity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tbl_MST_CustomerContact> Tbl_MST_CustomerContact { get; set; }
        public virtual DbSet<Tbl_MST_PartFinishGoodsPrice> Tbl_MST_PartFinishGoodsPrice { get; set; }
        public virtual DbSet<Tbl_MST_PartFinishGoodsRelation> Tbl_MST_PartFinishGoodsRelation { get; set; }
        public virtual DbSet<Tbl_MST_PartRawMaterialsPrice> Tbl_MST_PartRawMaterialsPrice { get; set; }
        public virtual DbSet<Tbl_MST_Supplier> Tbl_MST_Supplier { get; set; }
        public virtual DbSet<Tbl_MST_SupplierContact> Tbl_MST_SupplierContact { get; set; }
        public virtual DbSet<Tbl_MST_WarehouseArea> Tbl_MST_WarehouseArea { get; set; }
        public virtual DbSet<Tbl_MST_WarehouseLocation> Tbl_MST_WarehouseLocation { get; set; }
        public virtual DbSet<Tbl_TRS_DeliveryOrderImport> Tbl_TRS_DeliveryOrderImport { get; set; }
        public virtual DbSet<Tbl_MST_MeasurementsCategories> Tbl_MST_MeasurementsCategories { get; set; }
        public virtual DbSet<Tbl_MST_MeasurementsUnits> Tbl_MST_MeasurementsUnits { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingCalendar> Tbl_TMS_WorkingCalendar { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingCalendarDay> Tbl_TMS_WorkingCalendarDay { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingDay> Tbl_TMS_WorkingDay { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingDayType> Tbl_TMS_WorkingDayType { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingShiftGroup> Tbl_TMS_WorkingShiftGroup { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingShiftMaster> Tbl_TMS_WorkingShiftMaster { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingShiftHour> Tbl_TMS_WorkingShiftHour { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingShiftPatternGroup> Tbl_TMS_WorkingShiftPatternGroup { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingShiftPatternMaster> Tbl_TMS_WorkingShiftPatternMaster { get; set; }
        public virtual DbSet<Tbl_TMS_WorkingShiftSchedule> Tbl_TMS_WorkingShiftSchedule { get; set; }
        public virtual DbSet<Tbl_MST_KanbanCycle> Tbl_MST_KanbanCycle { get; set; }
        public virtual DbSet<Tbl_MST_KanbanCycleTime> Tbl_MST_KanbanCycleTime { get; set; }
        public virtual DbSet<Tbl_TRS_Status> Tbl_TRS_Status { get; set; }
        public virtual DbSet<Vw_TRS_ForecastOrder> Vw_TRS_ForecastOrder { get; set; }
        public virtual DbSet<Tbl_MST_PartRawMaterialsCostCenter> Tbl_MST_PartRawMaterialsCostCenter { get; set; }
        public virtual DbSet<Tbl_MST_SupplierCostCenter> Tbl_MST_SupplierCostCenter { get; set; }
        public virtual DbSet<Tbl_MST_MeasurementsPacking> Tbl_MST_MeasurementsPacking { get; set; }
        public virtual DbSet<Vw_TRS_SalesOrder> Vw_TRS_SalesOrder { get; set; }
        public virtual DbSet<Tbl_TRS_ForecastOrder> Tbl_TRS_ForecastOrder { get; set; }
        public virtual DbSet<Tbl_TRS_ForecastOrderApproval> Tbl_TRS_ForecastOrderApproval { get; set; }
        public virtual DbSet<Tbl_TRS_ForecastOrderRevision> Tbl_TRS_ForecastOrderRevision { get; set; }
        public virtual DbSet<Vw_TMS_ShiftGroup> Vw_TMS_ShiftGroup { get; set; }
        public virtual DbSet<Tbl_MST_KanbanCalculation> Tbl_MST_KanbanCalculation { get; set; }
        public virtual DbSet<Tbl_TRS_SupplierOrderDetail> Tbl_TRS_SupplierOrderDetail { get; set; }
        public virtual DbSet<Tbl_TRS_Stock> Tbl_TRS_Stock { get; set; }
        public virtual DbSet<Tbl_TRS_SupplierOrderKanban> Tbl_TRS_SupplierOrderKanban { get; set; }
        public virtual DbSet<Tbl_TRS_StockTakingApproval> Tbl_TRS_StockTakingApproval { get; set; }
        public virtual DbSet<Tbl_TRS_StockAdjustment> Tbl_TRS_StockAdjustment { get; set; }
        public virtual DbSet<Tbl_TRS_StockAdjustmentApproval> Tbl_TRS_StockAdjustmentApproval { get; set; }
        public virtual DbSet<Tbl_TRS_StockAdjustmentDetail> Tbl_TRS_StockAdjustmentDetail { get; set; }
        public virtual DbSet<Tbl_MST_Bank> Tbl_MST_Bank { get; set; }
        public virtual DbSet<Tbl_MST_SupplierBankAccount> Tbl_MST_SupplierBankAccount { get; set; }
        public virtual DbSet<Tbl_ACC_InvoiceRecapApproval> Tbl_ACC_InvoiceRecapApproval { get; set; }
        public virtual DbSet<Tbl_ACC_InvoiceRecapDetail> Tbl_ACC_InvoiceRecapDetail { get; set; }
        public virtual DbSet<Vw_ACC_InvoiceRecap> Vw_ACC_InvoiceRecap { get; set; }
        public virtual DbSet<Tbl_MST_AccountingCategory> Tbl_MST_AccountingCategory { get; set; }
        public virtual DbSet<Tbl_MST_AccountingClassification> Tbl_MST_AccountingClassification { get; set; }
        public virtual DbSet<Tbl_MST_AccountingPayment> Tbl_MST_AccountingPayment { get; set; }
        public virtual DbSet<Tbl_TRS_MasterListKanbanSupplier> Tbl_TRS_MasterListKanbanSupplier { get; set; }
        public virtual DbSet<Vw_TRS_SupplierOrderDetail> Vw_TRS_SupplierOrderDetail { get; set; }
        public virtual DbSet<Vw_TRS_DeliveryOrderRelation> Vw_TRS_DeliveryOrderRelation { get; set; }
        public virtual DbSet<Tbl_TRS_QrCodePath> Tbl_TRS_QrCodePath { get; set; }
        public virtual DbSet<Tbl_TRS_SalesOrder> Tbl_TRS_SalesOrder { get; set; }
        public virtual DbSet<Tbl_TRS_SalesOrderDetail> Tbl_TRS_SalesOrderDetail { get; set; }
        public virtual DbSet<Tbl_MST_PartFinishGoods> Tbl_MST_PartFinishGoods { get; set; }
        public virtual DbSet<Tbl_TRS_SupplierOrder> Tbl_TRS_SupplierOrder { get; set; }
        public virtual DbSet<Tbl_TRS_StockSSP> Tbl_TRS_StockSSP { get; set; }
        public virtual DbSet<Tbl_MST_SpecialSupplyPart> Tbl_MST_SpecialSupplyPart { get; set; }
        public virtual DbSet<Vw_TRS_SupplierOrder> Vw_TRS_SupplierOrder { get; set; }
        public virtual DbSet<Tbl_MST_PartRawMaterials> Tbl_MST_PartRawMaterials { get; set; }
        public virtual DbSet<Tbl_TRS_ScheduleDelivery> Tbl_TRS_ScheduleDelivery { get; set; }
        public virtual DbSet<Vw_TRS_DeliveryOrderDetail> Vw_TRS_DeliveryOrderDetail { get; set; }
        public virtual DbSet<Tbl_MST_KanbanSetting> Tbl_MST_KanbanSetting { get; set; }
        public virtual DbSet<Tbl_MST_KanbanSettingSequence> Tbl_MST_KanbanSettingSequence { get; set; }
        public virtual DbSet<Tbl_TRS_DeliveryOrderDetail> Tbl_TRS_DeliveryOrderDetail { get; set; }
        public virtual DbSet<Tbl_TRS_StockFG> Tbl_TRS_StockFG { get; set; }
        public virtual DbSet<Tbl_TRS_DeliveryOrderKanban> Tbl_TRS_DeliveryOrderKanban { get; set; }
        public virtual DbSet<Tbl_TRS_DeliveryOrderKanbanTemp> Tbl_TRS_DeliveryOrderKanbanTemp { get; set; }
        public virtual DbSet<Tbl_MST_Customer> Tbl_MST_Customer { get; set; }
        public virtual DbSet<Vw_TRS_DeliveryOrderKanbanSumTemp> Vw_TRS_DeliveryOrderKanbanSumTemp { get; set; }
        public virtual DbSet<Tbl_TRS_StockTakingDetail> Tbl_TRS_StockTakingDetail { get; set; }
        public virtual DbSet<Vw_TRS_StockTakingDetail> Vw_TRS_StockTakingDetail { get; set; }
        public virtual DbSet<Vw_TRS_StockAdjustmentDetail> Vw_TRS_StockAdjustmentDetail { get; set; }
        public virtual DbSet<Vw_SYS_SchemaColumnList> Vw_SYS_SchemaColumnList { get; set; }
        public virtual DbSet<Vw_SYS_SchemaList> Vw_SYS_SchemaList { get; set; }
        public virtual DbSet<Vw_TRS_ReportDeliveryOrder> Vw_TRS_ReportDeliveryOrder { get; set; }
        public virtual DbSet<Vw_TRS_ReportSalesOrder> Vw_TRS_ReportSalesOrder { get; set; }
        public virtual DbSet<Vw_TRS_ReportSalesOrderSummary> Vw_TRS_ReportSalesOrderSummary { get; set; }
        public virtual DbSet<Vw_TRS_ReportDeliveryOrderSummary> Vw_TRS_ReportDeliveryOrderSummary { get; set; }
        public virtual DbSet<Tbl_ACC_CustomerInvoiceApproval> Tbl_ACC_CustomerInvoiceApproval { get; set; }
        public virtual DbSet<Tbl_ACC_CustomerInvoiceDetail> Tbl_ACC_CustomerInvoiceDetail { get; set; }
        public virtual DbSet<Tbl_ACC_CustomerInvoiceDetailTemp> Tbl_ACC_CustomerInvoiceDetailTemp { get; set; }
        public virtual DbSet<Vw_ACC_CustomerInvoiceDetail> Vw_ACC_CustomerInvoiceDetail { get; set; }
        public virtual DbSet<Tbl_ACC_InvoiceRecap> Tbl_ACC_InvoiceRecap { get; set; }
        public virtual DbSet<Tbl_MST_AccountingBankAccount> Tbl_MST_AccountingBankAccount { get; set; }
        public virtual DbSet<Tbl_ACC_CustomerInvoice> Tbl_ACC_CustomerInvoice { get; set; }
        public virtual DbSet<Vw_ACC_CustomerInvoiceDetailList> Vw_ACC_CustomerInvoiceDetailList { get; set; }
        public virtual DbSet<Vw_TRS_SalesDeliveryStatus> Vw_TRS_SalesDeliveryStatus { get; set; }
        public virtual DbSet<Vw_ACC_CustomerInvoiceReceivable> Vw_ACC_CustomerInvoiceReceivable { get; set; }
        public virtual DbSet<Vw_ACC_CustomerInvoiceReceivableYearly> Vw_ACC_CustomerInvoiceReceivableYearly { get; set; }
        public virtual DbSet<Tbl_MST_PartProductionMaterialsPrice> Tbl_MST_PartProductionMaterialsPrice { get; set; }
        public virtual DbSet<Tbl_MST_PartProductionMaterials> Tbl_MST_PartProductionMaterials { get; set; }
        public virtual DbSet<Tbl_MST_PartType> Tbl_MST_PartType { get; set; }
        public virtual DbSet<Tbl_MST_Color> Tbl_MST_Color { get; set; }
        public virtual DbSet<Tbl_MST_LineGroup> Tbl_MST_LineGroup { get; set; }
        public virtual DbSet<Tbl_MST_PartBillOfMaterialsDetails> Tbl_MST_PartBillOfMaterialsDetails { get; set; }
        public virtual DbSet<Tbl_TRS_ControlPlanningApproval> Tbl_TRS_ControlPlanningApproval { get; set; }
        public virtual DbSet<Tbl_TRS_ControlPlanningDetail> Tbl_TRS_ControlPlanningDetail { get; set; }
        public virtual DbSet<Tbl_TRS_ControlPlanningRevision> Tbl_TRS_ControlPlanningRevision { get; set; }
        public virtual DbSet<Tbl_TRS_MasterListKanbanProduction> Tbl_TRS_MasterListKanbanProduction { get; set; }
        public virtual DbSet<Tbl_TRS_ScheduleProduction> Tbl_TRS_ScheduleProduction { get; set; }
        public virtual DbSet<Tbl_TRS_ControlPlanning> Tbl_TRS_ControlPlanning { get; set; }
        public virtual DbSet<Vw_TRS_ControlPlanning> Vw_TRS_ControlPlanning { get; set; }
        public virtual DbSet<Vw_TRS_ScheduleProduction> Vw_TRS_ScheduleProduction { get; set; }
        public virtual DbSet<Tbl_MST_Line> Tbl_MST_Line { get; set; }
        public virtual DbSet<Vw_MST_AreaLine> Vw_MST_AreaLine { get; set; }
        public virtual DbSet<Tbl_MST_KanbanProduction> Tbl_MST_KanbanProduction { get; set; }
        public virtual DbSet<Vw_MST_KanbanProductionList> Vw_MST_KanbanProductionList { get; set; }
        public virtual DbSet<Tbl_TRS_StockWIP> Tbl_TRS_StockWIP { get; set; }
        public virtual DbSet<Tbl_TRS_RequestOrderPartsDetail> Tbl_TRS_RequestOrderPartsDetail { get; set; }
        public virtual DbSet<Vw_TRS_RequestOrderPartsDetail> Vw_TRS_RequestOrderPartsDetail { get; set; }
        public virtual DbSet<Tbl_TRS_RequestOrderPartsApproval> Tbl_TRS_RequestOrderPartsApproval { get; set; }
        public virtual DbSet<Tbl_TRS_DeliveryOrder> Tbl_TRS_DeliveryOrder { get; set; }
        public virtual DbSet<Tbl_TRS_StockTaking> Tbl_TRS_StockTaking { get; set; }
        public virtual DbSet<Vw_MST_BillOfMaterials> Vw_MST_BillOfMaterials { get; set; }
        public virtual DbSet<Vw_IDX_StockTakingEvent> Vw_IDX_StockTakingEvent { get; set; }
        public virtual DbSet<Vw_IDX_StockListSummary> Vw_IDX_StockListSummary { get; set; }
        public virtual DbSet<Tbl_TRS_ForecastOrderDetail> Tbl_TRS_ForecastOrderDetail { get; set; }
        public virtual DbSet<Vw_ACC_CustomerInvoiceDeliveryRecap> Vw_ACC_CustomerInvoiceDeliveryRecap { get; set; }
        public virtual DbSet<Vw_MST_PartMaterials> Vw_MST_PartMaterials { get; set; }
        public virtual DbSet<Vw_MST_BillOfMaterialsDetails> Vw_MST_BillOfMaterialsDetails { get; set; }
        public virtual DbSet<Vw_MST_PartFinishGoodsPrice> Vw_MST_PartFinishGoodsPrice { get; set; }
        public virtual DbSet<Tbl_ACC_InvoiceRecapDetailTemp> Tbl_ACC_InvoiceRecapDetailTemp { get; set; }
        public virtual DbSet<Vw_MST_PartRawMaterialsPrice> Vw_MST_PartRawMaterialsPrice { get; set; }
        public virtual DbSet<Vw_TRS_SupplierOrderShortage> Vw_TRS_SupplierOrderShortage { get; set; }
        public virtual DbSet<Tbl_MST_PartBillOfMaterials> Tbl_MST_PartBillOfMaterials { get; set; }
        public virtual DbSet<Tbl_MST_DefectList> Tbl_MST_DefectList { get; set; }
        public virtual DbSet<Tbl_MST_DefectCategory> Tbl_MST_DefectCategory { get; set; }
        public virtual DbSet<Tbl_TRS_RequestOrderParts> Tbl_TRS_RequestOrderParts { get; set; }
        public virtual DbSet<Vw_TRS_RequestOrderPartCreateList> Vw_TRS_RequestOrderPartCreateList { get; set; }
        public virtual DbSet<Vw_TRS_RequestOrderParts> Vw_TRS_RequestOrderParts { get; set; }
        public virtual DbSet<Vw_MST_PartFinishGoods> Vw_MST_PartFinishGoods { get; set; }
        public virtual DbSet<Tbl_QC_Inspection> Tbl_QC_Inspection { get; set; }
        public virtual DbSet<Vw_QC_Inspection> Vw_QC_Inspection { get; set; }
        public virtual DbSet<Vw_ACC_CustomerInvoice> Vw_ACC_CustomerInvoice { get; set; }
        public virtual DbSet<Vw_MST_Customer> Vw_MST_Customer { get; set; }
        public virtual DbSet<Vw_MST_Supplier> Vw_MST_Supplier { get; set; }
        public virtual DbSet<Tbl_QC_InspectionDefects> Tbl_QC_InspectionDefects { get; set; }
        public virtual DbSet<Tbl_ACC_CustomerInvoiceReceivable> Tbl_ACC_CustomerInvoiceReceivable { get; set; }
        public virtual DbSet<Vw_MST_PartRawMaterials> Vw_MST_PartRawMaterials { get; set; }
        public virtual DbSet<Vw_MST_PartRawMaterialsByLine> Vw_MST_PartRawMaterialsByLine { get; set; }
        public virtual DbSet<Vw_MST_PartFinishGoodsRelation> Vw_MST_PartFinishGoodsRelation { get; set; }
        public virtual DbSet<Tbl_TRS_ProductionNGProcess> Tbl_TRS_ProductionNGProcess { get; set; }
        public virtual DbSet<Vw_TRS_SalesOrderOutstanding> Vw_TRS_SalesOrderOutstanding { get; set; }
        public virtual DbSet<Vw_ACC_InvoiceRecapDetail> Vw_ACC_InvoiceRecapDetail { get; set; }
        public virtual DbSet<Vw_ACC_InvoiceRecapDetailTemp> Vw_ACC_InvoiceRecapDetailTemp { get; set; }
        public virtual DbSet<Tbl_MST_InspectionGate> Tbl_MST_InspectionGate { get; set; }
        public virtual DbSet<Tbl_QC_InspectionIncoming> Tbl_QC_InspectionIncoming { get; set; }
        public virtual DbSet<Vw_QC_InspectionIncoming> Vw_QC_InspectionIncoming { get; set; }
        public virtual DbSet<Tbl_QC_InspectionIncomingDefects> Tbl_QC_InspectionIncomingDefects { get; set; }
        public virtual DbSet<Vw_QC_InspectionIncomingDefects> Vw_QC_InspectionIncomingDefects { get; set; }
        public virtual DbSet<Tbl_TRS_StockRawReturn> Tbl_TRS_StockRawReturn { get; set; }
        public virtual DbSet<Vw_TRS_StockRawReturn> Vw_TRS_StockRawReturn { get; set; }
        public virtual DbSet<Vw_TRS_ReturnPart> Vw_TRS_ReturnPart { get; set; }
        public virtual DbSet<Vw_TRS_ReturnPartDetail> Vw_TRS_ReturnPartDetail { get; set; }
        public virtual DbSet<Tbl_TRS_ReturnPart> Tbl_TRS_ReturnPart { get; set; }
        public virtual DbSet<Tbl_TRS_ReturnPartDetail> Tbl_TRS_ReturnPartDetail { get; set; }
        public virtual DbSet<Vw_TRS_ReceivingOrder> Vw_TRS_ReceivingOrder { get; set; }
        public virtual DbSet<Tbl_TRS_ReceivingOrder> Tbl_TRS_ReceivingOrder { get; set; }
        public virtual DbSet<Tbl_TRS_ReceivingOrderDetailKanbanTemp> Tbl_TRS_ReceivingOrderDetailKanbanTemp { get; set; }
        public virtual DbSet<Tbl_TRS_ReceivingOrderDetailKanban> Tbl_TRS_ReceivingOrderDetailKanban { get; set; }
        public virtual DbSet<Vw_TRS_ReceivingOrderDetail> Vw_TRS_ReceivingOrderDetail { get; set; }
        public virtual DbSet<Vw_TRS_ReceivingOrderDetailTemp> Vw_TRS_ReceivingOrderDetailTemp { get; set; }
        public virtual DbSet<Vw_TRS_ReceivingOrderDetailKanban> Vw_TRS_ReceivingOrderDetailKanban { get; set; }
        public virtual DbSet<Vw_TRS_ReceivingOrderDetailKanbanTemp> Vw_TRS_ReceivingOrderDetailKanbanTemp { get; set; }
        public virtual DbSet<Tbl_MST_PartIdentificationSupplier> Tbl_MST_PartIdentificationSupplier { get; set; }
        public virtual DbSet<Tbl_TRS_ProductionLineProcess> Tbl_TRS_ProductionLineProcess { get; set; }
        public virtual DbSet<Vw_TRS_ProductionLineProcess> Vw_TRS_ProductionLineProcess { get; set; }
        public virtual DbSet<Tbl_MST_LineGate> Tbl_MST_LineGate { get; set; }
        public virtual DbSet<Vw_TRS_ProductionLineProcessList> Vw_TRS_ProductionLineProcessList { get; set; }
        public virtual DbSet<Vw_QC_InspectionDefects> Vw_QC_InspectionDefects { get; set; }
        public virtual DbSet<Tbl_QC_ProblemInformationApproval> Tbl_QC_ProblemInformationApproval { get; set; }
        public virtual DbSet<Tbl_QC_ProblemInformation> Tbl_QC_ProblemInformation { get; set; }
        public virtual DbSet<Vw_QC_ProblemInformation> Vw_QC_ProblemInformation { get; set; }
        public virtual DbSet<Tbl_MST_PartIdentification> Tbl_MST_PartIdentification { get; set; }
        public virtual DbSet<Tbl_TRS_ReceivingOrderDetail> Tbl_TRS_ReceivingOrderDetail { get; set; }
        public virtual DbSet<Vw_TRS_StockTaking> Vw_TRS_StockTaking { get; set; }
        public virtual DbSet<Vw_TRS_StockAdjustment> Vw_TRS_StockAdjustment { get; set; }
        public virtual DbSet<Vw_TRS_Stock> Vw_TRS_Stock { get; set; }
        public virtual DbSet<Vw_TRS_StockFG> Vw_TRS_StockFG { get; set; }
        public virtual DbSet<Vw_TRS_StockList> Vw_TRS_StockList { get; set; }
        public virtual DbSet<Vw_TRS_StockWIP> Vw_TRS_StockWIP { get; set; }
        public virtual DbSet<Vw_TRS_ForecastAchievement> Vw_TRS_ForecastAchievement { get; set; }
        public virtual DbSet<Vw_TRS_StockControlDaily> Vw_TRS_StockControlDaily { get; set; }
        public virtual DbSet<Vw_TRS_SalesOrderAchievements> Vw_TRS_SalesOrderAchievements { get; set; }
        public virtual DbSet<Vw_MST_PartRawMaterialsPriceMonthly> Vw_MST_PartRawMaterialsPriceMonthly { get; set; }
        public virtual DbSet<Vw_TRS_StockFinanceReport> Vw_TRS_StockFinanceReport { get; set; }
        public virtual DbSet<Vw_TRS_ProductionNGProcessList> Vw_TRS_ProductionNGProcessList { get; set; }
        public virtual DbSet<Vw_TRS_DeliveryOrder> Vw_TRS_DeliveryOrder { get; set; }
        public virtual DbSet<Tbl_MST_ApprovedCustom> Tbl_MST_ApprovedCustom { get; set; }
    
        public virtual ObjectResult<SP_SYS_UsageProcessorInfo_Result> SP_SYS_UsageProcessorInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_UsageProcessorInfo_Result>("SP_SYS_UsageProcessorInfo");
        }
    
        public virtual ObjectResult<SP_SYS_UsageDatabaseInfo_Result> SP_SYS_UsageDatabaseInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_UsageDatabaseInfo_Result>("SP_SYS_UsageDatabaseInfo");
        }
    
        public virtual ObjectResult<SP_SYS_UsageDriveInfo_Result> SP_SYS_UsageDriveInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_UsageDriveInfo_Result>("SP_SYS_UsageDriveInfo");
        }
    
        public virtual ObjectResult<SP_SYS_DatabaseBackupList_Result> SP_SYS_DatabaseBackupList(string backupdir, string backupdb)
        {
            var backupdirParameter = backupdir != null ?
                new ObjectParameter("backupdir", backupdir) :
                new ObjectParameter("backupdir", typeof(string));
    
            var backupdbParameter = backupdb != null ?
                new ObjectParameter("backupdb", backupdb) :
                new ObjectParameter("backupdb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_DatabaseBackupList_Result>("SP_SYS_DatabaseBackupList", backupdirParameter, backupdbParameter);
        }
    
        public virtual ObjectResult<SP_SYS_DatabaseBackup_Result> SP_SYS_DatabaseBackup(string backupdir, string backupdb)
        {
            var backupdirParameter = backupdir != null ?
                new ObjectParameter("backupdir", backupdir) :
                new ObjectParameter("backupdir", typeof(string));
    
            var backupdbParameter = backupdb != null ?
                new ObjectParameter("backupdb", backupdb) :
                new ObjectParameter("backupdb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_DatabaseBackup_Result>("SP_SYS_DatabaseBackup", backupdirParameter, backupdbParameter);
        }
    
        public virtual ObjectResult<SP_TMS_CalendarView_Result> SP_TMS_CalendarView(string year, string month)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TMS_CalendarView_Result>("SP_TMS_CalendarView", yearParameter, monthParameter);
        }
    
        public virtual int SP_CRUD_WorkingShiftSchedule(string pGroupID, Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<bool> pReplace, string pUserId)
        {
            var pGroupIDParameter = pGroupID != null ?
                new ObjectParameter("pGroupID", pGroupID) :
                new ObjectParameter("pGroupID", typeof(string));
    
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pReplaceParameter = pReplace.HasValue ?
                new ObjectParameter("pReplace", pReplace) :
                new ObjectParameter("pReplace", typeof(bool));
    
            var pUserIdParameter = pUserId != null ?
                new ObjectParameter("pUserId", pUserId) :
                new ObjectParameter("pUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_WorkingShiftSchedule", pGroupIDParameter, pStartDateParameter, pEndDateParameter, pReplaceParameter, pUserIdParameter);
        }
    
        public virtual int SP_TMS_WorkingShiftSchedule(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string groupId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var groupIdParameter = groupId != null ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TMS_WorkingShiftSchedule", startDateParameter, endDateParameter, groupIdParameter);
        }
    
        public virtual ObjectResult<SP_TRS_ForecastOrderDetailLast_Result> SP_TRS_ForecastOrderDetailLast(string supplierid, string month, string year, string ordernumber)
        {
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TRS_ForecastOrderDetailLast_Result>("SP_TRS_ForecastOrderDetailLast", supplieridParameter, monthParameter, yearParameter, ordernumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_Workday_Result> SP_GET_WorkDay(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string shiftgroup, Nullable<bool> holiday)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var shiftgroupParameter = shiftgroup != null ?
                new ObjectParameter("shiftgroup", shiftgroup) :
                new ObjectParameter("shiftgroup", typeof(string));
    
            var holidayParameter = holiday.HasValue ?
                new ObjectParameter("holiday", holiday) :
                new ObjectParameter("holiday", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_Workday_Result>("SP_GET_WorkDay", startdateParameter, enddateParameter, shiftgroupParameter, holidayParameter);
        }
    
        public virtual ObjectResult<SP_GET_ForecastNumber_Result> SP_GET_ForecastNumber(string month, string years, string compId)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearsParameter = years != null ?
                new ObjectParameter("Years", years) :
                new ObjectParameter("Years", typeof(string));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ForecastNumber_Result>("SP_GET_ForecastNumber", monthParameter, yearsParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_SalesNumber_Result> SP_GET_SalesNumber(string month, string years, string compId)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearsParameter = years != null ?
                new ObjectParameter("Years", years) :
                new ObjectParameter("Years", typeof(string));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SalesNumber_Result>("SP_GET_SalesNumber", monthParameter, yearsParameter, compIdParameter);
        }
    
        public virtual int SP_CRUD_MasterKanbanListDetail(string ordernumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_MasterKanbanListDetail", ordernumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_SupplierOrderNumber_Result> SP_GET_SupplierOrderNumber(string supplierId, Nullable<System.DateTime> orderDate, string compId)
        {
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SupplierOrderNumber_Result>("SP_GET_SupplierOrderNumber", supplierIdParameter, orderDateParameter, compIdParameter);
        }
    
        public virtual int SP_CRUD_MasterKanbanListStock(string ordernumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_MasterKanbanListStock", ordernumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_OnOrderStock_Result> SP_GET_OnOrderStock(string ordernumber, string supplierid, string partnumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_OnOrderStock_Result>("SP_GET_OnOrderStock", ordernumberParameter, supplieridParameter, partnumberParameter);
        }
    
        public virtual int SP_CRUD_GenerateKanban(string ordernumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_GenerateKanban", ordernumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_ReceivingOrderNumber_Result> SP_GET_ReceivingOrderNumber(string supplierId, Nullable<System.DateTime> receiveDate, string compId)
        {
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var receiveDateParameter = receiveDate.HasValue ?
                new ObjectParameter("ReceiveDate", receiveDate) :
                new ObjectParameter("ReceiveDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ReceivingOrderNumber_Result>("SP_GET_ReceivingOrderNumber", supplierIdParameter, receiveDateParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_SupplierOrderOpen_Result> SP_GET_SupplierOrderOpen(string ordertype, string ordernumber)
        {
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("ordertype", ordertype) :
                new ObjectParameter("ordertype", typeof(string));
    
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SupplierOrderOpen_Result>("SP_GET_SupplierOrderOpen", ordertypeParameter, ordernumberParameter);
        }
    
        public virtual int SP_CRUD_StockFromDelivery(string pdonumber, string pcustomerid, string ppartnumber)
        {
            var pdonumberParameter = pdonumber != null ?
                new ObjectParameter("pdonumber", pdonumber) :
                new ObjectParameter("pdonumber", typeof(string));
    
            var pcustomeridParameter = pcustomerid != null ?
                new ObjectParameter("pcustomerid", pcustomerid) :
                new ObjectParameter("pcustomerid", typeof(string));
    
            var ppartnumberParameter = ppartnumber != null ?
                new ObjectParameter("ppartnumber", ppartnumber) :
                new ObjectParameter("ppartnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockFromDelivery", pdonumberParameter, pcustomeridParameter, ppartnumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_StockTakingNumber_Result> SP_GET_StockTakingNumber(Nullable<System.DateTime> inventoryDate, string compId)
        {
            var inventoryDateParameter = inventoryDate.HasValue ?
                new ObjectParameter("InventoryDate", inventoryDate) :
                new ObjectParameter("InventoryDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_StockTakingNumber_Result>("SP_GET_StockTakingNumber", inventoryDateParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_StockAdjustmentNumber_Result> SP_GET_StockAdjustmentNumber(Nullable<System.DateTime> adjustmentDate, string compId)
        {
            var adjustmentDateParameter = adjustmentDate.HasValue ?
                new ObjectParameter("AdjustmentDate", adjustmentDate) :
                new ObjectParameter("AdjustmentDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_StockAdjustmentNumber_Result>("SP_GET_StockAdjustmentNumber", adjustmentDateParameter, compIdParameter);
        }
    
        public virtual int SP_CRUD_SupplierOrderStatus(string ordernumber, Nullable<bool> returnpart, string action)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var returnpartParameter = returnpart.HasValue ?
                new ObjectParameter("returnpart", returnpart) :
                new ObjectParameter("returnpart", typeof(bool));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_SupplierOrderStatus", ordernumberParameter, returnpartParameter, actionParameter);
        }
    
        public virtual ObjectResult<SP_IDX_SummaryMaster_Result> SP_IDX_SummaryMaster(string month, string years)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearsParameter = years != null ?
                new ObjectParameter("years", years) :
                new ObjectParameter("years", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_SummaryMaster_Result>("SP_IDX_SummaryMaster", monthParameter, yearsParameter);
        }
    
        public virtual ObjectResult<SP_IDX_TransactionChart_Result> SP_IDX_TransactionChart(string month, string years)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearsParameter = years != null ?
                new ObjectParameter("years", years) :
                new ObjectParameter("years", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_TransactionChart_Result>("SP_IDX_TransactionChart", monthParameter, yearsParameter);
        }
    
        public virtual ObjectResult<SP_IDX_StockKanbanSummary_Result> SP_IDX_StockKanbanSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_StockKanbanSummary_Result>("SP_IDX_StockKanbanSummary");
        }
    
        public virtual ObjectResult<SP_IDX_UpcomingReceiving_Result> SP_IDX_UpcomingReceiving(Nullable<System.DateTime> receivedate)
        {
            var receivedateParameter = receivedate.HasValue ?
                new ObjectParameter("receivedate", receivedate) :
                new ObjectParameter("receivedate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_UpcomingReceiving_Result>("SP_IDX_UpcomingReceiving", receivedateParameter);
        }
    
        public virtual ObjectResult<SP_GET_InvoiceRecapNumber_Result> SP_GET_InvoiceRecapNumber(string supplierId, Nullable<System.DateTime> recapDate, string compId)
        {
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var recapDateParameter = recapDate.HasValue ?
                new ObjectParameter("RecapDate", recapDate) :
                new ObjectParameter("RecapDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_InvoiceRecapNumber_Result>("SP_GET_InvoiceRecapNumber", supplierIdParameter, recapDateParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_InvoiceRecapDetail_Result> SP_GET_InvoiceRecapDetail(string recapnumber, string supplierid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string formaction)
        {
            var recapnumberParameter = recapnumber != null ?
                new ObjectParameter("recapnumber", recapnumber) :
                new ObjectParameter("recapnumber", typeof(string));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_InvoiceRecapDetail_Result>("SP_GET_InvoiceRecapDetail", recapnumberParameter, supplieridParameter, startdateParameter, enddateParameter, formactionParameter);
        }
    
        public virtual int SP_CRUD_MasterKanbanListSupplier(string ordernumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_MasterKanbanListSupplier", ordernumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_Ledger_Result> SP_GET_Ledger(string recapyears, string recapmonth, string supplierid)
        {
            var recapyearsParameter = recapyears != null ?
                new ObjectParameter("recapyears", recapyears) :
                new ObjectParameter("recapyears", typeof(string));
    
            var recapmonthParameter = recapmonth != null ?
                new ObjectParameter("recapmonth", recapmonth) :
                new ObjectParameter("recapmonth", typeof(string));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_Ledger_Result>("SP_GET_Ledger", recapyearsParameter, recapmonthParameter, supplieridParameter);
        }
    
        public virtual ObjectResult<SP_GET_PaymentRecap_Result> SP_GET_PaymentRecap(string recapyears, string recapmonth, string supplierid)
        {
            var recapyearsParameter = recapyears != null ?
                new ObjectParameter("recapyears", recapyears) :
                new ObjectParameter("recapyears", typeof(string));
    
            var recapmonthParameter = recapmonth != null ?
                new ObjectParameter("recapmonth", recapmonth) :
                new ObjectParameter("recapmonth", typeof(string));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PaymentRecap_Result>("SP_GET_PaymentRecap", recapyearsParameter, recapmonthParameter, supplieridParameter);
        }
    
        public virtual ObjectResult<SP_GET_TransferList_Result> SP_GET_TransferList(string recapyears, string recapmonth, string supplierid)
        {
            var recapyearsParameter = recapyears != null ?
                new ObjectParameter("recapyears", recapyears) :
                new ObjectParameter("recapyears", typeof(string));
    
            var recapmonthParameter = recapmonth != null ?
                new ObjectParameter("recapmonth", recapmonth) :
                new ObjectParameter("recapmonth", typeof(string));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_TransferList_Result>("SP_GET_TransferList", recapyearsParameter, recapmonthParameter, supplieridParameter);
        }
    
        public virtual ObjectResult<SP_TRS_RawMaterialTransaction_Result> SP_TRS_RawMaterialTransaction(string supplierid, string partnumber, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TRS_RawMaterialTransaction_Result>("SP_TRS_RawMaterialTransaction", supplieridParameter, partnumberParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_GET_DeliveryOrderNumber_Result> SP_GET_DeliveryOrderNumber(string customerId, Nullable<System.DateTime> orderDate, string compId)
        {
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DeliveryOrderNumber_Result>("SP_GET_DeliveryOrderNumber", customerIdParameter, orderDateParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_IDX_DeliverySummary_Result> SP_IDX_DeliverySummary(Nullable<System.DateTime> today, string customerid, string partnumber)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            var customeridParameter = customerid != null ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_DeliverySummary_Result>("SP_IDX_DeliverySummary", todayParameter, customeridParameter, partnumberParameter);
        }
    
        public virtual ObjectResult<SP_IDX_DeliverySummaryDetail_Result> SP_IDX_DeliverySummaryDetail(Nullable<System.DateTime> today, string customerid, string partnumber)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            var customeridParameter = customerid != null ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_DeliverySummaryDetail_Result>("SP_IDX_DeliverySummaryDetail", todayParameter, customeridParameter, partnumberParameter);
        }
    
        public virtual ObjectResult<SP_IDX_ReceivingSummary_Result> SP_IDX_ReceivingSummary(Nullable<System.DateTime> today, string supplierid, string partnumber)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_ReceivingSummary_Result>("SP_IDX_ReceivingSummary", todayParameter, supplieridParameter, partnumberParameter);
        }
    
        public virtual ObjectResult<SP_IDX_ReceivingSummaryDetail_Result> SP_IDX_ReceivingSummaryDetail(Nullable<System.DateTime> today, string supplierid, string partnumber)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_ReceivingSummaryDetail_Result>("SP_IDX_ReceivingSummaryDetail", todayParameter, supplieridParameter, partnumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_CustomerInvoiceDetail_Result> SP_GET_CustomerInvoiceDetail(string invoicenumber, string formaction)
        {
            var invoicenumberParameter = invoicenumber != null ?
                new ObjectParameter("invoicenumber", invoicenumber) :
                new ObjectParameter("invoicenumber", typeof(string));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CustomerInvoiceDetail_Result>("SP_GET_CustomerInvoiceDetail", invoicenumberParameter, formactionParameter);
        }
    
        public virtual ObjectResult<SP_GET_CustomerInvoiceNumber_Result> SP_GET_CustomerInvoiceNumber(string customerId, Nullable<System.DateTime> invoiceDate, string compId)
        {
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CustomerInvoiceNumber_Result>("SP_GET_CustomerInvoiceNumber", customerIdParameter, invoiceDateParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_SYS_SQLInjection_Result> SP_SYS_SQLInjection(string msql)
        {
            var msqlParameter = msql != null ?
                new ObjectParameter("msql", msql) :
                new ObjectParameter("msql", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_SQLInjection_Result>("SP_SYS_SQLInjection", msqlParameter);
        }
    
        public virtual ObjectResult<SP_GET_ControlPlanningNumber_Result> SP_GET_ControlPlanningNumber(string month, string years, string compId)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearsParameter = years != null ?
                new ObjectParameter("Years", years) :
                new ObjectParameter("Years", typeof(string));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ControlPlanningNumber_Result>("SP_GET_ControlPlanningNumber", monthParameter, yearsParameter, compIdParameter);
        }
    
        public virtual int SP_SYS_ResetIdentity(string table, string idColumn)
        {
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            var idColumnParameter = idColumn != null ?
                new ObjectParameter("IdColumn", idColumn) :
                new ObjectParameter("IdColumn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_ResetIdentity", tableParameter, idColumnParameter);
        }
    
        public virtual ObjectResult<SP_TRS_ControlPlanningDetailLast_Result> SP_TRS_ControlPlanningDetailLast(string lineid, string month, string year, Nullable<int> shift, string ordernumber)
        {
            var lineidParameter = lineid != null ?
                new ObjectParameter("lineid", lineid) :
                new ObjectParameter("lineid", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TRS_ControlPlanningDetailLast_Result>("SP_TRS_ControlPlanningDetailLast", lineidParameter, monthParameter, yearParameter, shiftParameter, ordernumberParameter);
        }
    
        public virtual int SP_CRUD_MasterKanbanListProduction(string ordernumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_MasterKanbanListProduction", ordernumberParameter);
        }
    
        public virtual int SP_CRUD_MasterKanbanListStockFG(string ordernumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_MasterKanbanListStockFG", ordernumberParameter);
        }
    
        public virtual int SP_CRUD_KanbanProductions(string ordernumber, string action)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_KanbanProductions", ordernumberParameter, actionParameter);
        }
    
        public virtual ObjectResult<SP_TMS_GetStartWorkingTime_Result> SP_TMS_GetStartWorkingTime(string dayid)
        {
            var dayidParameter = dayid != null ?
                new ObjectParameter("dayid", dayid) :
                new ObjectParameter("dayid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TMS_GetStartWorkingTime_Result>("SP_TMS_GetStartWorkingTime", dayidParameter);
        }
    
        public virtual ObjectResult<SP_GET_ProductionDailyShiftSummary_Result> SP_GET_ProductionDailyShiftSummary(string lineid, string gateid, string shiftid, Nullable<System.DateTime> productiondate)
        {
            var lineidParameter = lineid != null ?
                new ObjectParameter("lineid", lineid) :
                new ObjectParameter("lineid", typeof(string));
    
            var gateidParameter = gateid != null ?
                new ObjectParameter("gateid", gateid) :
                new ObjectParameter("gateid", typeof(string));
    
            var shiftidParameter = shiftid != null ?
                new ObjectParameter("shiftid", shiftid) :
                new ObjectParameter("shiftid", typeof(string));
    
            var productiondateParameter = productiondate.HasValue ?
                new ObjectParameter("productiondate", productiondate) :
                new ObjectParameter("productiondate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ProductionDailyShiftSummary_Result>("SP_GET_ProductionDailyShiftSummary", lineidParameter, gateidParameter, shiftidParameter, productiondateParameter);
        }
    
        public virtual ObjectResult<SP_GET_ProductionDailyLatestSummary_Result> SP_GET_ProductionDailyLatestSummary(string lineid, string gateid, string shiftid, Nullable<System.DateTime> productiondate, string userid)
        {
            var lineidParameter = lineid != null ?
                new ObjectParameter("lineid", lineid) :
                new ObjectParameter("lineid", typeof(string));
    
            var gateidParameter = gateid != null ?
                new ObjectParameter("gateid", gateid) :
                new ObjectParameter("gateid", typeof(string));
    
            var shiftidParameter = shiftid != null ?
                new ObjectParameter("shiftid", shiftid) :
                new ObjectParameter("shiftid", typeof(string));
    
            var productiondateParameter = productiondate.HasValue ?
                new ObjectParameter("productiondate", productiondate) :
                new ObjectParameter("productiondate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ProductionDailyLatestSummary_Result>("SP_GET_ProductionDailyLatestSummary", lineidParameter, gateidParameter, shiftidParameter, productiondateParameter, useridParameter);
        }
    
        public virtual ObjectResult<SP_GET_ProductionNumber_Result> SP_GET_ProductionNumber(string lineId, Nullable<System.DateTime> prodDate)
        {
            var lineIdParameter = lineId != null ?
                new ObjectParameter("LineId", lineId) :
                new ObjectParameter("LineId", typeof(string));
    
            var prodDateParameter = prodDate.HasValue ?
                new ObjectParameter("ProdDate", prodDate) :
                new ObjectParameter("ProdDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ProductionNumber_Result>("SP_GET_ProductionNumber", lineIdParameter, prodDateParameter);
        }
    
        public virtual ObjectResult<SP_GET_RequestOrderPartsNumber_Result> SP_GET_RequestOrderPartsNumber(string lineId, Nullable<System.DateTime> orderDate, string compId)
        {
            var lineIdParameter = lineId != null ?
                new ObjectParameter("LineId", lineId) :
                new ObjectParameter("LineId", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_RequestOrderPartsNumber_Result>("SP_GET_RequestOrderPartsNumber", lineIdParameter, orderDateParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_IDX_ProductionSummary_Result> SP_IDX_ProductionSummary(Nullable<System.DateTime> today, string lineid, string partnumber)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            var lineidParameter = lineid != null ?
                new ObjectParameter("lineid", lineid) :
                new ObjectParameter("lineid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_ProductionSummary_Result>("SP_IDX_ProductionSummary", todayParameter, lineidParameter, partnumberParameter);
        }
    
        public virtual ObjectResult<SP_IDX_ProductionSummaryDetail_Result> SP_IDX_ProductionSummaryDetail(Nullable<System.DateTime> today, string lineid, string partnumber)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            var lineidParameter = lineid != null ?
                new ObjectParameter("lineid", lineid) :
                new ObjectParameter("lineid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_ProductionSummaryDetail_Result>("SP_IDX_ProductionSummaryDetail", todayParameter, lineidParameter, partnumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_ProductionNGNumber_Result> SP_GET_ProductionNGNumber(string lineId, Nullable<System.DateTime> prodDate)
        {
            var lineIdParameter = lineId != null ?
                new ObjectParameter("LineId", lineId) :
                new ObjectParameter("LineId", typeof(string));
    
            var prodDateParameter = prodDate.HasValue ?
                new ObjectParameter("ProdDate", prodDate) :
                new ObjectParameter("ProdDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ProductionNGNumber_Result>("SP_GET_ProductionNGNumber", lineIdParameter, prodDateParameter);
        }
    
        public virtual ObjectResult<SP_CRUD_InvoiceRecap_Result> SP_CRUD_InvoiceRecap(string recapnumber, Nullable<System.DateTime> recapdate, string recapyear, string recapmonth, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string invoicenumber, string taxinvoice, string supplierid, string remarks, string userid, string compid, string formaction)
        {
            var recapnumberParameter = recapnumber != null ?
                new ObjectParameter("recapnumber", recapnumber) :
                new ObjectParameter("recapnumber", typeof(string));
    
            var recapdateParameter = recapdate.HasValue ?
                new ObjectParameter("recapdate", recapdate) :
                new ObjectParameter("recapdate", typeof(System.DateTime));
    
            var recapyearParameter = recapyear != null ?
                new ObjectParameter("recapyear", recapyear) :
                new ObjectParameter("recapyear", typeof(string));
    
            var recapmonthParameter = recapmonth != null ?
                new ObjectParameter("recapmonth", recapmonth) :
                new ObjectParameter("recapmonth", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var invoicenumberParameter = invoicenumber != null ?
                new ObjectParameter("invoicenumber", invoicenumber) :
                new ObjectParameter("invoicenumber", typeof(string));
    
            var taxinvoiceParameter = taxinvoice != null ?
                new ObjectParameter("taxinvoice", taxinvoice) :
                new ObjectParameter("taxinvoice", typeof(string));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var compidParameter = compid != null ?
                new ObjectParameter("compid", compid) :
                new ObjectParameter("compid", typeof(string));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CRUD_InvoiceRecap_Result>("SP_CRUD_InvoiceRecap", recapnumberParameter, recapdateParameter, recapyearParameter, recapmonthParameter, startdateParameter, enddateParameter, invoicenumberParameter, taxinvoiceParameter, supplieridParameter, remarksParameter, useridParameter, compidParameter, formactionParameter);
        }
    
        public virtual ObjectResult<SP_TMS_WorkingDay_Result> SP_TMS_WorkingDay(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string groupId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var groupIdParameter = groupId != null ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TMS_WorkingDay_Result>("SP_TMS_WorkingDay", startDateParameter, endDateParameter, groupIdParameter);
        }
    
        [DbFunction("vssp_entity", "fn_generate_calendar")]
        public virtual IQueryable<fn_generate_calendar_Result> fn_generate_calendar(Nullable<System.DateTime> fromDate, Nullable<int> noDays)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var noDaysParameter = noDays.HasValue ?
                new ObjectParameter("NoDays", noDays) :
                new ObjectParameter("NoDays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_generate_calendar_Result>("[vssp_entity].[fn_generate_calendar](@FromDate, @NoDays)", fromDateParameter, noDaysParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_CRUD_KanbanCycleTime(string supplierId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string cycleTime, string userId, Nullable<System.DateTime> editDate)
        {
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var cycleTimeParameter = cycleTime != null ?
                new ObjectParameter("CycleTime", cycleTime) :
                new ObjectParameter("CycleTime", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var editDateParameter = editDate.HasValue ?
                new ObjectParameter("EditDate", editDate) :
                new ObjectParameter("EditDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_KanbanCycleTime", supplierIdParameter, startDateParameter, endDateParameter, cycleTimeParameter, userIdParameter, editDateParameter);
        }
    
        public virtual int SP_CRUD_MasterKanbanListDetail_NotUsed(string ordernumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_MasterKanbanListDetail_NotUsed", ordernumberParameter);
        }
    
        public virtual int SP_CRUD_MasterKanbanListStockWIP(string ordernumber)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_MasterKanbanListStockWIP", ordernumberParameter);
        }
    
        public virtual int SP_CRUD_StockWIPFinishGoods(string pLineId, string pCustomerId, string pPartNumber, Nullable<double> pqty, string action)
        {
            var pLineIdParameter = pLineId != null ?
                new ObjectParameter("pLineId", pLineId) :
                new ObjectParameter("pLineId", typeof(string));
    
            var pCustomerIdParameter = pCustomerId != null ?
                new ObjectParameter("pCustomerId", pCustomerId) :
                new ObjectParameter("pCustomerId", typeof(string));
    
            var pPartNumberParameter = pPartNumber != null ?
                new ObjectParameter("pPartNumber", pPartNumber) :
                new ObjectParameter("pPartNumber", typeof(string));
    
            var pqtyParameter = pqty.HasValue ?
                new ObjectParameter("pqty", pqty) :
                new ObjectParameter("pqty", typeof(double));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockWIPFinishGoods", pLineIdParameter, pCustomerIdParameter, pPartNumberParameter, pqtyParameter, actionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_SYS_DatabaseCleanUp(string tABLE_KEYGROUP)
        {
            var tABLE_KEYGROUPParameter = tABLE_KEYGROUP != null ?
                new ObjectParameter("TABLE_KEYGROUP", tABLE_KEYGROUP) :
                new ObjectParameter("TABLE_KEYGROUP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_DatabaseCleanUp", tABLE_KEYGROUPParameter);
        }
    
        public virtual int SP_TRS_ImportDeliveryPDCS(string donumber, string sonumber)
        {
            var donumberParameter = donumber != null ?
                new ObjectParameter("donumber", donumber) :
                new ObjectParameter("donumber", typeof(string));
    
            var sonumberParameter = sonumber != null ?
                new ObjectParameter("sonumber", sonumber) :
                new ObjectParameter("sonumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TRS_ImportDeliveryPDCS", donumberParameter, sonumberParameter);
        }
    
        public virtual int SP_TRS_ScheduleDelivery(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sONumber)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sONumberParameter = sONumber != null ?
                new ObjectParameter("SONumber", sONumber) :
                new ObjectParameter("SONumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TRS_ScheduleDelivery", startDateParameter, endDateParameter, sONumberParameter);
        }
    
        public virtual int SP_TRS_ScheduleProduction(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string orderNumber, string searchFilter)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var searchFilterParameter = searchFilter != null ?
                new ObjectParameter("SearchFilter", searchFilter) :
                new ObjectParameter("SearchFilter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TRS_ScheduleProduction", startDateParameter, endDateParameter, orderNumberParameter, searchFilterParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SP_GET_InspectionNumber_Result> SP_GET_InspectionNumber(string month, string years, string compId)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearsParameter = years != null ?
                new ObjectParameter("Years", years) :
                new ObjectParameter("Years", typeof(string));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_InspectionNumber_Result>("SP_GET_InspectionNumber", monthParameter, yearsParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_ProblemNumber_Result> SP_GET_ProblemNumber(string month, string years, string compId)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearsParameter = years != null ?
                new ObjectParameter("Years", years) :
                new ObjectParameter("Years", typeof(string));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ProblemNumber_Result>("SP_GET_ProblemNumber", monthParameter, yearsParameter, compIdParameter);
        }
    
        public virtual ObjectResult<SP_IDX_QualityInspection_Result> SP_IDX_QualityInspection(string years, string months)
        {
            var yearsParameter = years != null ?
                new ObjectParameter("years", years) :
                new ObjectParameter("years", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_QualityInspection_Result>("SP_IDX_QualityInspection", yearsParameter, monthsParameter);
        }
    
        public virtual ObjectResult<SP_IDX_QualityInspectionDefects_Result> SP_IDX_QualityInspectionDefects(string years, string months, string inspectiontype)
        {
            var yearsParameter = years != null ?
                new ObjectParameter("years", years) :
                new ObjectParameter("years", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(string));
    
            var inspectiontypeParameter = inspectiontype != null ?
                new ObjectParameter("inspectiontype", inspectiontype) :
                new ObjectParameter("inspectiontype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_QualityInspectionDefects_Result>("SP_IDX_QualityInspectionDefects", yearsParameter, monthsParameter, inspectiontypeParameter);
        }
    
        public virtual ObjectResult<SP_TRS_ForecastOrderDetailAdditional_Result> SP_TRS_ForecastOrderDetailAdditional(string supplierid, string month, string year, string ordernumber)
        {
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TRS_ForecastOrderDetailAdditional_Result>("SP_TRS_ForecastOrderDetailAdditional", supplieridParameter, monthParameter, yearParameter, ordernumberParameter);
        }
    
        public virtual ObjectResult<SP_TRS_ControlPlanningDetailAdditional_Result> SP_TRS_ControlPlanningDetailAdditional(string lineid, string month, string year, Nullable<int> shift, string ordernumber)
        {
            var lineidParameter = lineid != null ?
                new ObjectParameter("lineid", lineid) :
                new ObjectParameter("lineid", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TRS_ControlPlanningDetailAdditional_Result>("SP_TRS_ControlPlanningDetailAdditional", lineidParameter, monthParameter, yearParameter, shiftParameter, ordernumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_IncomingDateTime_Result> SP_GET_IncomingDateTime(Nullable<System.DateTime> orderdate, Nullable<System.DateTime> ordertime, string supplierid, Nullable<int> shift, Nullable<bool> special)
        {
            var orderdateParameter = orderdate.HasValue ?
                new ObjectParameter("orderdate", orderdate) :
                new ObjectParameter("orderdate", typeof(System.DateTime));
    
            var ordertimeParameter = ordertime.HasValue ?
                new ObjectParameter("ordertime", ordertime) :
                new ObjectParameter("ordertime", typeof(System.DateTime));
    
            var supplieridParameter = supplierid != null ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(string));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            var specialParameter = special.HasValue ?
                new ObjectParameter("special", special) :
                new ObjectParameter("special", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_IncomingDateTime_Result>("SP_GET_IncomingDateTime", orderdateParameter, ordertimeParameter, supplieridParameter, shiftParameter, specialParameter);
        }
    
        public virtual int SP_GET_SupplierOrderPerformance(string ordernumber, string receivenumber, string performnumber, Nullable<System.DateTime> date, string formaction)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var receivenumberParameter = receivenumber != null ?
                new ObjectParameter("receivenumber", receivenumber) :
                new ObjectParameter("receivenumber", typeof(string));
    
            var performnumberParameter = performnumber != null ?
                new ObjectParameter("performnumber", performnumber) :
                new ObjectParameter("performnumber", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_SupplierOrderPerformance", ordernumberParameter, receivenumberParameter, performnumberParameter, dateParameter, formactionParameter);
        }
    
        public virtual ObjectResult<SP_GET_ReturnPartNumber_Result> SP_GET_ReturnPartNumber(string supplierId, Nullable<System.DateTime> returnDate, string compId)
        {
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var returnDateParameter = returnDate.HasValue ?
                new ObjectParameter("ReturnDate", returnDate) :
                new ObjectParameter("ReturnDate", typeof(System.DateTime));
    
            var compIdParameter = compId != null ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ReturnPartNumber_Result>("SP_GET_ReturnPartNumber", supplierIdParameter, returnDateParameter, compIdParameter);
        }
    
        public virtual int SP_CRUD_ReceivingOrderDetail(string receivenumber, string ordernumber, Nullable<bool> returnpart, string formaction)
        {
            var receivenumberParameter = receivenumber != null ?
                new ObjectParameter("receivenumber", receivenumber) :
                new ObjectParameter("receivenumber", typeof(string));
    
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var returnpartParameter = returnpart.HasValue ?
                new ObjectParameter("returnpart", returnpart) :
                new ObjectParameter("returnpart", typeof(bool));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_ReceivingOrderDetail", receivenumberParameter, ordernumberParameter, returnpartParameter, formactionParameter);
        }
    
        public virtual ObjectResult<SP_IDX_QualityInspectionIncoming_Result> SP_IDX_QualityInspectionIncoming(string years, string months)
        {
            var yearsParameter = years != null ?
                new ObjectParameter("years", years) :
                new ObjectParameter("years", typeof(string));
    
            var monthsParameter = months != null ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDX_QualityInspectionIncoming_Result>("SP_IDX_QualityInspectionIncoming", yearsParameter, monthsParameter);
        }
    
        public virtual int SP_CRUD_StockTransactionReceivingOrder(string receivenumber, string ordernumber, Nullable<bool> returnpart, string userid, string formaction)
        {
            var receivenumberParameter = receivenumber != null ?
                new ObjectParameter("receivenumber", receivenumber) :
                new ObjectParameter("receivenumber", typeof(string));
    
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var returnpartParameter = returnpart.HasValue ?
                new ObjectParameter("returnpart", returnpart) :
                new ObjectParameter("returnpart", typeof(bool));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockTransactionReceivingOrder", receivenumberParameter, ordernumberParameter, returnpartParameter, useridParameter, formactionParameter);
        }
    
        public virtual int SP_CRUD_StockTransaction(string stockNumber, Nullable<System.DateTime> stockDate, string stockType, string refNumber, string ownerId, string partNumber, Nullable<double> stockIn, Nullable<double> stockOut, string userId, string formaction)
        {
            var stockNumberParameter = stockNumber != null ?
                new ObjectParameter("StockNumber", stockNumber) :
                new ObjectParameter("StockNumber", typeof(string));
    
            var stockDateParameter = stockDate.HasValue ?
                new ObjectParameter("StockDate", stockDate) :
                new ObjectParameter("StockDate", typeof(System.DateTime));
    
            var stockTypeParameter = stockType != null ?
                new ObjectParameter("StockType", stockType) :
                new ObjectParameter("StockType", typeof(string));
    
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var stockInParameter = stockIn.HasValue ?
                new ObjectParameter("StockIn", stockIn) :
                new ObjectParameter("StockIn", typeof(double));
    
            var stockOutParameter = stockOut.HasValue ?
                new ObjectParameter("StockOut", stockOut) :
                new ObjectParameter("StockOut", typeof(double));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockTransaction", stockNumberParameter, stockDateParameter, stockTypeParameter, refNumberParameter, ownerIdParameter, partNumberParameter, stockInParameter, stockOutParameter, userIdParameter, formactionParameter);
        }
    
        public virtual int SP_CRUD_StockTransactionGenerateEarly(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockTransactionGenerateEarly", userIdParameter);
        }
    
        public virtual int SP_CRUD_StockTransactionRequestOrderParts(string ordernumber, string userid, string formaction)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockTransactionRequestOrderParts", ordernumberParameter, useridParameter, formactionParameter);
        }
    
        public virtual int SP_CRUD_StockTransactionSupplierOrderSSP(string ordernumber, string userid, string formaction)
        {
            var ordernumberParameter = ordernumber != null ?
                new ObjectParameter("ordernumber", ordernumber) :
                new ObjectParameter("ordernumber", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockTransactionSupplierOrderSSP", ordernumberParameter, useridParameter, formactionParameter);
        }
    
        public virtual int SP_CRUD_StockTransactionDeliveryOrder(string donumber, string userid, string formaction)
        {
            var donumberParameter = donumber != null ?
                new ObjectParameter("donumber", donumber) :
                new ObjectParameter("donumber", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var formactionParameter = formaction != null ?
                new ObjectParameter("formaction", formaction) :
                new ObjectParameter("formaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockTransactionDeliveryOrder", donumberParameter, useridParameter, formactionParameter);
        }
    
        public virtual ObjectResult<SP_GET_StockTransaction_Result> SP_GET_StockTransaction(string year, string month, string stocktype, string ownerid, string partnumber)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var stocktypeParameter = stocktype != null ?
                new ObjectParameter("stocktype", stocktype) :
                new ObjectParameter("stocktype", typeof(string));
    
            var owneridParameter = ownerid != null ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_StockTransaction_Result>("SP_GET_StockTransaction", yearParameter, monthParameter, stocktypeParameter, owneridParameter, partnumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_StockLevelFinishGoods_Result> SP_GET_StockLevelFinishGoods(string customerid, string partnumber)
        {
            var customeridParameter = customerid != null ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(string));
    
            var partnumberParameter = partnumber != null ?
                new ObjectParameter("partnumber", partnumber) :
                new ObjectParameter("partnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_StockLevelFinishGoods_Result>("SP_GET_StockLevelFinishGoods", customeridParameter, partnumberParameter);
        }
    
        public virtual int SP_CRUD_StockTransactionEarly(string stockNumber, Nullable<System.DateTime> stockDate, string stockType, string ownerId, string partNumber, string userId)
        {
            var stockNumberParameter = stockNumber != null ?
                new ObjectParameter("StockNumber", stockNumber) :
                new ObjectParameter("StockNumber", typeof(string));
    
            var stockDateParameter = stockDate.HasValue ?
                new ObjectParameter("StockDate", stockDate) :
                new ObjectParameter("StockDate", typeof(System.DateTime));
    
            var stockTypeParameter = stockType != null ?
                new ObjectParameter("StockType", stockType) :
                new ObjectParameter("StockType", typeof(string));
    
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CRUD_StockTransactionEarly", stockNumberParameter, stockDateParameter, stockTypeParameter, ownerIdParameter, partNumberParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_ProductionDailySchedule_Result> SP_GET_ProductionDailySchedule(string lineid, string shiftid, Nullable<System.DateTime> productiondate)
        {
            var lineidParameter = lineid != null ?
                new ObjectParameter("lineid", lineid) :
                new ObjectParameter("lineid", typeof(string));
    
            var shiftidParameter = shiftid != null ?
                new ObjectParameter("shiftid", shiftid) :
                new ObjectParameter("shiftid", typeof(string));
    
            var productiondateParameter = productiondate.HasValue ?
                new ObjectParameter("productiondate", productiondate) :
                new ObjectParameter("productiondate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ProductionDailySchedule_Result>("SP_GET_ProductionDailySchedule", lineidParameter, shiftidParameter, productiondateParameter);
        }
    }
}
