
<div class="modal animated fadeIn" id="crudProductionMaterialListModal" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="false">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-primary" role="document">
        <div class="modal-content">
            <form id="crudProductionMaterialForm" class="needs-validation" novalidate>
                <div class="modal-header">
                    <h6 class="modal-title"><span class="fa fa-plus-square"></span> crud @ViewBag.Title</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <ul class="nav nav-tabs" role="tabList">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#tabcrudProductionMaterial" role="tab">
                                Material
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-danger @ViewBag.canConfidential" data-toggle="tab" href="#tabcrudPrice" role="tab">
                                Price
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tabcrudProductionMaterial" role="tabpanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialLineId" class="col-sm-4 col-form-label col-form-label-sm">Line</label>
                                        <div class="col-sm-8">
                                            <select class="form-control form-control-sm selectpicker" data-live-search="true" data-size="8" id="crud-ProductionMaterialLineId" name="LineId" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialPartNumber" class="col-sm-4 col-form-label col-form-label-sm">Part Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control form-control-sm" id="crud-ProductionMaterialPartNumber" name="PartNumber" value="" required>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialUniqueNumber" class="col-sm-4 col-form-label col-form-label-sm">Unique</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control form-control-sm" id="crud-ProductionMaterialUniqueNumber" name="UniqueNumber" value="" required>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialPartName" class="col-sm-4 col-form-label col-form-label-sm">Part Name</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control form-control-sm" id="crud-ProductionMaterialPartName" name="PartName" required>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialPartModel" class="col-sm-4 col-form-label col-form-label-sm">Model</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control form-control-sm" id="crud-ProductionMaterialPartModel" name="PartModel" required>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialCategoryId" class="col-sm-4 col-form-label col-form-label-sm">Category</label>
                                        <div class="col-sm-8">
                                            <select class="custom-select custom-select-sm" id="crud-ProductionMaterialCategoryId" name="CategoryId" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialSubProcess" class="col-sm-4 col-form-label col-form-label-sm">Sub Process</label>
                                        <div class="col-sm-8">
                                            <div class="custom-control custom-checkbox mt-1">
                                                <input type="checkbox" class="custom-control-input" value="" id="crud-ProductionMaterialSubProcess">
                                                <label class="custom-control-label" for="crud-ProductionMaterialSubProcess"><small> [Yes/No]</small></label>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialUnitLevel1" class="col-sm-4 col-form-label col-form-label-sm">Units</label>
                                        <div class="col-sm-8">
                                            <select class="custom-select custom-select-sm" id="crud-ProductionMaterialUnitLevel1" name="UnitLevel1" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialUnitLevel2" class="col-sm-4 col-form-label col-form-label-sm">Qty / Unit</label>
                                        <div class="col-md-3" style="padding-right:0 !important">
                                            <input type="number" min="1" class="form-control form-control-sm" id="crud-ProductionMaterialUnitQty" name="UnitQty" required>
                                        </div>
                                        <div class="col-sm-5">
                                            <select class="custom-select custom-select-sm" id="crud-ProductionMaterialUnitLevel2" name="UnitLevel2" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialSafetyHours" class="col-sm-4 col-form-label col-form-label-sm">Safety Hours</label>
                                        <div class="col-md-8" style="width:90% !important">
                                            <input type="number" class="form-control form-control-sm" id="crud-ProductionMaterialSafetyHours" name="SafetyHours" required>
                                        </div>

                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialPackingId" class="col-sm-4 col-form-label col-form-label-sm">Packing</label>
                                        <div class="col-sm-8">
                                            <select class="custom-select custom-select-sm" id="crud-ProductionMaterialPackingId" name="PackingId" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialAreaId" class="col-sm-4 col-form-label col-form-label-sm">Area</label>
                                        <div class="col-sm-8">
                                            <select class="custom-select custom-select-sm" id="crud-ProductionMaterialAreaId" name="AreaId" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialLocationId" class="col-sm-4 col-form-label col-form-label-sm">Location</label>
                                        <div class="col-sm-8">
                                            <select class="custom-select custom-select-sm" id="crud-ProductionMaterialLocationId" name="LocationId" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group form-group-sm p-0 m-1 row">
                                        <label for="crud-ProductionMaterialActived" class="col-sm-4 col-form-label col-form-label-sm">Status</label>
                                        <div class="col-sm-8">
                                            <div class="custom-control custom-checkbox mt-1">
                                                <input type="checkbox" class="custom-control-input" value="" id="crud-ProductionMaterialActived">
                                                <label class="custom-control-label" for="crud-ProductionMaterialActived"><small> Actived</small></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="tabcrudPrice" role="tabpanel">
                            <button id="btn-addPrice" type="button" class="btn btn-sm btn-outline-dark" onclick="crudPriceList('Create','*')"><span class="fa fa-plus"></span> Add New Price</button>
                            <div class="mt-2">
                                <table id="jqGridCrudPrice"></table>
                            </div>
                        </div>
                    </div>

                    <div id="crudProductionMaterialListError"></div>
                    <input type="hidden" id="ProductionMaterialAction" />

                </div>
                <div class="modal-footer">
                    <button id="btn-crudProductionMaterialList" type="submit" class="btn btn-sm btn-primary" dismiss="modal"><span class="fa fa-dot-circle-o"></span> Submit</button>
                    <button type="button" class="btn btn-sm btn-danger" data-dismiss="modal"><span class="fa fa-times"></span> Cancel</button>
                </div>
            </form>

        </div>
    </div>
</div>

<div class="modal animated fadeIn" id="crudPriceListModal" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="false">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <input type="hidden" id="PriceAction" />
            <input type="hidden" id="PriceId" />
            <input type="hidden" id="PriceRowStatus" />

            <form id="crudPriceForm" class="needs-validation" novalidate>
                <input type="text" class="form-control form-control-sm" id="crud-PriceLineId" hidden>
                <input type="text" class="form-control form-control-sm" id="crud-PricePartNumber" hidden>

                <div class="modal-header">
                    <h6 class="modal-title"><span class="fa fa-plus-square"></span> Price</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group form-group-sm">
                                <label for="crud-PriceStartDate" class="col-form-label col-form-label-sm">Start Date</label>
                                <input type="date" class="form-control form-control-sm datepicker" id="crud-PriceStartDate" required>
                            </div>
                            <div class="form-group form-group-sm">
                                <label for="crud-PriceEndDate" class="col-form-label col-form-label-sm">End Date</label>
                                <input type="date" class="form-control form-control-sm datepicker" id="crud-PriceEndDate">
                            </div>
                            <div class="form-group form-group-sm">
                                <label for="crud-PriceAmount" class="col-form-label col-form-label-sm">Price</label>
                                <input type="number" min="1" class="form-control form-control-sm" id="crud-PriceAmount" required>
                            </div>
                        </div>
                    </div>

                    <div id="crudPriceListError"></div>

                </div>
                <div class="modal-footer">
                    <button id="btn-crudPriceList" type="submit" class="btn btn-sm btn-primary" dismiss="modal"><span class="fa fa-dot-circle-o"></span> Submit</button>
                    <button type="button" class="btn btn-sm btn-danger" data-dismiss="modal"><span class="fa fa-times"></span> Cancel</button>
                </div>
            </form>

        </div>
    </div>
</div>

<script>

    function crudProductionMaterialList(action, id) {

        document.getElementById("crudProductionMaterialForm").reset();
        $('#crudProductionMaterialForm').removeClass('was-validated');
        $('#crudProductionMaterialListError').html("");
        $('#btn-addPrice').removeAttr('disabled');
        $('a[href="#tabcrudProductionMaterial"]').click()
        $("#btn-crudProductionMaterialList").html("<span class='fa fa-dot-circle-o'></span> Submit");
        $("#crud-ProductionMaterialActived").removeAttr("checked").removeAttr("disabled");
        $("#crud-ProductionMaterialUnitLevel2").html("").append($('<option></option>').val("").html("*Choose Unit"));
        $("#crud-ProductionMaterialLocationId").html("").append($('<option></option>').val("").html("*Choose Location"));
        $("#crud-ProductionMaterialSubProcess").removeAttr("checked");

        $("#crudProductionMaterialForm input,select").each(function () {
            $(this).removeAttr("readonly").removeAttr("disabled").removeClass('error').next('label.error').remove().val("");
        });
        $("#ProductionMaterialAction").val(action);


        if (id != "*") {

            var Grid = $('#jqGridMain'),
                selectedRowId = id,
                LineId = Grid.jqGrid('getCell', selectedRowId, 'LineId'),
                PartNumber = Grid.jqGrid('getCell', selectedRowId, 'PartNumber'),
                UniqueNumber = Grid.jqGrid('getCell', selectedRowId, 'UniqueNumber'),
                PartName = Grid.jqGrid('getCell', selectedRowId, 'PartName'),
                PartModel = Grid.jqGrid('getCell', selectedRowId, 'PartModel'),
                CategoryId = Grid.jqGrid('getCell', selectedRowId, 'CategoryId'),
                PackingId = Grid.jqGrid('getCell', selectedRowId, 'PackingId'),
                AreaId = Grid.jqGrid('getCell', selectedRowId, 'AreaId'),
                LocationId = Grid.jqGrid('getCell', selectedRowId, 'LocationId'),
                UnitLevel1 = Grid.jqGrid('getCell', selectedRowId, 'UnitLevel1'),
                SafetyHours = Grid.jqGrid('getCell', selectedRowId, 'SafetyHours'),
                SubProcess = Grid.jqGrid('getCell', selectedRowId, 'SubProcess'),
                UnitLevel2 = Grid.jqGrid('getCell', selectedRowId, 'UnitLevel2'),
                UnitQty = Grid.jqGrid('getCell', selectedRowId, 'UnitQty'),
                Actived = Grid.jqGrid('getCell', selectedRowId, 'Actived');

            loadComboUnit(UnitLevel1);
            loadComboLocation(AreaId);

            $("#crud-ProductionMaterialLineId").val(LineId);
            $("#crud-ProductionMaterialPartNumber").val(PartNumber);
            $("#crud-ProductionMaterialUniqueNumber").val(UniqueNumber);
            $("#crud-ProductionMaterialPartName").val(PartName);
            $("#crud-ProductionMaterialPartModel").val(PartModel);
            $("#crud-ProductionMaterialCategoryId").val(CategoryId);
            $("#crud-ProductionMaterialPackingId").val(PackingId);
            $("#crud-ProductionMaterialUnitLevel1").val(UnitLevel1);
            $("#crud-ProductionMaterialUnitLevel2").val(UnitLevel2);
            $("#crud-ProductionMaterialSafetyHours").val(SafetyHours);
            $("#crud-ProductionMaterialUnitQty").val(UnitQty);
            $("#crud-ProductionMaterialAreaId").val(AreaId);
            $("#crud-ProductionMaterialLocationId").val(LocationId);
            if (SubProcess.includes("success")) {
                $("#crud-ProductionMaterialSubProcess").attr("checked", true);
            } else {
                $("#crud-ProductionMaterialSubProcess").removeAttr("checked");
            }
            if (Actived.includes("success")) {
                $("#crud-ProductionMaterialActived").attr("checked", true);
            } else {
                $("#crud-ProductionMaterialActived").removeAttr("checked");
            }

        }

        var key = LineId + PartNumber;
        reloadGridPrice(key);

        $('.selectpicker').selectpicker('refresh');

        switch (action) {
            case "Create":
                $("#crud-ProductionMaterialActived").attr("checked", true).attr("disabled", true).val("true");
                $("#crudProductionMaterialListModal .modal-dialog").removeClass("modal-success").removeClass("modal-danger").addClass("modal-primary")
                $("#crudProductionMaterialListModal .modal-title").html('<span class="fa fa-plus-square"></span> '+ action + ' @ViewBag.Title');
                $('#crudProductionMaterialListModal').modal('show');
                $("#crud-ProductionMaterialLineId").focus();
                break;
            case "Update":
                $("#crud-ProductionMaterialLineId").attr("disabled","true");
                $("#crud-ProductionMaterialPartNumber").attr("readonly", true);
                $("#crudProductionMaterialListModal .modal-dialog").removeClass("modal-primary").removeClass("modal-danger").addClass("modal-success")
                $("#crudProductionMaterialListModal .modal-title").html('<span class="fa fa-pencil-square"></span> '+ action + ' @ViewBag.Title');
                $('#crudProductionMaterialListModal').modal('show');
                $("#crud-ProductionMaterialPartName").focus();
                break;
            case "Delete":
                $("#crudProductionMaterialForm :input").not(type = "button").each(function () {
                    $(this).attr("disabled",true);
                });
                $("#crudProductionMaterialForm select").attr("disabled", true);
                $("#crud-ProductionMaterialActived").attr("disabled", true);
                $('#btn-addPrice').attr('disabled', true);
                $("#btn-crudProductionMaterialList").html("<span class='fa fa-trash'></span> Delete");
                $("#crudProductionMaterialListModal .modal-dialog").removeClass("modal-primary").removeClass("modal-success").addClass("modal-danger")
                $("#crudProductionMaterialListModal .modal-title").html('<span class="fa fa-trash"></span> '+ action + ' @ViewBag.Title');
                $('#crudProductionMaterialListModal').modal('show');
                break
        }

    }

    function crudPriceList(action, id) {
        document.getElementById("crudPriceForm").reset();
        $('#crudPriceForm').removeClass('was-validated');
        $('#crudPriceListError').html("");
        $("#btn-crudPriceList").html("<span class='fa fa-dot-circle-o'></span> Submit");

        $("#crudPriceForm :input").each(function () {
            $(this).removeAttr("readonly").removeAttr("disabled").removeClass('error').next('label.error').remove().val("");
        });
        $("#crud-PriceReceiveOrder").removeAttr("disabled");

        $("#PriceAction").val(action);
        $("#PriceId").val(id);
        var suppid = $("#crud-ProductionMaterialLineId").val();
        var partnumber = $("#crud-ProductionMaterialPartNumber").val();

        if (id != "*") {
            var rowData = $("#jqGridCrudPrice").jqGrid("getRowData", id),
                RowStatus = rowData.RowStatus.split(">"),
                LineId = suppid,
                PartNumber = partnumber,
                PriceStartDate = moment(new Date(rowData.StartDate)).format('YYYY-MM-DD'),
                PriceEndDate = moment(new Date(rowData.EndDate)).format('YYYY-MM-DD'),
                PriceAmount = rowData.Price;

            if (RowStatus != "") {
                RowStatus = RowStatus[1].split("<");
                RowStatus = RowStatus[0];
            }

            $("#PriceRowStatus").val(RowStatus);
            $("#crud-PriceLineId").val(LineId);
            $("#crud-PricePartNumber").val(PartNumber);
            $("#crud-PriceStartDate").val(PriceStartDate);
            $("#crud-PriceEndDate").val(PriceEndDate);
            $("#crud-PriceAmount").val(PriceAmount);

        }

        switch (action) {
            case "Create":
                if (suppid === "" || partnumber === "") {
                    var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b>No Id!</b><br/>Please type @ViewBag.Title Line Id and Part Number before add Price.</small></div>'
                    $('#crudProductionMaterialListError').html(errMsg);
                    return false;
                }
                $("#crud-PriceLineId").val(suppid);
                $("#crud-PricePartNumber").val(partnumber);
                $("#crudPriceListModal .modal-dialog").removeClass("modal-success").removeClass("modal-danger").addClass("modal-primary")
                $("#crudPriceListModal .modal-title").html('<span class="fa fa-plus-square"></span> '+ action + ' @ViewBag.Title Price');
                $('#crudPriceListModal').modal('show');
                $("#crud-PriceStartDate").focus();
                break;
            case "Update":
                $("#crud-PriceStartDate").attr("readonly",true);
                $("#crudPriceListModal .modal-dialog").removeClass("modal-primary").removeClass("modal-danger").addClass("modal-success")
                $("#crudPriceListModal .modal-title").html('<span class="fa fa-pencil-square"></span> '+ action + ' @ViewBag.Title Price');
                $('#crudPriceListModal').modal('show');
                $("#crud-PriceEndDate").focus();
                break;
            case "Delete":
                $("#crudPriceForm :input").each(function () {
                    $(this).attr("readonly",true);
                });
                $("#crud-PriceReceiveOrder").attr("disabled", true);
                $("#btn-crudPriceList").html("<span class='fa fa-trash'></span> Delete");
                $("#crudPriceListModal .modal-dialog").removeClass("modal-primary").removeClass("modal-success").addClass("modal-danger")
                $("#crudPriceListModal .modal-title").html('<span class="fa fa-trash"></span> '+ action + ' @ViewBag.Title Price');
                $('#crudPriceListModal').modal('show');
                break
        }

    }

    //PRICE
    $(document).ready(function () {
        $(function () {
            $("#crudPriceForm").submit(function (event) {

                event.preventDefault();

                var resValid = true;
                //$(this).validate();
                //console.log(resValid);

                $("#crudPriceForm input").each(function () {
                    if ($(this).valid() === false) {
                        $(this).focus();
                        event.stopPropagation()
                        resValid = false;
                        return false
                    }
                })

                setTimeout(function () {

                    if (resValid) {
                        var startdate = $('#crud-PriceStartDate').val();
                        var enddate = $('#crud-PriceEndDate').val();
                        var action = $('#PriceAction').val();
                        var rowStatus = $('#PriceRowStatus').val();
                        var alreadyInput = validationAlreadyInputPrice(action, $("#PriceId").val(), startdate, enddate);

                        $("#jqGridCrudPrice")[0].grid.beginReq();

                        switch (action) {
                            case "Create":

                                if (alreadyInput === true) {

                                    var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b>Cannot Add Price in ' + startdate + ' ' + enddate + '!</b><br/>Already created or invalid range or already active price on range start and end date, please check carefully before creating @ViewBag.Title Price.</small></div>'
                                    $('#crudPriceListError').html(errMsg);

                                    $("#jqGridCrudPrice")[0].grid.endReq();
                                    event.stopPropagation();
                                    return false;

                                } else {
                                    parameters =
                                    {
                                        rowID: $("#crud-PriceStartDate").val(),
                                        initdata: {
                                            RowStatus: action,
                                            PriceId: $("#crud-PriceStartDate").val(),
                                            LineId: $("#crud-PriceLineId").val(),
                                            PartNumber: $("#crud-PricePartNumber").val(),
                                            StartDate: $("#crud-PriceStartDate").val(),
                                            EndDate: $("#crud-PriceEndDate").val(),
                                            Price: $("#crud-PriceAmount").val(),
                                        },
                                        position: "last",
                                    }

                                    $("#jqGridCrudPrice").jqGrid('addRow', parameters);
                                }

                                break;

                            case "Update":

                                if (alreadyInput === true) {

                                    var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b>Cannot Add Price in ' + startdate + ' ' + enddate + '!</b><br/>Already created or invalid range or already active price on range start and end date, please check carefully before creating @ViewBag.Title Price.</small></div>'
                                    $('#crudPriceListError').html(errMsg);

                                    $("#jqGridCrudPrice")[0].grid.endReq();
                                    event.stopPropagation();
                                    return false;

                                } else {
                                    var rowid = $("#PriceId").val();

                                    if (rowStatus != "New") {
                                        rowStatus = action
                                    } else {
                                        rowStatus = "Create"
                                    }

                                    var sdate = moment(new Date($("#crud-PriceStartDate").val())).format("DD MMM YYYY");
                                    var edate = $("#crud-PriceEndDate").val();
                                    if (edate != "") {
                                        edate = moment(new Date($("#crud-PriceEndDate").val())).format("DD MMM YYYY");
                                    } else {
                                        edate = null;
                                    }
                                    //alert(edate);

                                    parameters =
                                    {
                                        RowStatus: rowStatus,
                                        StartDate: sdate,
                                        EndDate: edate,
                                        Price: $("#crud-PriceAmount").val(),
                                    }

                                    $("#jqGridCrudPrice").jqGrid('setRowData', rowid, parameters);
                                }

                                break;

                            case "Delete":

                                var rowid = $("#PriceId").val();
                                var sdate = moment(new Date($("#crud-PriceStartDate").val())).format("DD MMM YYYY");

                                if (rowStatus === "New") {
                                    $('#jqGridCrudPrice').jqGrid('delRowData', rowid);
                                } else {
                                    parameters =
                                    {
                                        StartDate: sdate,
                                        RowStatus: action,
                                    }
                                    $("#jqGridCrudPrice").jqGrid('setRowData', rowid, parameters);
                                }

                                break;
                        }

                        $("#jqGridCrudPrice")[0].grid.endReq();
                        $('#crudPriceListModal').modal('hide');

                    }

                }, 250);

            });
        });
    });

    function validationAlreadyInputPrice(action, id, valstart, valend) {
        var result = false;

        var grid = $('#jqGridCrudPrice');
        var rows = grid.jqGrid('getDataIDs');

        for (i = 0; i < rows.length; i++) {
            var rowData = grid.jqGrid('getRowData', rows[i]);

            rowStartDate = moment(new Date(rowData['StartDate'])).format('YYYY-MM-DD');
            rowEndDate = moment(new Date(rowData['EndDate'])).format('YYYY-MM-DD');
            valStartDate = moment(new Date(valstart)).format('YYYY-MM-DD');
            valEndDate = moment(new Date(valend)).format('YYYY-MM-DD');

            if (rowEndDate === 'Invalid date') {
                rowEndDate = moment(new Date(valstart)).add(-1, "days").format('YYYY-MM-DD');
            }
            if (valEndDate == 'Invalid date') {
                valEndDate = valStartDate;
            }

            switch (action) {
                case "Create":
                    if (rowStartDate === valStartDate || (rowStartDate <= valStartDate && rowEndDate >= valStartDate) || (valStartDate > valEndDate)) {
                        result = true;
                    } else {


                        if (rowData['EndDate'].length <= 1) {

                            parameters =
                            {
                                StartDate: moment(rowStartDate).format("DD MMM YYYY"),
                                EndDate: moment(rowEndDate).format("DD MMM YYYY"),
                                RowStatus: "Update",
                            }
                            $("#jqGridCrudPrice").jqGrid('setRowData', rows[i], parameters);
                        }
                    }

                    break;
                case "Update":
                    if (rows[i] != id && (rowStartDate <= valStartDate && rowEndDate >= valStartDate) || (valStartDate > valEndDate)) {
                        result = true;
                    }
                    break;
            }

        }

        return result;

    };

    function validationPart(action, Lineid, partnumber, uniquenumber) {

        var result = false;

         $.ajax({
            url: '@Url.Action("ProductionMaterialsListJson", "Productions")',
            type: "GET",
            dataType: "JSON",
            async: false,
            data: {
                searchFilter: "validator",
                FormAction: action,
                LineId: Lineid,
                PartNumber: partnumber,
                //UniqueNumber:uniquenumber request dewi 2021-02-02 bisa double unique part export & local
            },
            success: function (response) {
                var numfound = 0;
                var partresult, uniqueresult;
                var errMsg = "";
                $('#crudProductionMaterialListError').html("");

                $.each(response, function (i, part) {
                    numfound += 1;
                    partresult = part.PartNumber;
                    uniqueresult = part.UniqueNumber;
                });

                if (parseInt(numfound) == 0) {
                    result = true;
                } else {

                    if (partnumber === partresult) {
                        errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b> Error Part Number!</b><br/>Already used part number for this Line.</small></div>'
                        $('#crudProductionMaterialListError').append(errMsg);

                        $('a[href="#tabcrudProductionMaterial"]').click();
                        $('#crud-ProductionMaterialPartNumber').focus();
                    }
                    if (uniquenumber === uniqueresult) {
                        errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b> Error Unique Number!</b><br/>Already used unique number in another part number.</small></div>'
                        $('#crudProductionMaterialListError').append(errMsg);

                        $('a[href="#tabcrudProductionMaterial"]').click();
                        $('#crud-ProductionMaterialUniqueNumber').focus();
                    }

                    result = false;
                }
             },
             error: function (xhr, desc, err) {
                 result = false;
                 alert(eval(xhr.responseText));
             }
         })

         return result;

    }

    $(function () {
        $gridPrice = $("#jqGridCrudPrice").jqGrid({
            url: "@Url.Action("ProductionMaterialsPriceListJson", "Productions")",
            mtype: "GET",
            datatype: "json",
            postData: {key : "*"},
            colModel: [
                { label: 'Price Id', name: 'PriceId', key: true, hidden: true },
                { label: 'Line Id', name: 'LineId', hidden: true },
                { label: 'Part Number', name: 'PartNumber', hidden: true },
                { label: 'Start Date', name: 'StartDate', align: 'center', formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y", reformatAfterEdit: true } },
                { label: 'End Date', name: 'EndDate', align: 'center', formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y", reformatAfterEdit: true } },
                { label: 'Price', name: 'Price', align: 'center', formatter: "number" },
                { label: 'Status', name: 'RowStatus', editable: false, align: 'center', fixed: true, width: 80, formatter: statusCrudFormatter },
                { label: 'Action', name: 'Action', editable: false, align: 'center', fixed: true, width: 80, formatter: actionPriceFormatter },
            ],
            gridview: true,
            loadonce: true,
            height: 164,
            pgbuttons: false,
            pgtext: null,
            viewrecords: true,
            rownumbers: true,
            rownumWidth: 30,
            autoresizeOnLoad: true,
            autowidth: true,
            shrinkToFit: false,
            fromServer: false,
            loadComplete: function () {
                var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;
                for (i = 0; i < l; i++) {
                    $this.jqGrid('editRow', ids[i], true);
                }
            },
        }),
        $('#jqGridCrudPrice').jqGrid('navGrid', '#jqGridPagercrudPrice',
            { search: false, edit: false, add: false, del: false},
        );

    });

    function reloadGridPrice(id) {
        $("#jqGridCrudPrice").jqGrid('setGridParam', {
            datatype: 'json',
            mtype: 'GET',
            postData: {
                key: id,
            }
        }).trigger('reloadGrid');
    };

    function actionPriceFormatter(cellvalue, options, rowObject) {
        var btn = "<div class='table-link'>";
        btn += "<a href='#' class='@ViewBag.canUpdate btn btn-sm btn-primary text-white' onclick=\"crudPriceList('Update','" + options.rowId + "')\" datatoogle='tooltip' title='Edit @ViewBag.Title Price [ " + rowObject.PriceStartDate + " ]'>";
        btn += "<span class='fa fa-pencil'></span>";
        btn += "</a> ";
        btn += "<a href='#' class='@ViewBag.canDelete btn btn-sm btn-danger text-white' onclick=\"crudPriceList('Delete','" + options.rowId + "')\" datatoogle='tooltip' title='Delete @ViewBag.Title Price [ " + rowObject.PriceStartDate + " ]'>";
        btn += "<span class='fa fa-trash'></span>";
        btn += "</a></div>";
        return btn;
    }

    function statusCrudFormatter(cellvalue, options, rowObject) {
        switch (cellvalue) {
            case "Create":
                return "<span class='badge badge-primary'>New</span>"
                break;
            case "Update":
                return "<span class='badge badge-success'>Updated</span>"
                break;
            case "Delete":
                return "<span class='badge badge-danger'>Removed</span>"
                break;
            default:
                return "";
                break;
        }
    }

    function dateFormatter(cellvalue, options, rowObject) {
        if ($.isEmptyObject(cellvalue)) {
            return "";
        } else {
            return moment(new Date(json.Parse(cellvalue))).format('YYYY-MM-DD'); //moment(new Date(cellvalue)).format("DD MMM YYYY");
        }
    }

    //CrudFG
    $(document).ready(function () {
        $(function () {
            $("#crudProductionMaterialForm").submit(function (event) {
                event.preventDefault();
                if ($(this).valid()) {

                    suppid = $("#crud-ProductionMaterialLineId").val();
                    partno = $("#crud-ProductionMaterialPartNumber").val();
                    unique = $("#crud-ProductionMaterialUniqueNumber").val();
                    action = $("#ProductionMaterialAction").val();

                    var validResult = validationPart(action, suppid, partno, unique);

                    if (validResult === true) {

                        var formData = new FormData();

                        var jsonData = {
                            ProductionMaterial: {
                                LineId: $("#crud-ProductionMaterialLineId").val(),
                                PartNumber: $("#crud-ProductionMaterialPartNumber").val(),
                                UniqueNumber: $("#crud-ProductionMaterialUniqueNumber").val(),
                                PartName: $("#crud-ProductionMaterialPartName").val(),
                                PartModel: $("#crud-ProductionMaterialPartModel").val(),
                                CategoryId: $("#crud-ProductionMaterialCategoryId").val(),
                                PackingId: $("#crud-ProductionMaterialPackingId").val(),
                                AreaId: $("#crud-ProductionMaterialAreaId").val(),
                                LocationId: $("#crud-ProductionMaterialLocationId").val(),
                                UnitLevel1: $("#crud-ProductionMaterialUnitLevel1").val(),
                                UnitLevel2: $("#crud-ProductionMaterialUnitLevel2").val(),
                                UnitQty: $("#crud-ProductionMaterialUnitQty").val(),
                                SafetyHours: $("#crud-ProductionMaterialSafetyHours").val(),
                                SubProcess: $("#crud-ProductionMaterialSubProcess").prop("checked"),
                                Actived: $("#crud-ProductionMaterialActived").prop("checked"),
                                EditDate: null,
                                UserID: null
                            },
                            ProductionMaterialPrice: $("#jqGridCrudPrice").jqGrid('getGridParam', 'data'),
                            formAction: $("#ProductionMaterialAction").val()
                        };

                        $.each(jsonData.ProductionMaterialPrice, function (i, js) {
                            if (js.EndDate === "&#160;") {
                                js.EndDate = null;
                            }
                        });
                        formData.append("jsonData", JSON.stringify(jsonData));
                        $.ajax({
                            url: '@Url.Action("crudProductionMaterialList", "Productions")',
                            type: 'POST',
                            contentType: false, // Not to set any content header
                            processData: false, // Not to process data
                            dataType: "JSON",
                            data: formData,
                            success: function (data) {
                                $('#crudProductionMaterialListModal').modal('hide');
                                var act = $("#ProductionMaterialAction").val();
                                act = act.toLowerCase();
                                doSuccess(data, act);
                            },
                            error: function (xhr, desc, err) {
                                var respText = "";
                                try {
                                    respText = eval(xhr.responseText);
                                } catch {
                                    respText = xhr.responseText;
                                }

                                respText = unescape(respText).replaceAll("_n_", "<br/>")

                                var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b> Error ' + xhr.status + '!</b><br/>' + respText + '</small></div>'
                                $('#crudProductionMaterialListError').html(errMsg);
                            },
                        });
                    } else {
                        event.stopPropagation();
                    }
                }
            });
        });
    });

</script>

<script>

    $(document).ready(function () {
        loadComboProductions();
        loadComboCategories();
        loadComboUnits();
        loadComboArea();
        loadComboProductionMaterial("*");
        loadComboPacking();
    });

    $("#crud-ProductionMaterialUnitLevel1").change(function () {
        loadComboUnit("*");
    });

    $("#crud-ProductionMaterialAreaId").change(function () {
        loadComboLocation("*");
    });

    function loadComboProductions() {
        $.ajax({
            url: '@Url.Action("LineListJson", "Productions")',
            type: "GET",
            dataType: "JSON",
            data: {},
            success: function (response) {

                var id = "#crud-ProductionMaterialLineId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Line")
                );
                $.each(response, function (i, Productions) {
                    $(id).append(
                        $('<option></option>').val(Productions.LineId).html(Productions.LineName)
                    );
                });
            }
        })
    }

    function loadComboCategories() {
        $.ajax({
            url: '@Url.Action("CategoriesListJson", "Measurements")',
            type: "GET",
            dataType: "JSON",
            data: {},
            success: function (response) {

                var id = "#crud-ProductionMaterialCategoryId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Category")
                );
                $.each(response, function (i, category) {
                    $(id).append(
                        $('<option></option>').val(category.CategoryId).html(category.CategoryName)
                    );
                });
            }
        })
    }

    function loadComboUnits() {
        $.ajax({
            url: '@Url.Action("UnitsListJson", "Measurements")',
            type: "GET",
            dataType: "JSON",
            async: false,
            data: {},
            success: function (response) {

                var id = "#crud-ProductionMaterialUnitLevel1";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Units")
                );
                $.each(response, function (i, units) {
                    $(id).append(
                        $('<option></option>').val(units.UnitId).html(units.UnitName)
                    );
                });
            }
        })
    }

    function loadComboUnit(uid) {

        if (uid === "*") {
            uid = $("#crud-ProductionMaterialUnitLevel1").val();
        }

        $.ajax({
            url: '@Url.Action("UnitsListLevel2Json", "Measurements")',
            type: "GET",
            dataType: "JSON",
            data: { unitid: uid },
            async: false,
            success: function (response) {

                var id = "#crud-ProductionMaterialUnitLevel2";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Unit")
                );
                $.each(response, function (i, unit) {
                    $(id).append(
                        $('<option></option>').val(unit.UnitId).html(unit.UnitName)
                    );
                });
            }
        })

    }

    function loadComboProductionMaterial(id) {

        @*$.ajax({
            url: '@Url.Action("ProductionMaterialsListJson", "Productions")',
            type: "GET",
            dataType: "JSON",
            data: { },
            success: function (response) {

                var id = "#crud-ProductionMaterialLineId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Line")
                );
                $.each(response, function (i, supp) {
                    $(id).append(
                        $('<option></option>').val(supp.LineId).html(supp.LineName)
                    );
                });
            }
        })*@
    }

    function loadComboArea() {

        $.ajax({
            url: '@Url.Action("AreaListJson", "Warehouse")',
            type: "GET",
            dataType: "JSON",
            data: { },
            success: function (response) {

                var id = "#crud-ProductionMaterialAreaId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Area")
                );
                $.each(response, function (i, area) {
                    $(id).append(
                        $('<option></option>').val(area.AreaID).html(area.AreaName)
                    );
                });
            }
        })
    }

    function loadComboLocation(aid) {

        if (aid === "*") {
            aid = $("#crud-ProductionMaterialAreaId").val();
        }

        $.ajax({
            url: '@Url.Action("LocationListJson", "Warehouse")',
            type: "GET",
            dataType: "JSON",
            async: false,
            data: { searchFilter : aid},
            success: function (response) {

                var id = "#crud-ProductionMaterialLocationId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Location")
                );
                $.each(response, function (i, location) {
                    $(id).append(
                        $('<option></option>').val(location.LocationId).html(location.LocationName)
                    );
                });
            }
        })

    }

    function loadComboPacking() {

        $.ajax({
            url: '@Url.Action("PackingListJson", "Measurements")',
            type: "GET",
            dataType: "JSON",
            async: false,
            data: { searchFilter : ""},
            success: function (response) {

                var id = "#crud-ProductionMaterialPackingId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Packing")
                );
                $.each(response, function (i, measures) {
                    $(id).append(
                        $('<option></option>').val(measures.PackingId).html(measures.PackingId + ' : ' + measures.PackingName)
                    );
                });
            }
        })

    }

</script>

