@model Core.VSSP.Models.SalesOrderListModel

<section class="app-section" id="Marketing-SalesOrder">
    <div class="card card-accent-secondary">
        <div class="card-header bg-white">
            <div class="row">
                <div class="col-md-11">
                    <div class="card-title">
                        <i class="@ViewBag.IconClass"></i> @ViewBag.Title
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="dropdown">
                        <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="fa fa-filter"></span> Filter
                        </button>
                        <form id="form-filter" class="dropdown-menu dropdown-menu-right p-4 bg-light" style="width:320px">
                            <h6>Filter @ViewBag.Title</h6>
                            <hr />
                            <div class="form-group form-group-sm">
                                <div class="input-group input-group-sm">
                                    <input id="searchFilter" name="searchFilter" type="text" class="form-control" placeholder="Order Number or Customer...">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fa fa-navicon"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label for="startdateFilter" class="col-form-label col-form-label-sm">Date</label>
                                <div class="input-group input-group-sm">
                                    <input id="startdateFilter" type="date" class="form-control input-daterange" placeholder="Start Date">
                                    <div class="input-group-append">
                                        <span class="input-group-text">To</span>
                                    </div>
                                    <input id="enddateFilter" type="date" class="form-control date" placeholder="End Date">
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label for="monthFilter" class="col-form-label col-form-label-sm">Month</label>
                                <div class="input-group input-group-sm">
                                    <input id="monthFilter" type="text" class="form-control" placeholder="Month Year Orders">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group form-group-sm">
                                <label for="statusFilter" class="col-form-label col-form-label-sm">Status</label>
                                <div class="input-group input-group-sm">
                                    @Html.DropDownListFor(model => model.StatusList,
                                    new SelectList(Model.StatusList, "Id", "Name"),
                                    new { @id = "statusFilter", @class = "custom-select custom-select-sm", @placeholder = "Status" })

                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fa fa-check"></i></span>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-sm btn-dark" onclick="reloadGridSalesOrder()"><span class="fa fa-search"></span> Search</button>
                        </form>
                    </div>
                </div>
                @*<div class="col-md-1">
            <div class="dropdown">
                <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="fa fa-filter"></span> Filter
                </button>
                <div class="dropdown-menu dropdown-menu-right p-4 bg-light" style="width:320px">
                    <h6>Filter @ViewBag.Title</h6>
                    <hr />
                    <div class="form-group form-group-sm">
                        <div class="input-group input-group-sm">
                            <input id="searchFilter" name="searchFilter" type="text" class="form-control" placeholder="Order Number or Customer...">
                            <div class="input-group-append">
                                <span class="input-group-text"><i class="fa fa-navicon"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-group-sm">
                        <label for="startdateFilter" class="col-form-label col-form-label-sm">Date</label>
                        <div class="input-group input-group-sm">
                            <input id="startdateFilter" type="date" class="form-control input-daterange" placeholder="Start Date">
                            <div class="input-group-append">
                                <span class="input-group-text">To</span>
                            </div>
                            <input id="enddateFilter" type="date" class="form-control date" placeholder="End Date">
                        </div>
                    </div>
                    <div class="form-group form-group-sm">
                        <label for="monthFilter" class="col-form-label col-form-label-sm">Month</label>
                        <div class="input-group input-group-sm">
                            <input id="monthFilter" type="text" class="form-control" placeholder="Month Year Orders">
                            <div class="input-group-append">
                                <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-group-sm">
                        <label for="statusFilter" class="col-form-label col-form-label-sm">Status</label>
                        <div class="input-group input-group-sm">
                            @Html.DropDownListFor(model => model.StatusList,
                            new SelectList(Model.StatusList, "Id", "Name"),
                            new { @id = "statusFilter", @class = "custom-select custom-select-sm", @placeholder = "Status" })

                            <div class="input-group-append">
                                <span class="input-group-text"><i class="fa fa-check"></i></span>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-sm btn-dark" onclick="reloadGridSalesOrder()"><span class="fa fa-search"></span> Search</button>
                </div>
            </div>
        </div>*@
            </div>
        </div>
        <div class="card-body" style="padding:2px 4px 2px 2px">
            <table id="jqGridMain"></table>
            <div id="jqGridPagerMain"></div>
        </div>
        <div class="card-footer bg-gray-active">
            <div class="row">
                <div class="col-md-8">
                    <div class="row">
                        <div class="ml-3" style="padding:2px!important">
                            <button class="btn btn-sm btn-outline-dark" type="button" style="width:80px" onclick="crudSalesOrder('Create','*')" @ViewBag.canCreate><i class="fa fa-pencil-square-o"></i> Create</button>
                            <button class="btn btn-sm btn-outline-dark" type="button" style="width:80px" onclick="reloadGridSalesOrder()"><i class="fa fa-refresh"></i> Refresh</button>
                        </div>
                        <div class="ml-3 mt-1">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" value="" id="sw-showhide" onclick="showhideCol('click')">
                                <label class="custom-control-label" for="sw-showhide"><small> Show all column</small></label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Html.Partial("SalesOrderPartial/Crud")
    @*@Html.Partial("SalesOrderPartial/Revision")
        @Html.Partial("SalesOrderPartial/Email")*@

</section>

<script>


    $("#monthFilter").datepicker({
        format: "mm/yyyy",
        startView: "year",
        minViewMode: "months",
        autoclose: true,
    }).datepicker("setDate", moment(new Date).format("MM/YYYY"));

    $(document).ready(function () {
        var mstart = $("#monthFilter");
        if (mstart.val() === "") {
            mstart.val(moment(new Date).format("MM/YYYY"))
        }

        showhideCol("load");
        $('[data-toggle="popover"]').popover();

        $("#statusFilter").val("99");

    })

    $(function () {
        var filterData  = $('#searchFilter').val();
        var startdate   = $('#startdateFilter').val();
        var enddate     = $('#enddateFilter').val();
        var month       = $('#monthFilter').val();
        var status      = $('#statusFilter').val();
        $grid = $("#jqGridMain").jqGrid({
            url: '@Url.Action("SalesOrderListJson", "Marketing")',
            datatype: "json",
            mtype: "GET",
            postData: {
                searchFilter: filterData,
                startdate: startdate,
                enddate: enddate,
                month: month,
                status: status,
            },
            colModel: [
                { label: 'Action', name: 'Action', align: 'center', fixed: true, width: 60, formatter: actionFormatter },
                { label: 'Document', name: 'Document', align: 'center', fixed: true, width: 65, formatter: documentFormatter },
                { label: 'Status', name: 'Status', align: 'center', fixed: true, width: 80, formatter: statusFormatter },
                { label: 'Number', name: 'SONumber', key: true, align: 'left', fixed: true, width: 120 },
                { label: 'Date', name: 'SODate', align: 'center', fixed: true, width: 80, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y" } },
                { label: 'PO Number', name: 'PONumber', align: 'left' },
                { label: 'PO Date', name: 'PODate', align: 'center', fixed: true, width: 80, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y" } },
                { label: 'Receive PO', name: 'ReceiveDate', align: 'center', fixed: true, width: 80, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y" } },
                { label: 'Year', name: 'DeliveryYear', align: 'center', fixed: true, width: 50 },
                { label: 'Month', name: 'DeliveryMonth', align: 'center', fixed: true, width: 60, formatter: monthFormatter },
                { label: 'Customer', name: 'CustomerId', align: 'left', fixed: true, width: 60 },
                { label: 'Customer Name', name: 'CustomerName', align: 'left', fixed: true, width: 180 },
                { label: 'Parts', name: 'TotalPart', align: 'right', formatter: 'number', fixed: true, width: 50 },
                { label: 'Orders', name: 'TotalOrder', align: 'right', formatter: 'number', fixed: true, width: 60 },
                { label: 'Start Del', name: 'StartDelivery', align: 'right', formatter: 'number', fixed: true, width: 60 },
                { label: 'Start Date Del', name: 'StartDateDelivery', align: 'center', fixed: true, width: 80, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y" } },
                { label: 'End Date Del', name: 'EndDateDelivery', align: 'center', fixed: true, width: 80, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y" } },
                { label: 'Remarks', name: 'Remarks', align: 'left', fixed: true, width: 120 },
                { label: 'Status Name', name: 'StatusName', align: 'center', hidden: true, width: 60 },
                { label: 'Pass Through', name: 'PassThrough', align: 'center', hidden: true, width: 80, formatter: passthroughFormatter },
                { label: 'User', name: 'UserId', align: 'center', fixed: true, width: 60 },
                { label: 'Edited', name: 'EditDate', align: 'center', fixed: true, width: 100, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y H:i" } },
            ],
            gridview: true,
            loadonce: true,
            pager: '#jqGridPagerMain',
            rowNum: 20,
            rowList: [20, 50, 100],
            viewrecords: true,
            rownumbers: true,
            rownumWidth: 40,
            autoresizeOnLoad: true,
            autowidth: true,
            shrinkToFit: false,
            fromServer: true,
            loadComplete: function () {
                var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;
                for (i = 0; i < l; i++) {
                    //$this.jqGrid('editRow', ids[i], true);
                    var btnid = 'btn-' + ids[i].replaceAll("/", "");
                    showButton(ids[i], btnid);
                }
            },
        }),
        $('#jqGridMain').jqGrid('navGrid', '#jqGridPagerMain', { search: false, edit: false, add: false, del: false });

    });

    function actionFormatter(cellvalue, options, rowObject) {

        var canemail = "";
        var canupdate = "";
        var candelete = "";
        var btnid = rowObject.SONumber.replaceAll("/", "");

        if (rowObject.StatusName === "Open" || rowObject.StatusName === "Sent") {
            canemail = '@ViewBag.canCreate';
            canupdate = '@ViewBag.canUpdate';
            candelete = '@ViewBag.canDelete';
        } else {
            if (rowObject.StatusName === "Received") {
                canemail = '@ViewBag.canCreate';
                canupdate = '@ViewBag.canUpdate';
            } else {
                canemail = 'disabled';
                canupdate = 'disabled';
            }
            candelete = 'disabled';
        }

        var month = getMonthName(rowObject.DeliveryMonth);
        month += ", " + rowObject.DeliveryYear;

        var btn = "<div class='table-link'>";
        btn += "<a href='#' class='btn btn-sm btn-success text-white " + canupdate + "' onclick=\"crudSalesOrder('Update','" + rowObject.SONumber + "')\" datatoogle='tooltip' title='Edit @ViewBag.Title [ " + rowObject.SONumber + " ]'>";
        btn += "<span class='fa fa-pencil'></span>";
        btn += "</a> ";
        btn += "<a id='btn-" + btnid + "' tabindex='0' class='btn btn-sm btn-info text-white " + candelete + "' role='button' data-toggle='popover' ";
        btn += "data-timeout='2000' data-html='true' title='@ViewBag.Title " + rowObject.SONumber + "' data-content='-'>";
        btn += "<span class='fa fa-sign-out'></span>";
        btn += "</a>";
        btn += "</div>";


        return btn;
    }

    function documentFormatter(cellvalue, options, rowObject) {

        var btn = "<div class='table-link'>";
        btn += "<a href='#' class='btn btn-sm btn-light text-danger border-danger @ViewBag.canSee' onclick=\"previewSalesOrder('Pdf','" + rowObject.SONumber + "')\" datatoogle='tooltip' title='Preview Sales Order PDF [ " + rowObject.SONumber + " ]'>";
        btn += "<span class='fa fa-file-pdf-o'></span>";
        btn += "</a> ";
        btn += "<a href='#' class='btn btn-sm btn-light text-success border-success @ViewBag.canSee' onclick=\"previewSalesOrder('Excel','" + rowObject.SONumber + "')\" datatoogle='tooltip' title='Preview Sales Order Excel [ " + rowObject.SONumber + " ]'>";
        btn += "<span class='fa fa-file-excel-o'></span>";
        btn += "</a> ";
        btn += "</div>";


        return btn;
    }

    function showButton(SONumber,id) {

        var dataContent = "<div>";
        dataContent += "<ul class='nav'><li>";
        dataContent += "<a href='#' class='btn btn-sm btn-info @ViewBag.canUpdate' onclick=\"crudSalesOrder('Closed','" + SONumber + "')\" ><i class='fa fa-sign-out'></i> Closing</a>";
        dataContent += "<a href='#' class='btn btn-sm btn-warning ml-2 @ViewBag.canDelete' onclick=\"crudSalesOrder('Canceled','" + SONumber + "')\" ><i class='fa fa-ban'></i> Canceled</a>";
        dataContent += "<a href='#' class='btn btn-sm btn-danger ml-2 @ViewBag.canDelete' onclick=\"crudSalesOrder('Delete','" + SONumber + "')\" ><i class='fa fa-trash'></i> Delete</a>";
        dataContent += "</li></ul></div>";

        $('#' + id).attr('data-content', dataContent).popover();

    }

    function previewSalesOrder(action, ordernumber) {
        @*var url = "@Url.Action("SalesOrders","Reports", new { sonumber = "_ordernumber_" })";
        url = url.replace('_ordernumber_', encodeURIComponent(ordernumber));
        window.open(url, "_blank");*@

        var url = "/Reports/SalesOrders?sonumber=" + ordernumber + "&FileFormat=" + action;
        window.open(url, "_blank");

    }

    function monthFormatter(cellvalue, options, rowObject) {
        var monthname = getMonthName(cellvalue)
        return monthname;
    }

    function statusFormatter(cellvalue, options, rowObject) {
        switch (cellvalue) {
            case 0:
                return "<span class='badge badge-primary'>" + rowObject.StatusName + "</span>"
                break;
            case 1:
                return "<span class='badge badge-info text-white'>" + rowObject.StatusName + "</span>"
                break;
            case 2:
                return "<span class='badge badge-info text-white'>" + rowObject.StatusName + "</span>"
                break;
            case 3:
                return "<span class='badge badge-success text-white'>" + rowObject.StatusName + "</span>"
                break;
            case 4:
                return "<span class='badge badge-warning'>" + rowObject.StatusName + "</span>"
                break;
            case 5:
                return "<span class='badge badge-danger'>" + rowObject.StatusName + "</span>"
                break;
        }
    }
    function approvalFormatter(cellvalue, options, rowObject) {
        switch (cellvalue) {
            case 1:
                return "<span class='badge badge-secondary'>" + rowObject.ApprovalName + "</span>"
                break;
            case 2:
                return "<span class='badge badge-info text-white'>" + rowObject.ApprovalName + "</span>"
                break;
            case 3:
                return "<span class='badge badge-primary'>" + rowObject.ApprovalName + "</span>"
                break;
            case 4:
                return "<span class='badge badge-secondary'>" + rowObject.ApprovalName + "</span>"
                break;
        }
    }

    function passthroughFormatter(cellvalue, options, rowObject) {
        if (cellvalue === true) {
            return "<span class='fa fa-check text-success'></span>"
        } else {
            return "<span class='fa fa-times text-danger'></span>"
        }
    }

    function reloadGridSalesOrder() {
        var filterData = $('#searchFilter').val();
        var startdate = $('#startdateFilter').val();
        var enddate = $('#enddateFilter').val();
        var month = $('#monthFilter').val();
        var status = $('#statusFilter').val();
        $("#jqGridMain").jqGrid('setGridParam', {
            datatype: 'json',
            mtype: 'GET',
            postData: {
                searchFilter: filterData,
                startdate: startdate,
                enddate: enddate,
                month: month,
                status: status,
            }
        }).trigger('reloadGrid');
    };

    function doSuccess(data, action) {
        switch (action) {
            case "create":
                showToast("Success", "Create " + data.SONumber + " has been saved succesfully");
                return reloadGridSalesOrder();
                break;
            case "update":
                showToast("Success", "Update " + data.SONumber + " has been saved succesfully");
                return reloadGridSalesOrder();
                break;
            case "delete":
                showToast("Failed", "Delete " + data.SONumber + " has been removed succesfully");
                return reloadGridSalesOrder();
                break;
            case "canceled":
                showToast("Failed", "Cancel order " + data.SONumber + " has been canceled succesfully");
                return reloadGridSalesOrder();
                break;
            case "closed":
                showToast("success", "Closing order " + data.SONumber + " has been closed succesfully");
                return reloadGridSalesOrder();
                break;
        }
    }

    $("#searchFilter").on('keypress', function (e) {
        if (e.which == 13) {
            $("#btnFilter").button().click();
        }
    });

    $(document).ready(function () {
        showhideCol();
    })

    function showhideCol() {

        var res = $("#sw-showhide").prop("checked");
        var showhideCol = "";

        if (res === true) {
            showhideCol = 'showCol';
        } else {
            showhideCol = 'hideCol';
        }


        //if (event != "load") {
        //    window.location.reload();
        //    //reloadGridSalesOrder();
        //}

        $("#jqGridMain").jqGrid(showhideCol, "CustomerName")
        $("#jqGridMain").jqGrid(showhideCol, "Remarks")
        $("#jqGridMain").jqGrid(showhideCol, "DeliveryYear")
        $("#jqGridMain").jqGrid(showhideCol, "ReceiveDate")
        $("#jqGridMain").jqGrid(showhideCol, "Approval")
        $("#jqGridMain").jqGrid(showhideCol, "StartDelivery")
        $("#jqGridMain").jqGrid(showhideCol, "StartDateDelivery")
        $("#jqGridMain").jqGrid(showhideCol, "EndDateDelivery")
        $("#jqGridMain").jqGrid(showhideCol, "UserId")
        $("#jqGridMain").jqGrid(showhideCol, "EditDate")

        gridResize();

    };

    $('[data-toggle="popover"][data-timeout]').on('shown.bs.popover', function () {
        this_popover = $(this);
        setTimeout(function () {
            this_popover.popover('hide');
        }, $(this).data("data-timeout"));
    });

</script>

<!-- toast-alert -->
@Html.Partial("_VSSPLayout/Messages/toast_alert")
