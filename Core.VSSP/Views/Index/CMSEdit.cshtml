
@model Core.VSSP.Models.CMSCrudModel

<!-- toast-alert -->
@Html.Partial("_VSSPLayout/Messages/toast_alert")


@using (Html.BeginForm("CMSUpdate", "Index", FormMethod.Post, new { enctype = "multipart/form-data", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col-md-12">
                    <i class="fa fa-align-justify"></i> @ViewBag.Title
                </div>

            </div>
        </div>
        <div class="card-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <form id="dlvForm">
                <div class="row">
                    <div class="col-md-4">
                        @if (Model.Image != null)
                        {
                            var base64 = Convert.ToBase64String((byte[])Model.Image);
                            var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                            <img id="image-news" src="@imgSrc" style="width:100%" class="img-thumbnail" />
                        }
                        else
                        {
                            <img id="image-news" src="~/_BatikAssets/Images/noimage.png" style="width:100%" class="img-thumbnail" />
                        }
                        <hr />
                        <div class="input-group input-group-sm">
                            <label class="input-group-prepend">
                                <span id="lblImport" class="btn btn-sm btn-secondary">
                                    <i class="fa fa-upload"></i> Upload
                                    <input type="file" id="output" name="ImageData" accept="image/*" style="display: none;" onchange="loadFile(event)" />
                                </span>
                            </label>
                            <input type="text" class="form-control form-control-sm bg-white" style="height:29px" id="filename" placeholder="Select the Image File" readonly>
                        </div>
                        <script>
                            var loadFile = function (event) {
                                var Foto = document.getElementById('image-news');
                                $("#filename").val(event.target.files[0].name);
                                Foto.src = URL.createObjectURL(event.target.files[0]);
                            };
                        </script>
                    </div>
                    <div class="col-md-8 input-group-sm">
                        <div class="row" style="padding-top:1px !important">
                            @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label label-sm col-md-2", @style = "padding-top:2px !important" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control form-control-sm", @style = "padding-top:1px !important; border:0; background-color:white", @readonly = true } })
                            </div>
                        </div>
                        <div class="row" style="padding-top:1px !important">
                            @Html.LabelFor(model => model.Editor, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:2px !important" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Editor, new { htmlAttributes = new { @class = "form-control form-control-sm", @style = "padding-top:1px !important; border:0; background-color:white", @readonly = true } })
                            </div>
                        </div>
                        <div class="row" style="padding-top:1px !important">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:2px !important" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.Category,
                                new SelectList(Model.CMSCategoryList, "ID", "Name"),
                                new { @class = "form-control form-control-sm", @required = true })
                                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row" style="padding-top:1px !important">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:2px !important" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control form-control-sm", @style = "padding-top:1px !important", @required = true } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row" style="padding-top:1px !important">
                            @Html.LabelFor(model => model.SubTitle, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:2px !important" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.SubTitle, new { htmlAttributes = new { @class = "form-control form-control-sm", @style = "padding-top:1px !important", @required = true } })
                                @Html.ValidationMessageFor(model => model.SubTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row" style="padding-top:1px !important">
                            @Html.LabelFor(model => model.IsContent, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:2px !important" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.IsContent, 7, 0, new { @class = "form-control form-control-sm", @style = "width:100% !important", @required = true })
                                @Html.ValidationMessageFor(model => model.IsContent, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row" style="padding-top:1px !important">
                            @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                <div class="pull-left">
                                    @Html.CheckBoxFor(model => model.Publish, new { @class = "checkbox", @style = "padding-top:1px !important" })
                                </div>
                                <div class="">
                                    @Html.EditorFor(model => model.PublishedDate, new { htmlAttributes = new { @type = "hidden", @class = "text-center", @style = "border:0; background-color:white; width:100px; font-size: 12px", @readonly = true } })
                                </div>
                            </div>
                        </div>
                        @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @type = "hidden" } })

                    </div>
                </div>
            </form>
        </div>

        <div class="card-footer bg-gray-active">
            <div class="col-lg-5">
                <button type="submit" class="btn btn-sm btn-primary" style="width:80px">
                    <span class="fa fa-save"></span> Save
                </button>
                <button type="button" onclick="history.back()" class="btn btn-sm btn-danger" style="width:80px">
                    <span class="fa fa-remove" aria-hidden="true"></span>
                    Cancel
                </button>
            </div>

        </div>
    </div>

}

<script>

    $(document).ready(function () {
        var publish = $("#Publish").prop("checked")
        if (publish == true) {
            $("#PublishedDate").prop("type", "text");
        }

        $('input[type="checkbox"]').change(function () {
            if ($(this).is(":checked")) {
                $("#PublishedDate").prop("type", "text");
            }
            else if ($(this).is(":not(:checked)")) {
                $("#PublishedDate").prop("type", "hidden");
            }
        });
    });
</script>