
<div class="modal animated fadeIn" id="crudStockActualModal" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="false">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-primary" role="document" style="width:90% !important">
        <div class="modal-content">
            <form id="crudStockActualForm" class="needs-validation" novalidate>
                <div class="modal-header">
                    <h6 class="modal-title"><span class="fa fa-plus-square"></span> @ViewBag.Title</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualNumber" class="col-sm-3 col-form-label col-form-label-sm">Number</label>
                                <div class="col-sm-9">
                                    <input type="text" class="form-control form-control-sm bg-white" placeholder="Auto Generate" id="crud-StockActualNumber">
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDate" class="col-sm-3 col-form-label col-form-label-sm">Date</label>
                                <div class="col-sm-9">
                                    <input type="date" class="form-control form-control-sm bg-white datepicker" id="crud-StockActualDate" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualAreaId" class="col-sm-3 col-form-label col-form-label-sm">Area</label>
                                <div class="col-sm-9">
                                    <select class="custom-select custom-select-sm bg-white" id="crud-StockActualAreaId" onchange="loadComboLocation('*');reloadGridStockActualDetail()" required></select>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualLocationId" class="col-sm-3 col-form-label col-form-label-sm">Location</label>
                                <div class="col-sm-9">
                                    <select class="custom-select custom-select-sm bg-white" id="crud-StockActualLocationId" onchange="reloadGridStockActualDetail()" required></select>
                                </div>
                            </div>

                        </div>
                        <div class="col-md-4">
                            
                        </div>
                        <div class="col-md-12">
                            <table id="jqGridCrudStockActual"></table>
                        </div>
                    </div>

                    <div id="crudStockActualError"></div>
                    <input type="hidden" id="StockActualAction" />
                </div>
                <div class="modal-footer">
                    <button id="btn-crudStockActual" type="submit" class="btn btn-sm btn-primary" dismiss="modal"><span class="fa fa-dot-circle-o"></span> Submit</button>
                    <button type="button" class="btn btn-sm btn-danger" data-dismiss="modal"><span class="fa fa-times"></span> Cancel</button>
                </div>
            </form>

        </div>
    </div>
</div>

<div class="modal animated fadeIn" id="crudStockActualDetailModal" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="false">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <form id="crudStockActualDetailForm" class="needs-validation" novalidate>
                <div class="modal-header">
                    <h6 class="modal-title"><span class="fa fa-plus-square"></span> StockActualDetail</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group form-group-sm row" hidden>
                                <label for="crud-StockActualDetailCustomerId" class="col-md-4 col-form-label col-form-label-sm">Customer</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailCustomerId" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row" hidden>
                                <label for="crud-StockActualDetailLineId" class="col-md-4 col-form-label col-form-label-sm">Line</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailLineId" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row" hidden>
                                <label for="crud-StockActualDetailSupplierId" class="col-md-4 col-form-label col-form-label-sm">Supplier</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailSupplierId" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailUniqueNumber" class="col-md-4 col-form-label col-form-label-sm">Unique Number</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailUniqueNumber" disabled required>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailPartNumber" class="col-md-4 col-form-label col-form-label-sm">Part Number</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailPartNumber" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailPartName" class="col-md-4 col-form-label col-form-label-sm">Part Name</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailPartName" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailPartModel" class="col-md-4 col-form-label col-form-label-sm">Model</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailPartModel" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailPackingId" class="col-md-4 col-form-label col-form-label-sm">Type Packing</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailPackingId" disabled>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailUnitQty" class="col-md-4 col-form-label col-form-label-sm">Qty / Kanban</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailUnitQty" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailUnitLevel2" class="col-md-4 col-form-label col-form-label-sm">Unit</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-StockActualDetailUnitLevel2" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailStockKanban" class="col-md-4 col-form-label col-form-label-sm">Stock Kanban</label>
                                <div class="col-md-8">
                                    <input type="number" class="form-control form-control-sm bg-white" id="crud-StockActualDetailStockKanban" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailStockQty" class="col-md-4 col-form-label col-form-label-sm">Stock Qty</label>
                                <div class="col-md-8">
                                    <input type="number" class="form-control form-control-sm bg-white" id="crud-StockActualDetailStockQty" disabled>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailActualQty" class="col-md-4 col-form-label col-form-label-sm">Actual Qty</label>
                                <div class="col-md-8">
                                    <input type="number" min="0" class="form-control form-control-sm" id="crud-StockActualDetailActualQty" onchange="calculateBalanceQty()" required>
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-StockActualDetailBalanceQty" class="col-md-4 col-form-label col-form-label-sm">Balance Qty</label>
                                <div class="col-md-8">
                                    <input type="number" class="form-control form-control-sm bg-white" id="crud-StockActualDetailBalanceQty" disabled>
                                </div>
                            </div>

                        </div>
                    </div>

                    <input type="hidden" id="StockActualDetailId" />
                    <input type="hidden" id="StockActualDetailAction" />
                    <input type="hidden" id="StockActualDetailRowStatus" />
                    <div id="crudStockActualDetailError"></div>

                </div>
                <div class="modal-footer">
                    <div class="ml-3" style="position:absolute;left:0">
                        <a href="#" id="btn-prev" class="btn btn-sm btn-outline-primary" onclick="crudStockActualDetailMove('prev')"><span class="fa fa-arrow-left fa-2x"></span></a>
                        <a href="#" id="btn-next" class="btn btn-sm btn-outline-primary" onclick="crudStockActualDetailMove('next')"><span class="fa fa-arrow-right fa-2x"></span></a>
                    </div>
                    <button id="btn-crudStockActualDetail" type="submit" class="btn btn-sm btn-primary" dismiss="modal"><span class="fa fa-dot-circle-o"></span> Submit</button>
                    <button type="button" class="btn btn-sm btn-danger" data-dismiss="modal"><span class="fa fa-sign-out"></span> Finish</button>
                </div>
            </form>

        </div>
    </div>
</div>


<script>

    $('#crudStockActualDetailModal').on('keydown', 'input, select', function (e) {
        if (e.which === 13) {
            var self = $(this), form = self.parents('form:eq(0)'), focusable, next;
            focusable = form.find('input').filter(':visible');
            next = focusable.eq(focusable.index(this) + 1);
            if (this.id === "crud-StockActualDetailActualQty") {
                $("#btn-crudStockActualDetail").focus();
            } else {
                if (next.length) {
                    next.focus();
                }
            }

            return false;
        }
    });

    function crudStockActual(action, id) {

        //call partial on _Layout
        loadblockspinner();
        $('#search_content').html("").load('@Url.Action("SearchPartRawMaterial","Search")');

        document.getElementById("crudStockActualForm").reset();
        $('#crudStockActualForm').removeClass('was-validated');
        $('#crudStockActualError').html("");
        $('#btn-addStockActualDetail').removeAttr('disabled');
        $("#btn-crudStockActual").html("<span class='fa fa-dot-circle-o'></span> Submit");
        $("#crudStockActualForm input,select").each(function () {
            $(this).removeAttr("readonly").removeAttr("disabled").removeClass('error').next('label.error').remove().val("");
        });
        $('#jqGridCrudStockActual').jqGrid('clearGridData');
        $("#approvalInfo").text("");
        $("#StockActualAction").val(action);

        var newdate = '@ViewBag.DateTime';
        newdate = moment(new Date(newdate)).format("YYYY-MM-DD");
        var approval = '@ViewBag.ApprovalLevel';

        if (approval != 1) {
            var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b> Incorrect Approval Level!</b><br/>Create/Edit/Delete @ViewBag.Title need approval level as Creator. More Info : please contact your system administrator.</small></div>'
            $('#crudStockActualError').html(errMsg);
            $("#crudStockActualForm input,select").each(function () {
                $(this).attr("readonly", true).attr("disabled", true);
            });

            $("#btn-addStockActualDetail").attr("disabled", true);
            $("#btn-crudStockActual").attr("disabled", true);

            $('#crudStockActualModal').modal('show');
            return false;
        }

        var Grid = $('#jqGridMain'),
            selectedRowId = Grid.jqGrid('getGridParam', 'selrow'),
            InventoryNumber = Grid.jqGrid('getCell', selectedRowId, 'InventoryNumber'),
            StockActualDate = Grid.jqGrid('getCell', selectedRowId, 'InventoryDate');

            StockActualDate         = moment(new Date(StockActualDate)).format("YYYY-MM-DD");

        $("#crud-StockActualNumber").val(InventoryNumber);
        $("#crud-StockActualDate").val(StockActualDate);

        reloadGridStockActualDetail();

        switch (action) {
            case "Create":
                $("#crud-StockActualNumber").attr("readonly", true);
                $("#crud-StockActualDate").val(newdate);
                $("#crud-StockActualDate").focus();
                $("#crudStockActualModal .modal-dialog").removeClass("modal-success").removeClass("modal-danger").removeClass("modal-warning").removeClass("modal-info").addClass("modal-primary")
                $("#crudStockActualModal .modal-title").html('<span class="fa fa-plus-square"></span> ' + action + ' @ViewBag.Title');
                jQuery('#jqGridCrudStockActual').jqGrid('clearGridData')
                    .trigger('reloadGrid');
                $('#crudStockActualModal').modal('show');
                break;
            case "Update":
                $("#crud-StockActualNumber").attr("readonly", true);
                $("#crudStockActualModal .modal-dialog").removeClass("modal-primary").removeClass("modal-danger").removeClass("modal-warning").removeClass("modal-info").addClass("modal-success")
                $("#crudStockActualModal .modal-title").html('<span class="fa fa-pencil-square"></span> Input Actual @ViewBag.Title');
                $('#crudStockActualModal').modal('show');
                $("#crud-StockActualRemarks").focus();
                break;
            case "Delete":
                $("#crudStockActualForm input").each(function () {
                    $(this).attr("disabled",true);
                });
                $('#btn-addStockActualDetail').attr('disabled', true);
                $('#btn-addKanban').attr('disabled', true);
                $("#btn-uploadLogo").addClass("invisible");
                $("#btn-crudStockActual").html("<span class='fa fa-trash'></span> Delete");
                $("#crudStockActualModal .modal-dialog").removeClass("modal-primary").removeClass("modal-success").removeClass("modal-warning").removeClass("modal-info").addClass("modal-danger")
                $("#crudStockActualModal .modal-title").html('<span class="fa fa-trash"></span> Input Actual @ViewBag.Title');
                $('#crudStockActualModal').modal('show');
                break

        }

    }

    $('#crud-StockActualAreaId').change(function () {
        $('#crudStockActualError').html("");
    });

    $('#crud-StockActualLocationId').change(function () {
        $('#crudStockActualError').html("");
    });

    $(function () {
        var focusedElement;
        $(document).on('focus', 'input', function () {
            if (focusedElement == this) return; //already focused, return so user can now place cursor at specific point in input.
            focusedElement = this;
            setTimeout(function () { focusedElement.select(); }, 100); //select all text in any field on focus for easy re-entry. Delay sightly to allow focus to "stick" before selecting.
        });
    });

    $(function () {
        $gridStockActualDetail = $("#jqGridCrudStockActual").jqGrid({
            url: "@Url.Action("StockTakingDetailListJson", "Inventory")",
            mtype: "GET",
            datatype: "json",
            postData: { InventoryNumber: "*" },
            colModel: [
                { label: 'ACTION', name: 'Action', editable: false, align: 'center', fixed: true, width: 80, sortable: false, formatter: actionStockActualDetailFormatter },
                { label: 'STATUS', name: 'RowStatus', editable: false, align: 'center', fixed: true, width: 60, sortable: false, formatter: statusCrudActualFormatter },
                { label: 'CUSTOMER', name: 'CustomerId', align: 'left', hidden: true, width: 60, sortable: false },
                { label: 'LINE', name: 'LineId', align: 'left', hidden: true, width: 60, sortable: false },
                { label: 'SUPPLIER', name: 'SupplierId', align: 'left', hidden: true, width: 60, sortable: false },
                { label: 'STOCK TYPE', name: 'StockType', align: 'center', fixed: true, width: 100, sortable: false },
                { label: 'UNIQUE NUMBER', name: 'UniqueNumber', align: 'center', fixed: true, width: 60, sortable: false },
                { label: 'PART NUMBER', name: 'PartNumber', align: 'center', fixed: true, width: 110, sortable: false },
                { label: 'PART NAME', name: 'PartName', align: 'left', fixed: true, width: 195, sortable: false },
                { label: 'MODEL', name: 'PartModel', align: 'center', fixed: true, width: 70, sortable: false },
                { label: 'QTY/ KBN', name: 'UnitQty', align: 'center', fixed: true, width: 45, formatter: 'number', sortable: false },
                { label: 'UNIT', name: 'UnitLevel2', align: 'center', fixed: true, width: 50, sortable: false },
                { label: 'TYPE PACKING', name: 'PackingId', align: 'center', fixed: true, width: 70, sortable: false },
                { label: 'KANBAN', name: 'StockKanban', align: 'right', fixed: true, width: 70, formatter: 'number', sortable: false },
                { label: 'QTY', name: 'StockQty', align: 'right', fixed: true, width: 70, formatter: 'number', sortable: false },
                { label: 'ACTUAL', name: 'ActualQty', align: 'right', fixed: true, width: 70, formatter: 'number', sortable: false },
                { label: 'BALANCE', name: 'BalanceQty', align: 'right', fixed: true, width: 70, formatter: 'number', sortable: false },
            ],
            gridview: true,
            //pager: '#jqGridPagerCrudStockActualDetail',
            loadonce: true,
            height: 220,
            pgbuttons: false,
            pgtext: null,
            viewrecords: true,
            rowNum: 9999,
            rownumbers: true,
            rownumWidth: 30,
            autoresizeOnLoad: true,
            autowidth: true,
            shrinkToFit: true,
            fromServer: true,
            loadComplete: function () {

                var action = $("#StockActualAction").val();
                if (action === "Create") {
                    var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;

                    for (i = 0; i < l; i++) {
                        //$this.jqGrid('editRow', ids[i], true);
                        parameters =
                        {
                            RowStatus: action,
                        }
                        $("#jqGridCrudStockActual").jqGrid('setRowData', ids[i], parameters);

                    }
                }
            },
            ondblClickRow: function (rowid) {
                crudStockActualDetail("Update", rowid);
            },
        });

        $('#jqGridCrudStockActual').jqGrid('setGroupHeaders', {
            useColSpanStyle: true,
            groupHeaders: [
                { startColumnName: 'StockKanban', numberOfColumns: 4, titleText: 'STOCK' },
            ]
        });
    });

    function reloadGridStockActualDetail() {

        var formaction  = $("#StockActualAction").val();
        var inventorynumber = $("#crud-StockActualNumber").val();
        var areaid = $("#crud-StockActualAreaId").val();
        var locationid = $("#crud-StockActualLocationId").val();

        //if (areaid === "") {
        //    return false;
        //}

        $("#jqGridCrudStockActual").jqGrid('setGridParam', {
            datatype: 'json',
            mtype: 'GET',
            postData: {
                InventoryNumber: inventorynumber,
                areaid: areaid,
                locationid: locationid,
                formAction: formaction,
            }
        }).trigger('reloadGrid');
    };

    function actionStockActualDetailFormatter(cellvalue, options, rowObject) {
        var rowid = options.rowId;
        var formaction = $("#StockActualAction").val();
        var canupdate = '@ViewBag.canUpdate';
        var candelete = '@ViewBag.canDelete';

        if (formaction === "Closed" || formaction === "Canceled" || formaction === "Delete") {
            canupdate = "disabled";
            candelete = "disabled";
        }

        var btn = "<div class='table-link'>";
        btn += "<a href='#' id='btn-edit" + rowid + "' class='btn btn-sm btn-success text-white " + canupdate + "' onclick=\"crudStockActualDetail('Update','" + rowid + "')\" datatoogle='tooltip' title='Delete @ViewBag.Title Item [ " + rowObject.PartNumber + " ]'>";
        btn += "<span class='fa fa-pencil'></span> Update";
        btn += "</a></div>";
        return btn;
    }


    function statusCrudActualFormatter(cellvalue, options, rowObject) {

        switch (cellvalue) {
            case "Create":
                return "<span class='badge badge-primary'>New</span>"
                break;
            case "Update":
                return "<span class='badge badge-success'>Updated</span>"
                break;
            case "Delete":
                return "<span class='badge badge-danger'>Removed</span>"
                break;
            default:
                return "";
                break;
        }
    }

    function crudStockActualDetailMove(action) {
        var $grid = $("#jqGridCrudStockActual");
        var id = $("#StockActualDetailId").val();
        var rowIndex = $grid.jqGrid('getInd', id);
        var dataIDs = $grid.getDataIDs();
        var datalen = (dataIDs.length) - 1;

        $("#btn-prev").removeClass("disabled");
        $("#btn-next").removeClass("disabled");


        switch (action) {
            case "prev":

                rowIndex = parseInt(rowIndex) - 2;

                if (dataIDs.length >= rowIndex && rowIndex >= 0) {

                    var prevID = dataIDs[rowIndex];
                    crudStockActualDetail("Update", prevID)
                    $grid.setSelection(prevID, false);

                }

                if (rowIndex <= 0) {
                    $("#btn-prev").addClass("disabled");
                }

                break;

            case "next":

                if (dataIDs.length > rowIndex) {

                    var nextID = dataIDs[rowIndex];
                    crudStockActualDetail("Update", nextID)
                    $grid.setSelection(nextID, false);

                }

                if (datalen <= rowIndex) {
                    $("#btn-next").addClass("disabled");
                }

                break;

        }

    }
    function crudStockActualDetail(action, id) {

        document.getElementById("crudStockActualDetailForm").reset();
        $('#crudStockActualDetailForm').removeClass('was-validated');
        $('#crudStockActualError').html("");
        $('#crudStockActualDetailError').html("");
        $("#btn-crudStockActualDetail").html("<span class='fa fa-dot-circle-o'></span> Submit");

        $("#crudStockActualDetailForm :input").each(function () {
            $(this).removeClass('error').next('label.error').remove().val("");
        });

        $("#StockActualDetailAction").val(action);
        var inventorydate = $("#crud-StockActualDate").val();
        var inventorystarttime = $("#crud-StockActualStartTime").val();
        var inventoryendtime = $("#crud-StockActualEndTime").val();

        if (inventorydate === "" || inventorystarttime === "" || inventoryendtime === "" ) {
            var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b>Not completed fields!</b><br/>Please type Inventory Date / Start Time / End Time completely before add @ViewBag.Title Detail.</small></div>'
            $('#crudStockActualError').html(errMsg);
            return false;
        }

        if (id != "") {
            var $grid = $("#jqGridCrudStockActual");
            var rowData = $grid.jqGrid("getRowData", id),
                RowStatus = rowData.RowStatus.split(">"),
                CustomerId = rowData.CustomerId,
                LineId = rowData.LineId,
                SupplierId = rowData.SupplierId,
                UniqueNumber = rowData.UniqueNumber,
                PartNumber = rowData.PartNumber,
                PartName = rowData.PartName,
                PartModel = rowData.PartModel,
                PartModel = rowData.PartModel,
                UnitQty = rowData.UnitQty,
                UnitLevel2 = rowData.UnitLevel2,
                PackingId = rowData.PackingId,
                StockKanban = rowData.StockKanban,
                StockQty = rowData.StockQty,
                ActualQty = rowData.ActualQty,
                BalanceQty = rowData.BalanceQty;

            if (RowStatus != "") {
                RowStatus = RowStatus[1].split("<");
                RowStatus = RowStatus[0];
            }

            $("#StockActualDetailId").val(id);
            $("#StockActualDetailRowStatus").val(RowStatus);
            $("#crud-StockActualDetailCustomerId").val(CustomerId);
            $("#crud-StockActualDetailLineId").val(LineId);
            $("#crud-StockActualDetailSupplierId").val(SupplierId);
            $("#crud-StockActualDetailUniqueNumber").val(UniqueNumber);
            $("#crud-StockActualDetailPartNumber").val(PartNumber);
            $("#crud-StockActualDetailPartName").val(PartName);
            $("#crud-StockActualDetailPartModel").val(PartModel);
            $("#crud-StockActualDetailUnitQty").val(UnitQty);
            $("#crud-StockActualDetailUnitLevel2").val(UnitLevel2);
            $("#crud-StockActualDetailPackingId").val(PackingId);
            $("#crud-StockActualDetailStockKanban").val(StockKanban);
            $("#crud-StockActualDetailStockQty").val(StockQty);
            $("#crud-StockActualDetailActualQty").val(ActualQty);
            $("#crud-StockActualDetailBalanceQty").val(BalanceQty);

        }

        switch (action) {
            case "Update":
                $("#btn-crudStockActualDetail").html("<span class='fa fa-trash'></span> Submit");
                $("#crudStockActualDetailModal .modal-dialog").removeClass("modal-primary").removeClass("modal-danger").addClass("modal-success")
                $("#crudStockActualDetailModal .modal-title").html('<span class="fa fa-trash"></span> ' + action + ' @ViewBag.Title Item');
                $('#crudStockActualDetailModal').modal('show');
                $("#crud-StockActualDetailActualQty").focus().select();

                var rowIndex = $grid.jqGrid('getInd', PartNumber);
                var dataIDs = $grid.getDataIDs();
                var datalen = (dataIDs.length);

                $("#btn-prev").removeClass("disabled");
                $("#btn-next").removeClass("disabled");

                if (rowIndex === 1) {
                    $("#btn-prev").addClass("disabled");
                }
                if (rowIndex === datalen) {
                    $("#btn-next").addClass("disabled");
                }

                break
        }
    }

    $(document).ready(function () {
        $(function () {
            $("#crudStockActualDetailForm").submit(function (event) {

                $(this).validate();
                event.preventDefault();

                if ($(this).valid()) {

                    var action = $('#StockActualDetailAction').val();
                    var rowStatus = $('#StockActualDetailRowStatus').val();

                    switch (action) {
                        case "Update":

                            var rowid = $("#StockActualDetailId").val()
                            var ActualQty = $("#crud-StockActualDetailActualQty").val()
                            var BalanceQty = $("#crud-StockActualDetailBalanceQty").val()

                            parameters =
                            {
                                RowStatus: action,
                                ActualQty: ActualQty,
                                BalanceQty: BalanceQty,
                            }
                            $("#jqGridCrudStockActual").jqGrid('setRowData', rowid, parameters);

                            showToast("Success", "Actual Qty @ViewBag.Title " + $("#crud-StockActualDetailPartName").val() + " has been updated succesfully");
                            //$('#crudStockActualDetailModal').modal('hide');

                            var lastrow = $("#btn-next").hasClass("disabled");
                            if (lastrow === true) {
                                $('#crudStockActualDetailModal').modal('hide');
                            } else {
                                $("#btn-next").click();
                            }

                            break;
                    }

                }
            });
        });
    });

    $(document).ready(function () {

        $(function () {
            $("#crudStockActualForm").submit(function (event) {
                event.preventDefault();
                if ($(this).valid()) {

                    var formData = new FormData();

                    var jsonData = {
                        StockTaking: {
                            InventoryNumber     : $("#crud-StockActualNumber").val(),
                            InventoryDate       : $("#crud-StockActualDate").val(),
                            InventoryStartTime  : null,
                            InventoryEndTime    : null,
                            Remarks             : null,
                            Update              : null,
                            Status              : null,
                            EditDate            : null,
                            UserID              : null
                        },
                        StockTakingDetail: $("#jqGridCrudStockActual").jqGrid('getGridParam', 'data'),
                        ApprovalId: '@ViewBag.ApprovalId',
                        formAction: 'ActualStock'
                    };

                    formData.append("jsonData", JSON.stringify(jsonData));
                    //console.log(jsonData);
                    //return false;

                    $.ajax({
                        url: '@Url.Action("crudStockTakingList", "Inventory")',
                        type: 'POST',
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        dataType: "JSON",
                        data: formData,
                        success: function (data) {
                            $('#crudStockActualModal').modal('hide');
                            var act = $("#StockActualAction").val();
                            showToast("Success", act + " Actual Stock <br/>" + data.InventoryNumber + " <br/>has been saved succesfully");
                            return reloadGridStockTaking();
                        },
                        error: function (xhr, desc, err) {
                            var respText = "";
                            try {
                                respText = eval(xhr.responseText);
                            } catch{
                                respText = xhr.responseText;
                            }

                            respText = unescape(respText).replaceAll("_n_", "<br/>")

                            var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b> Error ' + xhr.status + '!</b><br/>' + respText + '</small></div>'
                            $('#crudStockActualError').html(errMsg);
                        }
                    });
                }
            });
        });
    });

    function calculateBalanceQty() {
        var StockQty = $("#crud-StockActualDetailStockQty").val();
        var ActualQty = $("#crud-StockActualDetailActualQty").val();
        var BalanceQty = parseFloat(ActualQty) - parseFloat(StockQty);

        $("#crud-StockActualDetailBalanceQty").val(BalanceQty);

    }

    loadComboArea();

    function loadComboArea() {

        $.ajax({
            url: '@Url.Action("AreaListJson", "Warehouse")',
            type: "GET",
            dataType: "JSON",
            data: { },
            success: function (response) {

                var id = "#crud-StockActualAreaId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Area")
                );
                $.each(response, function (i, area) {
                    $(id).append(
                        $('<option></option>').val(area.AreaID).html(area.AreaName)
                    );
                });
            }
        })
    }

    function loadComboLocation(aid) {

        if (aid === "*") {
            aid = $("#crud-StockActualAreaId").val();
        }

        $.ajax({
            url: '@Url.Action("LocationListJson", "Warehouse")',
            type: "GET",
            dataType: "JSON",
            async: false,
            data: { searchFilter : aid},
            success: function (response) {

                var id = "#crud-StockActualLocationId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Location")
                );
                $.each(response, function (i, location) {
                    $(id).append(
                        $('<option></option>').val(location.LocationId).html(location.LocationName)
                    );
                });
            }
        })

    }
</script>

