@model Core.VSSP.Models.ExportOptionModel

<section class="app-section" id="UserManagement-List">
    <div class="card card-accent-secondary">
        <div class="card-header bg-white">
            <div class="row">
                <div class="col-md-8">
                    <div class="card-title mt-1">
                        <i class="@ViewBag.IconClass"></i> @ViewBag.Title
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="input-group input-group-sm">
                        <input id="searchFilter" name="searchFilter" type="text" class="form-control border-secondary" placeholder="Search key here...">
                        <div class="input-group-append">
                            <button id="btnFilter" type="button" class="btn btn-secondary" onclick="reloadGridList()"><i class="fa fa-search"></i> Find</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body" style="padding:2px 4px 2px 2px">
            <table id="jqGridMain"></table>
            <div id="jqGridPagerMain"></div>
        </div>
        <div class="card-footer bg-gray-active">
            <div class="row">
                <div class="col-md-8">
                    <div class="row">
                        <div class="ml-3" style="padding:2px!important">
                            <button class="btn btn-sm btn-outline-dark" type="button" style="width:80px" onclick="location.href='@Url.Action("UserAdd", "Account" )'" @ViewBag.canCreate><i class="fa fa-pencil-square-o"></i> Create</button>
                            <button class="btn btn-sm btn-outline-dark" type="button" style="width:80px" onclick="reloadGridList()"><i class="fa fa-refresh"></i> Refresh</button>
                            <a href="@Url.Action("Dashboard","Home")" class="btn btn-sm btn-outline-dark" style="width:80px"><i class="fa fa-home"></i> Home</a>
                        </div>
                        <div class="ml-3 mt-1">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" value="" id="sw-active" onclick="reloadGridList()" checked>
                                <label class="custom-control-label" for="sw-active"><small> Active User</small></label>
                            </div>
                        </div>
                        @*<div class="ml-3 mt-1">
                                <div class="custom-control custom-checkbox">
                                    <input type="checkbox" class="custom-control-input" value="" id="sw-showhide" onclick="showhideCol('click')">
                                    <label class="custom-control-label" for="sw-showhide"><small> Show all column</small></label>
                                </div>
                            </div>*@
                    </div>
                </div>
                <div class="col-md-4" style="padding-top:2px!important">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            <button id="export" type="button" class="btn btn-primary" style="width:80px"><i class="fa fa-file-text-o"></i> Export</button>
                        </div>
                        @Html.DropDownListFor(model => model.ExportOption,
                        new SelectList(Model.ExportList, "ExportID", "ExportName"),
                        new { @id = "ExportOption", @class = "form-control border-primary" })

                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Archive User Modal -->
    <div class="modal animated fadeIn" id="formArchive" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered modal-dark" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title"> Locked @ViewBag.Title</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("UserArchive", null, FormMethod.Post, new { @class = "smart-form client-form", role = "form", id = "smart-form-register" }))
                {
                    <div class="modal-body">
                        Are you sure you want to lock down User <br /> <strong> <label id="lblarchive">???</label> </strong>?

                        <input type="hidden" class="form-control" id="archive-UserID" name="UserID" value="" />
                    </div>
                    <div class="modal-footer">
                        <button id="myAllert" type="submit" class="btn btn-primary" dismiss="modal"> Yes</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal"> Cancel</button>
                    </div>
                }
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
    <!-- /.Archive User modal -->
    <!-- Activate User Modal -->
    <div class="modal animated fadeIn" id="formActivate" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered modal-success" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title"> Activate @ViewBag.Title</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("UserActivate", null, FormMethod.Post, new { @class = "smart-form client-form", role = "form", id = "smart-form-register" }))
                {
                    <div class="modal-body">
                        Are you sure you want to activate User <br /> <strong> <label id="lblactivate">???</label> </strong>?

                        <input type="hidden" class="form-control" id="activate-UserID" name="UserID" value="" />
                    </div>
                    <div class="modal-footer clearfix">
                        <button id="myAllert" type="submit" class="btn btn-primary" dismiss="modal"> Yes</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal"> Cancel</button>
                    </div>
                }
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
    <!-- /.Activate User modal -->
    <!-- Delete User Modal -->
    <div class="modal animated fadeIn" id="formDelete" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered modal-danger" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title"> Delete @ViewBag.Title</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("UserDelete", null, FormMethod.Post, new { @class = "smart-form client-form", role = "form", id = "smart-form-register" }))
                {
                    <div class="modal-body">
                        Are you sure you want to Delete User <br /> <strong> <label id="lbldelete">???</label> </strong>?

                        <input type="hidden" class="form-control" id="delete-UserID" name="UserID" value="" />
                    </div>
                    <div class="modal-footer clearfix">
                        <button id="myAllert" type="submit" class="btn btn-primary" dismiss="modal"> Yes</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal"> Cancel</button>
                    </div>
                }
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
    <!-- /.Delete User modal -->
    @*@Html.Partial("UserManagementPartial/Crud")*@

</section>

<script>

    $(function () {
        var filterData = $('#searchFilter').val();
        var isactive = $("#sw-active").prop("checked");
        $grid = $("#jqGridMain").jqGrid({
            url: '@Url.Action("UserManagementJson", "Account")',
            datatype: "json",
            mtype: "GET",
            postData: {
                searchFilter: filterData,
                isActive: isactive
            },
            colModel: [
                { label: 'Action', name: 'Action', align: 'center', fixed: true, width: 80, formatter: actionFormatter },
                { label: 'Status', name: 'Status', align: 'center', fixed: true, width: 50, formatter: statusFormatter },
                { label: 'User Id', key: true, name: 'UserID', align: 'left', fixed: true, width: 100 },
                { label: 'User Name', name: 'UserName', align: 'left', fixed: true, width: 200 },
                { label: 'Email', name: 'Email', align: 'left', autoResizing: { minColWidth: 180 } },
                { label: 'Role', name: 'UserTypeID', align: 'center', fixed: true, width: 60 },
                { label: 'Confidential', name: 'ConfidentialAccess', align: 'center', fixed: true, width: 80, formatter: "checkbox" },
                { label: 'Created', name: 'Created', align: 'center', fixed: true, width: 100, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y H:i" } },
            ],
            gridview: true,
            loadonce: true,
            pager: '#jqGridPagerMain',
            rowNum: 20,
            rowList: [20,50,100],
            viewrecords: true,
            rownumbers: true,
            rownumWidth: 40,
            autoresizeOnLoad: true,
            autowidth: true,
            shrinkToFit: false,
            fromServer: true,
            loadComplete: function () {
                var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;
                for (i = 0; i < l; i++) {
                    $this.jqGrid('editRow', ids[i], true);
                }
            },
        }),
        $('#jqGridMain').jqGrid('navGrid', '#jqGridPagerMain', { search: false, edit: false, add: false, del: false });

    });

    function actionFormatter(cellvalue, options, rowObject) {

        var IsArchived = rowObject.IsArchived;
        var btn = "<div class='table-link'>";
        btn += "<a href='#' class='@ViewBag.canUpdate btn btn-sm btn-primary text-white' onclick=\"crudUserManagementList('Update','" + rowObject.UserID + "')\" datatoogle='tooltip' title='Edit User [ " + rowObject.UserName + " ]'>";
        btn += "<span class='fa fa-pencil'></span>";
        btn += "</a> ";
        btn += "<a href='#' class='@ViewBag.canDelete btn btn-sm btn-danger text-white' onclick=\"crudUserManagementList('Delete','" + rowObject.UserID + "','" + rowObject.UserName + "')\" datatoogle='tooltip' title='Delete User [ " + rowObject.UserName + " ]'>";
        btn += "<span class='fa fa-trash'></span>";
        btn += "</a> ";
        if (IsArchived == true) {
            btn += "<a href='#' class='@ViewBag.canDelete btn btn-sm btn-warning text-dark' onclick=\"crudUserManagementList('Activate','" + rowObject.UserID + "','" + rowObject.UserName + "')\" datatoogle='tooltip' title='Unlock User [ " + rowObject.UserName + " ]'>";
            btn += "<span class='fa fa-unlock-alt'></span>";
            btn += "</a>";
        } else {
            btn += "<a href='#' class='@ViewBag.canDelete btn btn-sm btn-warning text-dark' onclick=\"crudUserManagementList('Archive','" + rowObject.UserID + "','" + rowObject.UserName + "')\" datatoogle='tooltip' title='Lock User [ " + rowObject.UserName + " ]'>";
            btn += "<span class='fa fa-lock'></span>";
            btn += "</a>";
        }

        btn += "</div>";
        return btn;
    }

    function statusFormatter(cellvalue, options, rowObject) {
        var IsActive = rowObject.IsActive;
        var IsArchived = rowObject.IsArchived;

        if (IsArchived == false) {
            return "<span class='fa fa-unlock-alt text-success'></span>"
        } else {
            return "<span class='fa fa-lock text-danger'></span>"
        }
    }

    function iconFormatter(cellvalue, options, rowObject) {
        var classicon = rowObject.IconClass;
        return "<span class='" + classicon + "'></span>"
    }

    function reloadGridList() {
        var isactive = $("#sw-active").prop("checked");
        var filterData = $('#searchFilter').val();
        $("#jqGridMain").jqGrid('setGridParam', {
            datatype: 'json',
            mtype: 'GET',
            postData: {
                searchFilter: filterData,
                isActive: isactive
            }
        }).trigger('reloadGrid');
    };

    function doSuccess(data, action) {
        switch (action) {
            case "create":
                showToast("Success", "Create " + data.MenuName + " has been saved succesfully");
                return reloadGridList();
                break;
            case "update":
                showToast("Success", "Update " + data.MenuName + " has been saved succesfully");
                return reloadGridList();
                break;
            case "delete":
                showToast("Failed", "Delete " + data.MenuName + " has been removed succesfully");
                return reloadGridList();
                break;
        }
    }

    $("#searchFilter").on('keypress', function (e) {
        if (e.which == 13) {
            $("#btnFilter").button().click();
        }
    });

    function showhideCol(event) {

        var res = $("#sw-showhide").prop("checked");
        var showhideCol = "";

        if (res === true) {
            showhideCol = 'showCol';
        } else {
            showhideCol = 'hideCol';
        }


        if (event != "load") {
            window.location.reload();
            //reloadGridList();
        }

        $("#jqGridMain").jqGrid(showhideCol, "Provience")
        $("#jqGridMain").jqGrid(showhideCol, "Country")
        $("#jqGridMain").jqGrid(showhideCol, "PostalCode")
        $("#jqGridMain").jqGrid(showhideCol, "Websites")
        $("#jqGridMain").jqGrid(showhideCol, "TaxId")

    };

    $(document).ready(function () {
        showhideCol("load");
    });

    $("#export").on("click", function () {
        var res = $("#sw-showhide").prop("checked");
        var orientation;
        if (res === true) {
            orientation = "landscape";
        } else {
            orientation = "portrait";
        }

        $("#jqGridMain").jqGrid("hideCol", "Logo")
        $("#jqGridMain").jqGrid("hideCol", "Actived")
        exportGrid('#jqGridMain', 'A4', '@ViewBag.Title', orientation);
        $("#jqGridMain").jqGrid("showCol", "Logo")
        $("#jqGridMain").jqGrid("showCol", "Actived")

    })

    function crudUserManagementList(action, userid, username){
        switch (action) {
            case "Create":
                break;
            case "Update":
                var url = '@Url.Action("UserEdit", "Account")';
                url += "?ID=" + userid;
                window.location.href = url;

                break;
            case "Delete":
                $("#lbldelete").text(username);
                $("#delete-UserID").val(userid);
                $('#formDelete').modal('show');
                break;
            case "Archive":
                $("#lblarchive").text(username);
                $("#archive-UserID").val(userid);
                $('#formArchive').modal('show');
                break;
            case "Activate":
                $("#lblactivate").text(username);
                $("#activate-UserID").val(userid);
                $('#formActivate').modal('show');
                break;
        }
    }

</script>

<!-- toast-alert -->
@Html.Partial("_VSSPLayout/Messages/toast_alert")
