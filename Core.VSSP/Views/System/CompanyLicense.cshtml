
@model Core.VSSP.Models.CompanyLicenseModel

@{ Layout = ""; }

@*@{
    ViewBag.Title = @Session["AppID"].ToString() + " | License Configuration";
}*@

<!DOCTYPE html>
<!--
* CoreUI - Free Bootstrap Admin Template
* @@version v2.0.0
* @@link https://coreui.io
* Copyright (c) 2018 creativeLabs Łukasz Holeczek
* Licensed under MIT (https://coreui.io/license)
*
* Adaptated to ASP.NET MVC Core 2.1 by Miguel Veloso
* http://coderepo.blog
-->

<html lang="en">
<head>
    @Html.Partial("_VSSPLayout/_app-meta")
    @*<title>@ViewBag.Title</title>*@

    @Styles.Render("~/Core/CSS/Icons")
    @Styles.Render("~/Core/CSS/Style")

</head>

<body class="app flex-row align-items-center">

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-12">
                @using (Html.BeginForm("CompanyLicenseCRUD", null, FormMethod.Post, new { enctype = "multipart/form-data", role = "form" }))
                {
                    <div class="card-group">
                        <div class="card p-4 bg-primary">
                            <div class="card-body">
                                <div>
                                    <div class="form-group has-feedback">
                                        <h2>Company Registration</h2>
                                        <p>Registering your company information to using the application</p>
                                        <hr />
                                        <br />
                                        <div class="col-md-12 text-center">
                                            @if (Model.LogoSmall == null)
                                            {
                                                <img id="imgLogoSmall" src="~/_VSSPAssets/Images/Logo/logo-vssp.png" alt="image" +imageIndex class="img-thumbnail img-company-logo-sm">
                                            }
                                            else
                                            {
                                                var base64 = Convert.ToBase64String((byte[])Model.LogoSmall);
                                                var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);

                                                <img id="imgLogoSmall" src="@imgSrc" alt="image" +imageIndex class="img-thumbnail img-company-logo-sm">
                                            }
                                            <br />
                                            <span class="btn btn-file btn-primary btn-sm">
                                                <i class="fa fa-search"></i> Browse Small Logo
                                                <input id="LogoSmallFile" name="LogoSmallFile" type="file" accept="image/*" class="custom-file-input" onchange="loadFile(event,'imgLogoSmall')" />
                                            </span>
                                        </div>
                                    </div>
                                    <div class="form-group has-feedback">
                                        <div class="col-md-12 text-center">
                                            @if (Model.Logo == null)
                                            {
                                                <img id="imgLogo" src="~/_VSSPAssets/Images/Logo/logo-vssp-title.png" alt="image" +imageIndex class="img-thumbnail img-company-logo" style="width:100%;height:50%">
                                            }
                                            else
                                            {
                                                var base64 = Convert.ToBase64String((byte[])Model.Logo);
                                                var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);

                                                <img id="imgLogo" src="@imgSrc" alt="image" +imageIndex class="img-thumbnail img-company-logo" style="width:100%;height:50%">
                                            }
                                            <br />
                                            <span class="btn btn-file btn-primary btn-sm">
                                                <i class="fa fa-search"></i> Browse Full Logo
                                                <input id="LogoFile" name="LogoFile" type="file" accept="image/*" class="custom-file-input" onchange="loadFile(event,'imgLogo')" />
                                            </span>

                                        </div>
                                    </div>

                                    <script>
                                        var loadFile = function (event, target) {
                                            var Foto = document.getElementById(target);
                                            Foto.src = URL.createObjectURL(event.target.files[0]);
                                        };
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card p-4">
                        <div class="card-body">
                            <h1>General</h1>
                            <p class="text-muted">Company information</p>
                            <hr />

                            <div class="form-horizontal">

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Company ID", @required = true } })
                                        @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Company Name", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Address", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "City", @required = true } })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Provience, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Provience", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Provience, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Country", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Zip Code", @required = true } })
                                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                    <div class="card p-4">
                        <div class="card-body">

                            <div class="form-horizontal">

                                <h1>Contact</h1>
                                <p class="text-muted">Phone, Fax, Email, and Websites address</p>
                                <hr />

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Phone1, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Phone #1", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Phone1, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Phone #2", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Phone2, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Fax Number", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Email1, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Sales Email", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Email1, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Email2, new { htmlAttributes = new { @class = "form-control form-control-sm", @Placeholder = "Info Email", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Email2, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group has-feedback">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Websites, new { htmlAttributes = new { @class = "form-control form-control-sm form-control-feedback ", @Placeholder = "Website Address", @required = true } })
                                        @Html.ValidationMessageFor(model => model.Websites, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <input type="hidden" id="FormAction" name="FormAction" value="create" />

                                <hr />
                                <div class="form-group text-center">
                                    <div class="col-md-12">
                                        <button type="submit" class="btn btn-primary active mt-3 btn-block">Register</button>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Bootstrap and necessary plugins-->
    @Scripts.Render("~/Core/JS/Plugins")

</body>

</html>

<script>
    @*if (model > @model.Logo.GetType() != typeof(null)) {
        var byteArray = model > model.Logo;
        var base64 = base64js.fromByteArray(byteArray);
        var imgid = "#Logo"
        $(imgid).attr('src', 'data:image/jpeg;base64,' + base64);
    };
    if (model > @model.LogoSmall.GetType() != typeof(null)) {
        var byteArray = model > model.LogoSmall;
        var base64 = base64js.fromByteArray(byteArray);
        var imgid = "#LogoSmall"
        $(imgid).attr('src', 'data:image/jpeg;base64,' + base64);
    };*@
</script>