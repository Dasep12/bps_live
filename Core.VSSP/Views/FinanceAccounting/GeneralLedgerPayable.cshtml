@model Core.VSSP.Models.ExportOptionModel

<section class="app-section" id="Accounting-GeneralLedger">
    <div class="card card-accent-secondary">
        <div class="card-header bg-white">
            <div class="row">
                <div class="col-md-11">
                    <div class="card-title mt-1">
                        <i class="@ViewBag.IconClass"></i> @ViewBag.Title
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="dropdown">
                        <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="fa fa-filter"></span> Filter
                        </button>
                        <form id="form-filter" class="dropdown-menu dropdown-menu-right p-4 bg-light" style="width:320px">
                            <h6>Filter @ViewBag.Title</h6>
                            <hr />
                            <div class="form-group form-group-sm">
                                <label for="supplierFilter" class="col-form-label col-form-label-sm">Supplier</label>
                                <select id="supplierFilter" type="date" class="custom-select custom-select-sm" placeholder="Supplier"></select>
                            </div>
                            <div class="form-group form-group-sm">
                                <label for="monthFilter" class="col-form-label col-form-label-sm">Month</label>
                                <div class="input-group input-group-sm">
                                    <input id="monthFilter" type="text" class="form-control" placeholder="Month Year Orders">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-sm btn-dark" onclick="reloadGridGeneralLedger()"><span class="fa fa-search"></span> Search</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body" style="padding:2px 2px 2px 2px">
            <ul class="nav nav-tabs" role="tabList">
                <li class="nav-item">
                    <a class="nav-link active" data-toggle="tab" href="#tabLedger" role="tab">
                        Ledger
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#tabPaymentRecap" role="tab">
                        Payment Recap
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#tabTransferList" role="tab">
                        Transfer List
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tabLedger" role="tabpanel">
                    <table id="jqGridLedger"></table>
                    <div id="jqGridPagerLedger"></div>
                </div>
                <div class="tab-pane" id="tabPaymentRecap" role="tabpanel">
                    <table id="jqGridPaymentRecap"></table>
                    <div id="jqGridPagerPaymentRecap"></div>
                </div>
                <div class="tab-pane" id="tabTransferList" role="tabpanel">
                    <table id="jqGridTransferList"></table>
                    <div id="jqGridPagerTransferList"></div>
                </div>
            </div>
        </div>
        <div class="card-footer bg-gray-active">
            <div class="row">
                <div class="col-md-8">
                    <div class="row">
                        <div class="ml-3" style="padding:2px!important">
                            <button class="btn btn-sm btn-outline-dark" type="button" style="width:80px" onclick="reloadGridGeneralLedger()"><i class="fa fa-refresh"></i> Refresh</button>
                        </div>
                        @*<div class="ml-3 mt-1">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" value="" id="sw-showhide" onclick="showhideCol('click')">
                                <label class="custom-control-label" for="sw-showhide"><small> Show all column</small></label>
                            </div>
                        </div>*@
                    </div>
                </div>
                <div class="col-md-4" style="padding-top:2px!important">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            <button id="export" type="button" class="btn btn-primary" style="width:80px"><i class="fa fa-file-text-o"></i> Export</button>
                        </div>
                        @Html.DropDownListFor(model => model.ExportList,
                        new SelectList(Model.ExportList, "ExportID", "ExportName"),
                        new { @id = "ExportOption", @class = "form-control border-primary" })

                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

<script>

    $("#monthFilter").datepicker({
        format: "mm/yyyy",
        startView: "year",
        minViewMode: "months",
        autoclose: true,
    }).datepicker("setDate", moment(new Date).format("MM/YYYY"));

    $(document).ready(function () {
        var mstart = $("#monthFilter");
        if (mstart.val() === "") {
            mstart.val(moment(new Date).format("MM/YYYY"))
        }

        $("#statusFilter").val("99");
    })

    $(function () {
        var supplier    = $('#supplierFilter').val();
        var month       = $('#monthFilter').val();
        $grid = $("#jqGridLedger").jqGrid({
            url: '@Url.Action("GeneralLedgerPayableListJson", "FinanceAccounting")',
            datatype: "json",
            mtype: "GET",
            postData: {
                supplier: supplier,
                FormAction: month,
            },
            colModel: [
                //{ label: 'Paid', name: 'StatusName', align: 'center', fixed: true, width: 60, formatter: paidFormatter },
                { label: 'Date', name: 'RecapDate', align: 'center', fixed: true, width: 80, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y" } },
                { label: 'Year', name: 'RecapYear', align: 'center', fixed: true, width: 60 },
                { label: 'Month', name: 'RecapMonth', align: 'center', fixed: true, width: 60 },
                { label: 'Invoice', name: 'InvoiceNumber', align: 'center', fixed: true, width: 80 },
                { label: 'Receive Note', name: 'ReceiveNote', align: 'center', fixed: true, width: 300 },
                { label: 'Tax Invoice', name: 'TaxInvoice', align: 'center', fixed: true, width: 80 },
                { label: 'Classification', name: 'ClassificationId', align: 'center', fixed: true, width: 80 },
                { label: 'Account', name: 'PaymentName', align: 'center', fixed: true, width: 120 },
                { label: 'Category', name: 'CategoryId', align: 'center', fixed: true, width: 80 },
                { label: 'Part Item', name: 'PartName', align: 'left', autoResizing: { minColWidth: 80 } },
                { label: 'Supplier Name', name: 'SupplierName', align: 'left', fixed: true, width: 200 },
                { label: 'Total Price', name: 'TotalPrice', align: 'right', formatter: 'number', hidden: true, width: 80 },
                { label: 'PPN', name: 'PPN', align: 'right', formatter: 'number', fixed: true, width: 80 },
                { label: 'PPH23', name: 'PPH23', align: 'right', formatter: 'number', fixed: true, width: 80 },
                { label: 'Debit Note', name: 'DebitNote', align: 'right', formatter: 'number', fixed: true, width: 80 },
                { label: 'Payment', name: 'Payment', align: 'right', formatter: 'number', fixed: true, width: 80 },
                ],
            gridview: true,
            loadonce: true,
            pager: '#jqGridPagerLedger',
            rowNum: 20,
            rowList: [20, 50, 100],
            viewrecords: true,
            rownumbers: true,
            rownumWidth: 40,
            autoresizeOnLoad: true,
            autowidth: true,
            shrinkToFit: false,
            fromServer: true,
            loadComplete: function () {
                var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;
                for (i = 0; i < l; i++) {
                    var newid = ids[i].replaceAll("/", "");
                    var btnid = 'btn-' + newid;
                    showButton(ids[i], btnid);
                }
            },
        }),
        $('#jqGridLedger').jqGrid('navGrid', '#jqGridPagerLedger', { search: false, edit: false, add: false, del: false });

    });

     $(function () {
        var filterData  = $('#searchFilter').val();
        var supplier    = $('#supplierFilter').val();
        var month       = $('#monthFilter').val();
        $grid = $("#jqGridPaymentRecap").jqGrid({
            url: '@Url.Action("PaymentRecapListJson", "FinanceAccounting")',
            datatype: "json",
            mtype: "GET",
            postData: {
                searchFilter: filterData,
                supplier: supplier,
                month: month,
            },
            colModel: [
                { label: 'Year', name: 'RecapYear', align: 'center', fixed: true, width: 60 },
                { label: 'Month', name: 'RecapMonth', align: 'center', fixed: true, width: 60 },
                { label: 'Supplier Name', name: 'SupplierName', align: 'left', fixed: true, width: 200 },
                { label: 'Account Name', name: 'AccountName', align: 'left', fixed: true, width: 200 },
                { label: 'Bank Name', name: 'BankName', align: 'left', fixed: true, width: 200 },
                { label: 'Account Number', name: 'AccountNumber', align: 'left', fixed: true, width: 120 },
                { label: 'Total Price', name: 'TotalPrice', align: 'right', formatter: 'number', hidden: true, width: 80 },
                { label: 'PPN', name: 'PPN', align: 'right', formatter: 'number', fixed: true, width: 80 },
                { label: 'PPH23', name: 'PPH23', align: 'right', formatter: 'number', fixed: true, width: 80 },
                { label: 'Debit Note', name: 'DebitNote', align: 'right', formatter: 'number', fixed: true, width: 80 },
                { label: 'Payment', name: 'Payment', align: 'right', formatter: 'number', fixed: true, width: 80 },
            ],
            gridview: true,
            loadonce: true,
            pager: '#jqGridPagerPaymentRecap',
            rowNum: 20,
            rowList: [20, 50, 100],
            viewrecords: true,
            rownumbers: true,
            rownumWidth: 40,
            autoresizeOnLoad: true,
            autowidth: true,
            shrinkToFit: false,
            fromServer: true,
            loadComplete: function () {
                var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;
                for (i = 0; i < l; i++) {
                    var newid = ids[i].replaceAll("/", "");
                    var btnid = 'btn-' + newid;
                    showButton(ids[i], btnid);
                }
            },
        }),
        $('#jqGridPaymentRecap').jqGrid('navGrid', '#jqGridPagerPaymentRecap', { search: false, edit: false, add: false, del: false });

     });
     $(function () {
        var filterData  = $('#searchFilter').val();
        var supplier    = $('#supplierFilter').val();
        var month       = $('#monthFilter').val();
        $grid = $("#jqGridTransferList").jqGrid({
            url: '@Url.Action("TransferListListJson", "FinanceAccounting")',
            datatype: "json",
            mtype: "GET",
            postData: {
                searchFilter: filterData,
                supplier: supplier,
                month: month,
            },
            colModel: [
                { label: 'Year', name: 'RecapYear', align: 'center', fixed: true, width: 60 },
                { label: 'Month', name: 'RecapMonth', align: 'center', fixed: true, width: 60 },
                { label: 'Supplier', name: 'SupplierId', align: 'left', fixed: true, width: 80 },
                { label: 'Account Name', name: 'AccountName', align: 'left', autoResizing: { minColWidth: 80 } },
                { label: 'Bank Name', name: 'BankName', align: 'left', fixed: true, width: 200 },
                { label: 'Classification', name: 'BankClassification', align: 'left', fixed: true, width: 100 },
                { label: 'Payment', name: 'Payment', align: 'right', formatter: 'number', fixed: true, width: 80 },
                { label: 'Transfer Fee', name: 'TransferFee', align: 'right', formatter: 'number', fixed: true, width: 80 },
                { label: 'Total Transfer', name: 'TotalTransfer', align: 'right', formatter: 'number', fixed: true, width: 80 },
            ],
            gridview: true,
            loadonce: true,
            pager: '#jqGridPagerTransferList',
            rowNum: 20,
            rowList: [20, 50, 100],
            viewrecords: true,
            rownumbers: true,
            rownumWidth: 40,
            autoresizeOnLoad: true,
            autowidth: true,
            shrinkToFit: false,
            fromServer: true,
            loadComplete: function () {
                var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;
                for (i = 0; i < l; i++) {
                    var newid = ids[i].replaceAll("/", "");
                    var btnid = 'btn-' + newid;
                    showButton(ids[i], btnid);
                }
            },
        }),
        $('#jqGridTransferList').jqGrid('navGrid', '#jqGridPagerTransferList', { search: false, edit: false, add: false, del: false });

    });

    function actionFormatter(cellvalue, options, rowObject) {

        var canemail = "";
        var canupdate = "";
        var candelete = "";
        var btnid = rowObject.PaymentRecapNumber.replaceAll("/", "");

        if (rowObject.StatusName === "Open" || rowObject.StatusName === "Sent") {
            canemail = '@ViewBag.canCreate';
            canupdate = '@ViewBag.canUpdate';
            candelete = '@ViewBag.canDelete';
        } else {
            canemail = 'disabled';
            canupdate = 'disabled';
            candelete = 'disabled';
        }

        var month = getMonthName(rowObject.PaymentRecapMonth);
        month += ", " + rowObject.PaymentRecapYear;

        var btn = "<div class='table-link'>";
        btn += "<a href='#' class='btn btn-sm btn-primary text-white " + canemail + "' onclick=\"sentGeneralLedgerEmail('Open','" + rowObject.PaymentRecapNumber + "','" + month + "','" + rowObject.SupplierName + "')\" datatoogle='tooltip' title='Sent Email @ViewBag.Title [ " + rowObject.PaymentRecapNumber + " ]'>";
        btn += "<span class='fa fa-envelope'></span>";
        btn += "</a> ";
        btn += "<a href='#' class='btn btn-sm btn-success text-white " + canupdate + "' onclick=\"crudGeneralLedger('Update','" + rowObject.PaymentRecapNumber + "')\" datatoogle='tooltip' title='Edit @ViewBag.Title [ " + rowObject.PaymentRecapNumber + " ]'>";
        btn += "<span class='fa fa-pencil'></span> ";
        btn += "</a> ";
        btn += "<a id='btn-" + btnid + "' tabindex='0' class='btn btn-sm btn-info text-white " + candelete + "' role='button' data-toggle='popover' ";
        btn += "data-timeout='2000' data-html='true' title='PRL " + rowObject.PaymentRecapNumber + "' data-content='-'>";
        btn += "<span class='fa fa-sign-out'></span>";
        btn += "</a>";
        btn += "</div>";


        return btn;
    }
    function paidFormatter(cellvalue, options, rowObject) {

        if (cellvalue === false) {
            return "<span class='badge badge-success'><i class='fa fa-check'></i></span>"
        }   else {
            var btn = "<div class='table-link'>";
            btn += "<a href='#' class='btn btn-sm btn-light text-danger border-danger @ViewBag.canSee' onclick=\"previewGeneralLedger('PRL','" + rowObject.PaymentRecapNumber + "')\" datatoogle='tooltip' title='Preview @ViewBag.Title [ " + rowObject.PaymentRecapNumber + " ]'>";
            btn += "<span class='fa fa-file-pdf-o'></span></span><small> Paid</small>";
            btn += "</a> ";
            btn += "</div>";
        }

        return btn;
    }
    function documentFormatter(cellvalue, options, rowObject) {

        var btn = "<div class='table-link'>";
        btn += "<a href='#' class='btn btn-sm btn-light text-danger border-danger @ViewBag.canSee' onclick=\"previewGeneralLedger('Pdf','" + rowObject.PaymentRecapNumber + "')\" datatoogle='tooltip' title='Pdf @ViewBag.Title [ " + rowObject.PaymentRecapNumber + " ]'>";
        btn += "<span class='fa fa-file-pdf-o'></span></span><small> Pdf</small>";
        btn += "</a> ";
        btn += "<a href='#' class='btn btn-sm btn-light text-success border-success @ViewBag.canSee' onclick=\"previewGeneralLedger('Excel','" + rowObject.PaymentRecapNumber + "')\" datatoogle='tooltip' title='Excel @ViewBag.Title  [ " + rowObject.PaymentRecapNumber + " ]'>";
        btn += "<span class='fa fa-file-excel-o'></span><small> Excel</small>";
        btn += "</a> ";
        btn += "</div>";

        return btn;
    }
    function showButton(PaymentRecapNumber,id) {

        var dataContent = "<div>";
        dataContent += "<ul class='nav'><li>";
        dataContent += "<a href='#' class='btn btn-sm btn-info @ViewBag.canUpdate' onclick=\"crudGeneralLedger('Closed','" + PaymentRecapNumber + "')\" ><i class='fa fa-sign-out'></i> Closing</a>";
        dataContent += "<a href='#' class='btn btn-sm btn-warning ml-2 @ViewBag.canDelete' onclick=\"crudGeneralLedger('Canceled','" + PaymentRecapNumber + "')\" ><i class='fa fa-ban'></i> Canceled</a>";
        dataContent += "<a href='#' class='btn btn-sm btn-danger ml-2 @ViewBag.canDelete' onclick=\"crudGeneralLedger('Delete','" + PaymentRecapNumber + "')\" ><i class='fa fa-trash'></i> Delete</a>";
        dataContent += "</li></ul></div>";

        $('#' + id).attr('data-content', dataContent).popover();

    }

    function previewGeneralLedger(action, PaymentRecapnumber) {

        var url = "/Reports/GeneralLedgers?PaymentRecapNumber=" + PaymentRecapnumber + "&FileFormat=" + action;
        //console.log(url);
        window.open(url, "_blank");
    }

    function monthFormatter(cellvalue, options, rowObject) {
        var monthname = getMonthName(cellvalue)
        return monthname;
    }


    function statusFormatter(cellvalue, options, rowObject) {
        switch (cellvalue) {
            case 0:
                return "<span class='badge badge-primary'>" + rowObject.StatusName + "</span>"
                break;
            case 1:
                return "<span class='badge badge-info text-white'>" + rowObject.StatusName + "</span>"
                break;
            case 2:
                return "<span class='badge badge-info text-white'>" + rowObject.StatusName + "</span>"
                break;
            case 3:
                return "<span class='badge badge-success text-white'>" + rowObject.StatusName + "</span>"
                break;
            case 4:
                return "<span class='badge badge-warning'>" + rowObject.StatusName + "</span>"
                break;
            case 5:
                return "<span class='badge badge-danger'>" + rowObject.StatusName + "</span>"
                break;
        }
    }

    function approvalFormatter(cellvalue, options, rowObject) {
        switch (cellvalue) {
            case 1:
                return "<span class='badge badge-warning'>" + rowObject.ApprovalName + "</span>"
                break;
            case 2:
                return "<span class='badge badge-info text-white'>" + rowObject.ApprovalName + "</span>"
                break;
            case 3:
                return "<span class='badge badge-primary'>" + rowObject.ApprovalName + "</span>"
                break;
            case 4:
                return "<span class='badge badge-success'>" + rowObject.ApprovalName + "</span>"
                break;
        }
    }

    function reloadGridGeneralLedger() {
        reloadGridLedger();
        reloadGridPaymentRecap();
        reloadGridTransferList();
    }

    function reloadGridLedger() {
        var filterData = $('#searchFilter').val();
        var startdate = $('#startdateFilter').val();
        var enddate = $('#enddateFilter').val();
        var month = $('#monthFilter').val();
        var status = $('#statusFilter').val();
        $("#jqGridLedger").jqGrid('setGridParam', {
            datatype: 'json',
            mtype: 'GET',
            postData: {
                searchFilter: filterData,
                startdate: startdate,
                enddate: enddate,
                month: month,
                status: status,
            }
        }).trigger('reloadGrid');
    };
    function reloadGridPaymentRecap() {
        var filterData = $('#searchFilter').val();
        var supplier = $('#supplierFilter').val();
        var month = $('#monthFilter').val();
        $("#jqGridPaymentRecap").jqGrid('setGridParam', {
            datatype: 'json',
            mtype: 'GET',
            postData: {
                searchFilter: filterData,
                supplier: supplier,
                month: month,
            }
        }).trigger('reloadGrid');
    };
    function reloadGridTransferList() {
        var filterData = $('#searchFilter').val();
        var supplier = $('#supplierFilter').val();
        var month = $('#monthFilter').val();
        $("#jqGridTransferList").jqGrid('setGridParam', {
            datatype: 'json',
            mtype: 'GET',
            postData: {
                searchFilter: filterData,
                supplier: supplier,
                month: month,
            }
        }).trigger('reloadGrid');
    };
    $("#searchFilter").on('keypress', function (e) {
        if (e.which == 13) {
            $("#btnFilter").button().click();
        }
    });

    loadFilterSupplier();

    function loadFilterSupplier() {

        supplierid = $("#supplierFilter").val();

        $.ajax({
            url: '@Url.Action("SupplierListJson", "Suppliers")',
            type: "GET",
            dataType: "JSON",
            data: { },
            success: function (response) {

                var id = "#supplierFilter";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Supplier")
                );
                $.each(response, function (i, sup) {
                    $(id).append(
                        $('<option></option>').val(sup.SupplierId).html(sup.SupplierName)
                    );
                });
            }
        })
    }

    $(document).ready(function () {
        gridGeneralLedgerResize("jqGridLedger");
        gridGeneralLedgerResize("jqGridPaymentRecap");
        gridGeneralLedgerResize("jqGridTransferList");
    })
    $(window).on("resize", function () {
        gridGeneralLedgerResize("jqGridLedger");
        gridGeneralLedgerResize("jqGridPaymentRecap");
        gridGeneralLedgerResize("jqGridTransferList");
    });

    $("#export").on("click", function () {

        var tabs = $('.nav-tabs .active').text();

        switch (tabs.trim()) {
            case "Ledger":
                exportGrid('#jqGridLedger', 'A3', tabs, 'landscape');
                break;
            case "Payment Recap":
                exportGrid('#jqGridPaymentRecap', 'A4', tabs, 'landscape');
                break;
            case "Transfer List":
                exportGrid('#jqGridTransferList', 'A4', tabs, 'portrait');
                break;

        }

    })

</script>

<!-- toast-alert -->
@Html.Partial("_VSSPLayout/Messages/toast_alert")
