<style>
    .custom-checkbox {
        z-index: 99 !important
    }
</style>

<script type="text/javascript" src="~/_VSSPCore/lib/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/_VSSPCore/lib/daterangepicker/daterangepicker.css" />

<div class="modal animated fadeIn" id="crudInvoiceRecapModal" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="false">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-primary" role="document" style="width:90% !important">
        <div class="modal-content">
            <form id="crudInvoiceRecapForm" class="needs-validation" novalidate>
                <div class="modal-header">
                    <h6 class="modal-title"><span class="fa fa-plus-square"></span> @ViewBag.Title</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-3 mr-0 pr-0">
                            <div class="form-group form-group-sm row mb-1">
                                <label for="crud-InvoiceRecapNumber" class="col-sm-3 col-form-label col-form-label-sm">Number</label>
                                <div class="col-sm-9">
                                    <input type="text" class="form-control form-control-sm bg-white" placeholder="Auto Generate" id="crud-InvoiceRecapNumber">
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-InvoiceRecapDate" class="col-sm-3 col-form-label col-form-label-sm">Date</label>
                                <div class="col-sm-9">
                                    <input type="date" class="form-control form-control-sm bg-white datepicker" id="crud-InvoiceRecapDate" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 mr-0 pr-0">
                            <div class="form-group form-group-sm row mb-1">
                                <label for="crud-InvoiceRecapSupplierId" class="col-sm-4 col-form-label col-form-label-sm">Supplier</label>
                                <div class="col-sm-8">
                                    @*<select class="custom-select custom-select-sm bg-white" id="crud-InvoiceRecapSupplierId" name="SupplierId" required></select>*@
                                    <select class="form-control form-control-sm selectpicker bg-white" data-live-search="true" data-size="8" id="crud-InvoiceRecapSupplierId" name="SupplierId" required></select>
                                </div>
                            </div>
                            @*<div class="form-group form-group-sm row">
                                    <label for="crud-InvoiceRecapMonth" class="col-sm-4 col-form-label col-form-label-sm">Month</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control form-control-sm bg-white" id="crud-InvoiceRecapMonth" name="Month" required>
                                    </div>
                                </div>*@
                            <div class="form-group form-group-sm row">
                                <label for="crud-InvoiceRecapMonth" class="col-sm-4 col-form-label col-form-label-sm">Receive Date</label>
                                <div class="col-sm-8">
                                    <input id="crud-InvoiceRecapMonth" type="text" name="daterange" class="form-control form-control-sm bg-white" required />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 mr-0 pr-0">
                            <div class="form-group form-group-sm row mb-1">
                                <label for="crud-InvoiceRecapInvoiceNumber" class="col-sm-4 col-form-label col-form-label-sm">Invoice #</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-InvoiceRecapInvoiceNumber" name="InvoiceNumber">
                                </div>
                            </div>
                            <div class="form-group form-group-sm row">
                                <label for="crud-InvoiceRecapTaxInvoice" class="col-sm-4 col-form-label col-form-label-sm">Tax #</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control form-control-sm bg-white" id="crud-InvoiceRecapTaxInvoice" name="TaxInvoice">
                                </div>
                            </div>

                        </div>
                        <div class="col-md-3">
                            <button id="btn-addInvoiceRecapDetail" type="button" class="btn btn-sm btn-outline-dark" style="height: 60px; width: 73px" onclick="crudInvoiceRecapDetail('Create','')"><span class="fa fa-refresh"></span> Process</button>
                            <button id="btn-crudInvoiceRecap" type="submit" class="btn btn-sm btn-outline-primary btn-spin ml-3" style="height: 60px; width: 73px" dismiss="modal"><span class="fa fa-dot-circle-o"></span> Submit</button>
                            <button type="button" class="btn btn-sm btn-outline-danger ml-3" style="height:60px; width:73px" data-dismiss="modal"><span class="fa fa-times"></span> Cancel</button>
                        </div>
                        <div class="col-md-12">
                            <table id="jqGridCrudInvoiceRecapDetail"></table>
                            <div id="jqGridPagerCrudInvoiceRecapDetail"></div>
                        </div>
                    </div>

                    <div id="crudInvoiceRecapError"></div>
                    <input type="hidden" id="InvoiceRecapAction" />
                </div>
                <div class="modal-footer">
                    <div class="ml-3 mr-auto mt-0 mb-auto">
                        <div class="form-group form-group-sm">
                            <label for="crud-InvoiceRecapRemarks" class="col-form-label col-form-label-sm">Remarks</label>
                            <div style="width:300px">
                                <textarea type="text" rows="2" class="form-control form-control-sm bg-white" id="crud-InvoiceRecapRemarks" name="Remarks"></textarea>
                            </div>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" value="" id="sw-showhidedetail" onclick="showhidedetailCol('click')">
                            <label class="custom-control-label" for="sw-showhidedetail"><small> Show all column</small></label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <table id="crud-summaryInvoiceRecap" class="table table-sm table-borderless">
                            <tbody class="text-right">
                                <tr>
                                    <td>Grand Total</td>
                                    <td>0</td>
                                </tr>
                                <tr>
                                    <td>PPN (10%)</td>
                                    <td>0</td>
                                </tr>
                                <tr>
                                    <td>PPH 23 (2%)</td>
                                    <td>0</td>
                                </tr>
                                <tr>
                                    <td>Debit Note</td>
                                    <td>0</td>
                                </tr>
                                <tr>
                                    <td>Payment</td>
                                    <td>0</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h4 class="mx-auto" style="margin:0;padding:0" hidden><span id="approvalInfo" class="badge badge-warning shadow-sm">APPROVAL</span></h4>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal animated fadeIn" id="crudReprocessModal" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="false">
    <div class="modal-dialog modal-dialog-centered modal-danger" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title"><span class="fa fa-refresh"></span> Reprocess Recap</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-danger">
                <div class="row">
                    <div class="col-md-3 text-center">
                        <span class="fa fa-warning fa-4x"></span>
                    </div>
                    <div class="col-md-9">
                        <h5>Are you sure want to reprocess current recap?</h5>
                        <h6>This action will replace your existing recap.</h6>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-primary" data-dismiss="modal" onclick="crudInvoiceRecapDetail('Reprocess','')"><span class="fa fa-dot-circle-o"></span> Re-Process</button>
                <button type="button" class="btn btn-sm btn-danger" data-dismiss="modal"><span class="fa fa-times"></span> Cancel</button>
            </div>

        </div>
    </div>
</div>

<div id="contextMenu" class="dropdown clearfix">
    <div class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu" style="display:block;position:static;margin-bottom:5px;">
        <a class="dropdown-item pt-1 pb-1 border-bottom-0 small" href="#" onclick="selectContextMenu(1,this)"><i class="fa fa-check text-dark"></i> Select</a>
        <a class="dropdown-item pt-1 pb-1 small" href="#" onclick="selectContextMenu(2,this)"><i class="fa fa-check-square-o text-dark"></i> Select All</a>
        <a class="dropdown-item pt-1 pb-1 border-bottom-0 small" href="#" onclick="selectContextMenu(3,this)"><i class="fa fa-times text-dark"></i> Unselect</a>
        <a class="dropdown-item pt-1 pb-1 small" href="#" onclick="selectContextMenu(4,this)"><i class="fa fa-times-rectangle-o text-dark"></i> Unselect All</a>
        @*<a class="dropdown-item pt-1 pb-1 border-bottom-0 small text-danger" href="#" onclick="selectContextMenu(5,this)"><i class="fa fa-trash-o text-danger"></i> Delete selected</a>*@
    </div>
</div>

@*<div id="contextMenu" class="dropdown clearfix">
        <div class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu" style="display:block;position:static;margin-bottom:5px;">
            <a class="dropdown-item pt-1 pb-1 border-bottom-0 small" href="#" onclick="selectContextMenu(1,this)"><i class="fa fa-check text-dark"></i> Select</a>
            <a class="dropdown-item pt-1 pb-1 small" href="#" onclick="selectContextMenu(2,this)"><i class="fa fa-check-square-o text-dark"></i> Select All</a>
            <a class="dropdown-item pt-1 pb-1 border-bottom-0 small" href="#" onclick="selectContextMenu(3,this)"><i class="fa fa-times text-dark"></i> Unselect</a>
            <a class="dropdown-item pt-1 pb-1 small" href="#" onclick="selectContextMenu(4,this)"><i class="fa fa-times-rectangle-o text-dark"></i> Unselect All</a>
            <a class="dropdown-item pt-1 pb-1 border-bottom-0 small" href="#" onclick="selectContextMenu(5,this)"><i class="fa fa-sign-out text-dark"></i> Cancel</a>
        </div>

    </div>
    <script>
        var dataSelected = [];

        $(function () {

            /* call selectable */
            $("#jqGridCrudInvoiceRecapDetail").selectable({
                filter: 'tbody tr',
                selecting: function (event, ui) {
                    dataSelected = []
                },
                selected: function (event, ui) {
                    //console.log(ui);
                    //console.log("SELECTED " + ui.selected["id"]);
                    dataSelected.push(ui.selected.id)
                }
            });


            /* call context menu */
            var $contextMenu = $("#contextMenu");

            $("body").on("contextmenu", "#jqGridCrudInvoiceRecapDetail", function (e) {
                $contextMenu.css({
                    display: "block",
                    left: e.pageX,
                    top: e.pageY
                });
                debugger;
                return false;
            });

            $('html').click(function () {
                $contextMenu.hide();
            });

            $("#contextMenu li a").click(function (e) {
                var f = $(this);
                debugger;
            });

        });

        function selectContextMenu(id, obj) {

            var i, count, $grid = $("#jqGridCrudInvoiceRecapDetail");
            var selRows = $grid.jqGrid('getGridParam', 'selarrrow');
            var dataall = $grid.getDataIDs();

            switch (id) {
                case 1:
                    var datasel = dataSelected.filter((item) => !selRows.includes(item));
                    for (i = 0, count = datasel.length; i < count; i += 1) {
                        $grid.jqGrid('setSelection', datasel[i], true);
                    }
                    break;
                case 2:
                    var datasel = dataall.filter((item) => !selRows.includes(item));
                    for (i = 0, count = datasel.length; i < count; i += 1) {
                        $grid.jqGrid('setSelection', datasel[i], false);
                    }
                    break;
                case 3:
                    var datasel = dataSelected.filter((item) => selRows.includes(item));
                    for (i = 0, count = datasel.length; i < count; i += 1) {
                        $grid.jqGrid('setSelection', datasel[i], false);
                    }
                    break;
                case 4:
                    var datasel = dataall.filter((item) => selRows.includes(item));
                    for (i = 0, count = datasel.length; i < count; i += 1) {
                        $grid.jqGrid('setSelection', datasel[i], false);
                    }
                    break;
            }
        }
    </script>
    <style>
        .ui-selected {
            background-color: #b6ff00
        }

            .ui-selected:hover {
                background-color: #00ff21
            }

        #contextMenu {
            position: absolute;
            display: none;
            z-index: 2028;
        }
    </style>*@
<script>

    //$("#crud-InvoiceRecapMonth").datepicker({
    //    format: "mm/yyyy",
    //    startView: "year",
    //    minViewMode: "months",
    //    autoclose: true,
    //});

    $(function () {
        $('#crud-InvoiceRecapMonth').daterangepicker({
            opens: 'center'
        }, function (start, end, label) {
            StartDate = start.format('YYYY-MM-DD');
            EndDate = end.format('YYYY-MM-DD');
        });
    });

    $('#crudInvoiceRecapDetailModal').on('keydown', 'input, select', function (e) {
        if (e.which === 13) {
            var self = $(this), form = self.parents('form:eq(0)'), focusable, next;
            focusable = form.find('input').filter(':visible');
            next = focusable.eq(focusable.index(this) + 1);
            if (next.length) {
                next.focus();
            }
            if (this.id === "crud-InvoiceRecapDetailOrderQty") {
                $("#btn-crudInvoiceRecapDetail").focus();
            };
            return false;
        }
    });

    function crudInvoiceRecap(action, id) {

        document.getElementById("crudInvoiceRecapForm").reset();
        $('#crudInvoiceRecapForm').removeClass('was-validated');
        $('#crudInvoiceRecapError').html("");
        $('#btn-addInvoiceRecapDetail').removeAttr('disabled');
        $("#btn-crudInvoiceRecap").html("<span class='fa fa-dot-circle-o'></span> Submit").removeAttr("disabled");
        $("#crudInvoiceRecapForm input,select").each(function () {
            $(this).removeAttr("readonly").removeAttr("disabled").removeClass('error').next('label.error').remove().val("");
        });
        showhidedetailCol();
        summaryInvoiceRecap(0, 0, 0, 0, 0);
        $("#approvalInfo").text("");
        $("#InvoiceRecapAction").val(action);
        var StartDate = new Date();
        var EndDate = new Date();
        var DateRange = moment(StartDate).format('MM/DD/Y') + ' - ' + moment(EndDate).format('MM/DD/Y');

        $('#crud-InvoiceRecapMonth').val(DateRange);
        //$('#crud-InvoiceRecapMonth').daterangepicker({
        //    autoUpdateInput: false,
        //    locale: {
        //        cancelLabel: 'Clear'
        //    }
        //});

        var newdate = '@ViewBag.DateTime';
        newdate = moment(new Date(newdate)).format("YYYY-MM-DD");
                var approval = '@ViewBag.ApprovalLevel';

        if (approval != 1) {
            var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b> Incorrect Approval Level!</b><br/>Create/Edit/Delete @ViewBag.Title need approval level as Creator. More Info : please contact your system administrator.</small></div>'
            $('#crudInvoiceRecapError').html(errMsg);
            $("#crudInvoiceRecapForm input,select").each(function () {
                $(this).attr("readonly", true).attr("disabled", true);
            });

            $("#btn-addInvoiceRecapDetail").attr("disabled", true);
            $("#btn-crudInvoiceRecap").attr("disabled", true);

            $('#crudInvoiceRecapModal').modal('show');
            return false;
        }

        if (id != "*") {
            var Grid = $('#jqGridMain'),
                selectedRowId = id,
                InvoiceRecapDate            = Grid.jqGrid('getCell', selectedRowId, 'RecapDate'),
                InvoiceRecapYears           = Grid.jqGrid('getCell', selectedRowId, 'RecapYear'),
                InvoiceRecapMonth           = Grid.jqGrid('getCell', selectedRowId, 'RecapMonth'),
                InvoiceReceiveStartDate     = Grid.jqGrid('getCell', selectedRowId, 'ReceiveStartDate'),
                InvoiceReceiveEndDate       = Grid.jqGrid('getCell', selectedRowId, 'ReceiveEndDate'),
                InvoiceRecapSupplierId      = Grid.jqGrid('getCell', selectedRowId, 'SupplierId'),
                InvoiceRecapInvoiceNumber   = Grid.jqGrid('getCell', selectedRowId, 'InvoiceNumber'),
                InvoiceRecapTaxInvoice      = Grid.jqGrid('getCell', selectedRowId, 'TaxInvoice'),
                InvoiceRecapApproval        = Grid.jqGrid('getCell', selectedRowId, 'Approval'),
                InvoiceRecapRemarks         = Grid.jqGrid('getCell', selectedRowId, 'Remarks'),
                UserId                      = Grid.jqGrid('getCell', selectedRowId, 'UserId');


            InvoiceRecapDate = moment(new Date(InvoiceRecapDate)).format("YYYY-MM-DD");
            InvoiceRecapMonth = moment().month(InvoiceRecapMonth).format("MM");
            var ReceiveDate = moment(new Date(InvoiceReceiveStartDate)).format("MM/DD/Y") + ' - ' + moment(new Date(InvoiceReceiveEndDate)).format("MM/DD/Y")
            var monthyear = InvoiceRecapMonth + '/' + InvoiceRecapYears;

            $("#crud-InvoiceRecapNumber").val(id);
            $("#crud-InvoiceRecapDate").val(InvoiceRecapDate);
            $("#crud-InvoiceRecapSupplierId").val(InvoiceRecapSupplierId);
            $("#crud-InvoiceRecapMonth").val(ReceiveDate);
            $("#crud-InvoiceRecapInvoiceNumber").val(InvoiceRecapInvoiceNumber);
            $("#crud-InvoiceRecapTaxInvoice").val(InvoiceRecapTaxInvoice);
            $("#crud-InvoiceRecapRemarks").val(InvoiceRecapRemarks);
            $("#approvalInfo").text(InvoiceRecapApproval);

            reloadGridInvoiceRecapDetail(action);

            if (UserId != "@ViewBag.UserId") {
                var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b>Not valid user!</b><br/>You cant change @ViewBag.Title already created by ' + UserId + '.</small></div>';
                $('#crudInvoiceRecapError').html(errMsg);
                $('#btn-addInvoiceRecapDetail').attr("disabled", true);
                $('#btn-crudInvoiceRecap').attr("disabled", true);
            } else {
                $('#btn-addInvoiceRecapDetail').removeAttr("disabled");
                $('#btn-crudInvoiceRecap').removeAttr("disabled");
            }

        }

        $(".selectpicker").selectpicker("refresh");

        switch (action) {
            case "Create":

                $('#jqGridCrudInvoiceRecapDetail').jqGrid('clearGridData');

                $("#crud-InvoiceRecapNumber").attr("readonly", true);
                $("#crud-InvoiceRecapDate").attr("readonly", true);
                $("#crud-InvoiceRecapDate").val(newdate);
                $("#crudInvoiceRecapModal .modal-dialog").removeClass("modal-success").removeClass("modal-danger").removeClass("modal-warning").removeClass("modal-info").addClass("modal-primary")
                $("#crudInvoiceRecapModal .modal-title").html('<span class="fa fa-plus-square"></span> '+ action + ' @ViewBag.Title');
                $('#crudInvoiceRecapModal').modal('show');
                $("#crud-InvoiceRecapSupplierId").focus();
                break;
            case "Update":
                $("#crud-InvoiceRecapNumber").attr("readonly", true);
                $("#crud-InvoiceRecapDate").attr("readonly", true);
                $("#crud-InvoiceRecapSupplierId").attr("disabled", true);
                //$("#crud-InvoiceRecapMonth").attr("disabled", true);
                $("#crudInvoiceRecapModal .modal-dialog").removeClass("modal-primary").removeClass("modal-danger").removeClass("modal-warning").removeClass("modal-info").addClass("modal-success")
                $("#crudInvoiceRecapModal .modal-title").html('<span class="fa fa-pencil-square"></span> '+ action + ' @ViewBag.Title');
                $('#crudInvoiceRecapModal').modal('show');
                $("#crud-InvoiceRecapRemarks").focus();
                break;
            case "Delete":
                $("#crudInvoiceRecapForm :input").each(function () {
                    $(this).not("button").attr("disabled",true);
                });
                $('#btn-addInvoiceRecapDetail').attr('disabled', true);
                $("#btn-crudInvoiceRecap").html("<span class='fa fa-trash'></span> Delete");
                $("#crudInvoiceRecapModal .modal-dialog").removeClass("modal-primary").removeClass("modal-success").removeClass("modal-warning").removeClass("modal-info").addClass("modal-danger")
                $("#crudInvoiceRecapModal .modal-title").html('<span class="fa fa-trash"></span> '+ action + ' @ViewBag.Title');
                $('#crudInvoiceRecapModal').modal('show');
                break
            case "Canceled":
                $("#crudInvoiceRecapForm :input").each(function () {
                    $(this).not("button").attr("disabled",true);
                });
                $('#btn-addInvoiceRecapDetail').attr('disabled', true);
                $("#btn-crudInvoiceRecap").html("<span class='fa fa-ban'></span> Cancel");
                $("#crudInvoiceRecapModal .modal-dialog").removeClass("modal-primary").removeClass("modal-success").removeClass("modal-danger").removeClass("modal-info").addClass("modal-warning")
                $("#crudInvoiceRecapModal .modal-title").html('<span class="fa fa-ban"></span> '+ action + ' @ViewBag.Title');
                $('#crudInvoiceRecapModal').modal('show');
                break
            case "Closed":
                $("#crudInvoiceRecapForm :input").each(function () {
                    $(this).not("button").attr("disabled",true);
                });
                $('#btn-addInvoiceRecapDetail').attr('disabled', true);
                $("#btn-crudInvoiceRecap").html("<span class='fa fa-sign-out'></span> Closing");
                $("#crudInvoiceRecapModal .modal-dialog").removeClass("modal-primary").removeClass("modal-success").removeClass("modal-danger").removeClass("modal-warning").addClass("modal-info")
                $("#crudInvoiceRecapModal .modal-title").html('<span class="fa fa-sign-out"></span> '+ action + ' @ViewBag.Title');
                $('#crudInvoiceRecapModal').modal('show');
                break
        }

    }

    $('#crud-InvoiceRecapSupplierId').change(function () {
        $('#crudInvoiceRecapError').html("");
    });

    $('#crud-InvoiceRecapMonth').change(function () {
        $('#crudInvoiceRecapError').html("");
    });

    $(function () {
        var focusedElement;
        $(document).on('focus', 'input', function () {
            if (focusedElement == this) return; //already focused, return so user can now place cursor at specific point in input.
            focusedElement = this;
            setTimeout(function () { focusedElement.select(); }, 100); //select all text in any field on focus for easy re-entry. Delay sightly to allow focus to "stick" before selecting.
        });
    });

    $(function () {
        $gridInvoiceRecapDetail = $("#jqGridCrudInvoiceRecapDetail").jqGrid({
            url: "@Url.Action("GetInvoiceRecapDetail", "FinanceAccounting")",
            mtype: "GET",
            datatype: "json",
            postData: { },
            colModel: [
                { label: 'SELECT', name: 'Selected', align: 'center', fixed: true, width: 50, sortable: false, formatter: selectFormatter, edittype: "checkbox", editoptions: { value: "Enabled:Disabled" } },
                { label: 'RECAP ID', name: 'RecapId', align: 'center', hidden: true, width: 150, sortable: false },
                { label: 'DELIVERY NOTE', name: 'OrderNumber', align: 'center', fixed: true, width: 160, sortable: false },
                { label: 'RECEIVE NUMBER', name: 'ReceiveNumber', align: 'center', fixed: true, width: 110, sortable: false },
                { label: 'DATE', name: 'ReceiveDate', align: 'center', fixed: true, width: 60, formatter: "date", formatoptions: { srcformat: "ISO8601Long", newformat: "d M Y" } },
                { label: 'UNIQUE', name: 'UniqueNumber',align: 'center', fixed: true, width: 45, sortable: false },
                { label: 'PART NUMBER', name: 'PartNumber', align: 'center', fixed: true, width: 90, sortable: false },
                { label: 'PART NAME', name: 'PartName', align: 'left', fixed: true, width: 128, sortable: false },
                { label: 'MODEL', name: 'PartModel', align: 'center', fixed: true, width: 50, sortable: false },
                { label: 'CLASSIFICATION', name: 'ClassificationId', align: 'left', fixed: true, width: 90, sortable: false },
                { label: 'ACCOUNT', name: 'PaymentId', align: 'center', fixed: true, width: 70, sortable: false },
                { label: 'CATEGORY', name: 'CategoryId', align: 'center', fixed: true, width: 70, sortable: false },
                { label: 'ORDER QTY', name: 'RecapQty', align: 'right', fixed: true, width: 60, formatter: 'number', sortable: false },
                { label: 'UNIT', name: 'PriceQty', align: 'right', fixed: true, width: 70, formatter: 'number', sortable: false },
                { label: 'TOTAL', name: 'TotalPrice', align: 'right', fixed: true, width: 80, formatter: 'number', sortable: false },
                { label: 'PPN', name: 'PPN', align: 'right', fixed: true, width: 80, formatter: 'number', sortable: false },
                { label: 'PPH23', name: 'PPH23', align: 'right', fixed: true, width: 80, formatter: 'number', sortable: false },
                { label: 'DEBIT NOTE', name: 'DebitNote', align: 'right', fixed: true, width: 80, formatter: 'number', sortable: false },
                { label: 'PAYMENT', name: 'Payment', align: 'right', fixed: true, width: 80, formatter: 'number', sortable: false },
            ],
            gridview: true,
            //pager: '#jqGridPagerCrudInvoiceRecapDetail',
            loadonce: true,
            height: 160,
            pgbuttons: false,
            pgtext: null,
            viewrecords: true,
            rowNum: 9999,
            rownumbers: true,
            rownumWidth: 30,
            autoresizeOnLoad: true,
            autowidth: true,
            shrinkToFit: false,
            fromServer: true,
            loadComplete: function () {

                var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;

                var totalprice = 0;
                var ppn = 0;
                var pph23 = 0;
                var debitnote = 0;
                var payment = 0;

                for (i = 0; i < l; i++) {

                    totalprice += parseFloat($this.jqGrid('getCell', ids[i], 'TotalPrice'));
                    ppn += parseFloat($this.jqGrid('getCell', ids[i], 'PPN'));
                    pph23 += parseFloat($this.jqGrid('getCell', ids[i], 'PPH23'));
                    debitnote += parseFloat($this.jqGrid('getCell', ids[i], 'DebitNote'));
                    payment += parseFloat($this.jqGrid('getCell', ids[i], 'Payment'));

                }

                summaryInvoiceRecap(totalprice, ppn, pph23, debitnote, payment);

            },

        });

        $('#jqGridCrudInvoiceRecapDetail').jqGrid('navGrid', '#jqGridPagerCrudInvoiceRecapDetail',
            { search: false, edit: false, add: false, del: false},
        );

        $('#jqGridCrudInvoiceRecapDetail').jqGrid('setGroupHeaders', {
            useColSpanStyle: true,
            groupHeaders: [
                { startColumnName: 'PriceQty', numberOfColumns: 6, titleText: 'PRICE' },
            ]
        });
    });

    function reloadGridInvoiceRecapDetail(formaction) {

        summaryInvoiceRecap(0, 0, 0, 0, 0);

        var supplierid  = $("#crud-InvoiceRecapSupplierId").val();
        var recapnumber = $("#crud-InvoiceRecapNumber").val();
        var month       = $("#crud-InvoiceRecapMonth").val()

        if (recapnumber === "") {
            recapnumber = "@ViewBag.UserId";
        }

        $("#jqGridCrudInvoiceRecapDetail").jqGrid('setGridParam', {
            datatype: 'json',
            mtype: 'GET',
            postData: {
                recapnumber: recapnumber,
                supplierid: supplierid,
                month: month,
                formAction: formaction,
            }
        }).trigger('reloadGrid');
    };

    function selectFormatter(cellvalue, options, rowObject) {

        var id = options.rowId;
        var checked = "";
        var checkbox = "";
        var formaction  = $("#InvoiceRecapAction").val();
        var disabled = "";

        if (cellvalue === true) {
            checked = "checked";
        } else {
            checked = "";
        }

        if (formaction === "Create" || formaction === "Update") {
            disabled = "";
        } else {
            disabled = "disabled";
        }

        return "<input type='checkbox' class='mt-1' id='select-" + id + "' " + checked + " " + disabled + " value='" + cellvalue + "' onchange=\"selectedRecap('" + id + "')\"/>";

    }

    function selectedRecap(id) {

        var selected = $("#select-" + id).prop("checked");
        var recapnumber = $("#crud-InvoiceRecapNumber").val();
        var supplierid = $("#crud-InvoiceRecapSupplierId").val();

        var formaction = $("#InvoiceRecapAction").val();

        if (formaction === "Create") {
            recapnumber = "@ViewBag.UserId";
        }

        var Grid = $('#jqGridCrudInvoiceRecapDetail'),
            selectedRowId = id,
            receivenumber = Grid.jqGrid('getCell', selectedRowId, 'ReceiveNumber'),
            partnumber = Grid.jqGrid('getCell', selectedRowId, 'PartNumber');

        $.ajax({
            url: '@Url.Action("crudSelectedRecap", "FinanceAccounting")',
            type: "GET",
            dataType: "JSON",
            data: {
                RecapNumber: recapnumber,
                ReceiveNumber: receivenumber,
                SupplierId: supplierid,
                PartNumber: partnumber,
                Selected: selected,
            },
            success: function (response) {
                var status = "";
                if (selected === true) {
                    status = "Selected";
                } else {
                    status = "Unselected";
                }
                showToast("Success", response + " has been " + status + " succesfully");
            },
            error: function (xhr, desc, err) {
                var responsetext = "";
                try {
                    responsetext = eval(xhr.responseText);
                } catch {
                    responsetext = xhr.responseText;
                }
                var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b> Error ' + xhr.status + '!</b><br/>' + responsetext + '</small></div>'
                $('#crudInvoiceRecapError').html(errMsg);
            }

        })
    }

    function actionInvoiceRecapDetailFormatter(cellvalue, options, rowObject) {
        var rowid = rowObject.UniqueNumber;
        var formaction = $("#InvoiceRecapAction").val();
        var canupdate = '@ViewBag.canUpdate';
        var candelete = '@ViewBag.canDelete';

        if (formaction === "Closed" || formaction === "Canceled" || formaction === "Delete") {
            canupdate = "disabled";
            candelete = "disabled";
        }

        var btn = "<div class='table-link'>";
        btn += "<a href='#' id='btn-update" + rowid + "' class='text-primary " + canupdate + "' onclick=\"crudInvoiceRecapDetail('Update','" + rowid + "')\" datatoogle='tooltip' title='Edit @ViewBag.Title Item [ " + rowObject.UniqueNumber + " ]'>";
        btn += "<span class='fa fa-pencil-square'></span>";
        btn += "</a> ";
        btn += "<a href='#' id='btn-delete" + rowid + "' class='text-danger " + candelete + "' onclick=\"crudInvoiceRecapDetail('Delete','" + rowid + "')\" datatoogle='tooltip' title='Delete @ViewBag.Title Item [ " + rowObject.UniqueNumber + " ]'>";
        btn += "<span class='fa fa-trash'></span>";
        btn += "</a></div>";
        return btn;
    }


    function statusCrudFormatter(cellvalue, options, rowObject) {
        var action = $("#InvoiceRecapAction").val();
        switch (cellvalue) {
            case "Create":
                return "<span class='badge badge-primary'>New</span>"
                break;
            case "Update":
                return "<span class='badge badge-success'>Updated</span>"
                break;
            case "Delete":
                return "<span class='badge badge-danger'>Removed</span>"
                break;
            default:
                return "";
                break;
        }
    }

    function summaryInvoiceRecap(totalprice ,ppn, pph23, debitnote, payment) {
        var summary = '<tbody class="text-right">';
        summary += '<tr><td>Grand Total</td><td>' + totalprice.toLocaleString() +'</td></tr>';
        summary += '<tr><td>PPN (10%)</td><td>' + ppn.toLocaleString() +'</td></tr>';
        summary += '<tr><td>PPN 23 (2%)</td><td>' + pph23.toLocaleString() + '</td></tr>';
        summary += '<tr><td>Debit Note</td><td>' + debitnote.toLocaleString() +'</td></tr>';
        summary += '<tr><td>Payment</td><td>' + payment.toLocaleString() +'</td></tr>'
        summary += '</tbody>';

        $('#crud-summaryInvoiceRecap').html(summary);

    }

    function crudInvoiceRecapDetail(action, id) {

        $('#crudInvoiceRecapError').html("");
        $("#btn-crudInvoiceRecapDetail").html("<span class='fa fa-dot-circle-o'></span> Submit");
        $("#crudInvoiceRecapDetailForm :input").each(function () {
            $(this).removeAttr("readonly").removeAttr("disabled").removeClass('error').next('label.error').remove().val("");
        });

        var supplierid = $("#crud-InvoiceRecapSupplierId").val();
        var Month = $("#crud-InvoiceRecapMonth").val();

        if (supplierid === "" || Month === "") {
            var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b>Not completed fields!</b><br/>Please type Supplier and Month completely before add @ViewBag.Title Detail.</small></div>'
            $('#crudInvoiceRecapError').html(errMsg);
            return false;
        }

        var formaction = $("#InvoiceRecapAction").val();

        if (action === 'Reprocess') {
            reloadGridInvoiceRecapDetail('Create');
        } else {

            if (formaction == "Update" && action == "Create") {
                $('#crudReprocessModal').modal('show');
            } else {
                reloadGridInvoiceRecapDetail(formaction);
                $('#crudReprocessModal').modal('hide');

            }
        }


        if (id != "") {
            var $grid = $("#jqGridCrudInvoiceRecapDetail");
            var rowData = $grid.jqGrid("getRowData", id),
                RowStatus = rowData.RowStatus.split(">");

            if (RowStatus != "") {
                RowStatus = RowStatus[1].split("<");
                RowStatus = RowStatus[0];
            }

        }

    }

    $(document).ready(function () {

        $(function () {
            $("#crudInvoiceRecapForm").submit(function (event) {
                event.preventDefault();
                if ($(this).valid()) {

                    var $grid = $("#jqGridCrudInvoiceRecapDetail");
                    var dataIDs = $grid.getDataIDs();
                    var datalen = (dataIDs.length);
                    var formaction = $("#InvoiceRecapAction").val();

                    if (datalen === 0 && formaction != "Delete") {
                        alert("Please add Part Item for @ViewBag.Title before submit.");
                        event.stopPropagation;
                        return false;
                    }

                    var formData = new FormData();
                    var recapnumber = $("#crud-InvoiceRecapNumber").val();
                    if (recapnumber === "") {
                        recapnumber = "@ViewBag.UserId";
                    }
                    var monthyear = $("#crud-InvoiceRecapDate").val();
                    //monthyear = monthyear.split("/");
                    var month =  moment(new Date(monthyear)).format('MM');
                    var years = moment(new Date(monthyear)).format('YYYY');

                    let dates = $('#crud-InvoiceRecapMonth').val();
                    dates = dates.split(" - ");
                    let startdate = dates[0];
                    let enddate = dates[1];

                    //console.log(month + ' ' + years + ' ' + startdate + ' ' + enddate);
                    //return false;

                    var jsonData = {
                        InvoiceRecap: {
                            RecapNumber     : recapnumber,
                            RecapDate       : $("#crud-InvoiceRecapDate").val(),
                            RecapYear       : years,
                            RecapMonth      : month,
                            ReceiveStartDate: startdate,
                            ReceiveEndDate  : enddate,
                            InvoiceNumber   : $("#crud-InvoiceRecapInvoiceNumber").val(),
                            TaxInvoice      : $("#crud-InvoiceRecapTaxInvoice").val(),
                            SupplierId      : $("#crud-InvoiceRecapSupplierId").val(),
                            TotalPrice      : 0,
                            PPN             : 0,
                            PPH23           : 0,
                            DebitNote       : 0,
                            Payment         : 0,
                            Remarks         : $("#crud-InvoiceRecapRemarks").val(),
                            Status          : null,
                            Paid            : null,
                            EditDate        : null,
                            UserID          : null
                        },
                        ApprovalId: '@ViewBag.ApprovalId',
                        uid: "@ViewBag.UserId",
                        formAction: $("#InvoiceRecapAction").val()
                    };

                    formData.append("jsonData", JSON.stringify(jsonData));

                    $.ajax({
                        url: '@Url.Action("crudInvoiceRecapList", "FinanceAccounting")',
                        type: 'POST',
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        dataType: "JSON",
                        data: formData,
                        success: function (data) {
                            $('#crudInvoiceRecapModal').modal('hide');
                            var act = $("#InvoiceRecapAction").val();
                            act = act.toLowerCase();
                            doSuccess(data, act);
                        },
                        error: function (xhr, desc, err) {
                            var responsetext = "";
                            try {
                                responsetext = eval(xhr.responseText);
                            } catch {
                                responsetext = xhr.responseText;
                            }
                            var errMsg = '<div class="alert alert-warning mt-2" role="alert"><small class="text-danger"><b> Error ' + xhr.status + '!</b><br/>' + responsetext + '</small></div>'
                            $('#crudInvoiceRecapError').html(errMsg);
                        }
                    });
                }
            });
        });
    });

    loadComboSupplier();

    function loadComboSupplier() {

        supplierid = $("#crud-InvoiceRecapSupplierId").val();

        $.ajax({
            url: '@Url.Action("SupplierListJson", "Suppliers")',
            type: "GET",
            dataType: "JSON",
            data: { SupplierId:supplierid },
            success: function (response) {

                var id = "#crud-InvoiceRecapSupplierId";

                $(id).html("");
                $(id).append(
                    $('<option></option>').val("").html("*Choose Supplier")
                );
                $.each(response, function (i, sup) {
                    $(id).append(
                        $('<option></option>').val(sup.SupplierId).html(sup.SupplierName)
                    );
                });
            }
        })
    }

    function showhidedetailCol(event) {

        var res = $("#sw-showhidedetail").prop("checked");
        var showhideCol = "";

        if (res === true) {
            showhideCol = 'showCol';
        } else {
            showhideCol = 'hideCol';
        }

        $("#jqGridCrudInvoiceRecapDetail").jqGrid("hideCol", "RecapId")
        $("#jqGridCrudInvoiceRecapDetail").jqGrid(showhideCol, "PPN")
        $("#jqGridCrudInvoiceRecapDetail").jqGrid(showhideCol, "PPH23")
        $("#jqGridCrudInvoiceRecapDetail").jqGrid(showhideCol, "DebitNote")
        $("#jqGridCrudInvoiceRecapDetail").jqGrid(showhideCol, "Payment")

    };
</script>

<script>
    var dataSelected = [];

    $(function () {

        /* call selectable */
        $("#jqGridCrudInvoiceRecapDetail").selectable({
            filter: 'tbody tr',
            selecting: function (event, ui) {
                dataSelected = []
            },
            selected: function (event, ui) {
                //console.log(ui);
                //console.log("SELECTED " + ui.selected["id"]);
                dataSelected.push(ui.selected.id)
            }
        });


        /* call context menu */
        var $contextMenu = $("#contextMenu");

        $("body").on("contextmenu", "#jqGridCrudInvoiceRecapDetail", function (e) {

            $contextMenu.css({
                display: "block",
                left: e.pageX,
                top: e.pageY
            });
            //debugger;
            return false;
        });

        $('html').click(function () {
            $contextMenu.hide();
        });

        $("#contextMenu li a").click(function (e) {
            var f = $(this);
            //debugger;
        });

    });

    function selectContextMenu(id, obj) {

        var i, count, $grid = $("#jqGridCrudInvoiceRecapDetail");
        var selRows = $grid.jqGrid('getGridParam', 'selarrrow');
        var dataall = $grid.getDataIDs();

        switch (id) {
            case 1:
                var datasel = dataSelected.filter((item) => !selRows.includes(item));
                for (i = 0, count = datasel.length; i < count; i += 1) {
                    parameters =
                    {
                        Selected: true,
                    }
                    $grid.jqGrid('setRowData', datasel[i], parameters);
                    selectedRecap(datasel[i]);
                }
                break;
            case 2:
                var datasel = dataall.filter((item) => !selRows.includes(item));
                for (i = 0, count = datasel.length; i < count; i += 1) {
                    parameters =
                    {
                        Selected: true,
                    }
                    $grid.jqGrid('setRowData', datasel[i], parameters);
                    selectedRecap(datasel[i]);
                }
                break;
            case 3:
                var datasel = dataSelected.filter((item) => !selRows.includes(item));
                for (i = 0, count = datasel.length; i < count; i += 1) {
                    parameters =
                    {
                        Selected: false,
                    }
                    $grid.jqGrid('setRowData', datasel[i], parameters);
                    selectedRecap(datasel[i]);
                }
                break;
            case 4:
                var datasel = dataall.filter((item) => !selRows.includes(item));
                for (i = 0, count = datasel.length; i < count; i += 1) {
                    parameters =
                    {
                        Selected: false,
                    }
                    $grid.jqGrid('setRowData', datasel[i], parameters);
                    selectedRecap(datasel[i]);
                }
                break;
            //case 5:
            //    var selectedRows = $grid.getGridParam('selarrrow');
            //    var data = [];
            //    $.each(selectedRows, function (i, sel) {
            //        data.push(sel);
            //    });
            //    $.each(data, function (i, rowid) {
            //        $grid.jqGrid('delRowData', rowid);
            //    });
            //    break;
        }
    }
</script>

<style>
    .ui-selected {
        background-color: #b6ff00
    }

        .ui-selected:hover {
            background-color: #00ff21
        }

    #contextMenu {
        position: absolute;
        display: none;
        z-index: 2028;
    }
</style>